{"version":3,"sources":["backand.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","backand","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","process","factory","ES6Promise","objectOrFunction","x","isFunction","setScheduler","scheduleFn","customSchedulerFn","setAsap","asapFn","asap","useNextTick","nextTick","flush","useVertxTimer","vertxNext","useSetTimeout","useMutationObserver","iterations","observer","BrowserMutationObserver","node","document","createTextNode","observe","characterData","data","useMessageChannel","channel","MessageChannel","port1","onmessage","port2","postMessage","globalSetTimeout","setTimeout","len","callback","queue","arg","undefined","attemptVertx","vertx","runOnLoop","runOnContext","then","onFulfillment","onRejection","_arguments","arguments","parent","child","constructor","noop","PROMISE_ID","makePromise","_state","invokeCallback","_result","subscribe","resolve","object","Constructor","promise","_resolve","selfFulfillment","TypeError","cannotReturnOwn","getThen","error","GET_THEN_ERROR","tryThen","value","fulfillmentHandler","rejectionHandler","handleForeignThenable","thenable","sealed","fulfill","reason","_reject","_label","handleOwnThenable","FULFILLED","REJECTED","handleMaybeThenable","maybeThenable","then$$","publishRejection","_onerror","publish","PENDING","_subscribers","subscribers","settled","detail","ErrorObject","tryCatch","TRY_CATCH_ERROR","hasCallback","succeeded","failed","initializePromise","resolver","nextId","id","Enumerator","input","_instanceConstructor","isArray","_input","_remaining","Array","_enumerate","validationError","all","entries","race","reject","_","needsResolver","needsNew","Promise","polyfill","local","Function","P","promiseToString","Object","prototype","toString","cast","_isArray","scheduleFlush","browserWindow","browserGlobal","MutationObserver","WebKitMutationObserver","isNode","isWorker","Uint8ClampedArray","importScripts","Math","random","substring","_eachEntry","entry","c","resolve$$","_then","_settledAt","_willSettleAt","state","enumerator","_setScheduler","_setAsap","_asap","catch","_process","2","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","runClearTimeout","marker","cachedClearTimeout","clearTimeout","cleanUpNextTick","draining","currentQueue","concat","queueIndex","drainQueue","timeout","run","Item","array","args","push","apply","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","binding","name","cwd","chdir","dir","umask","3","defineProperty","EVENTS","SIGNIN","SIGNOUT","SIGNUP","URLS","token","signup","requestResetPassword","resetPassword","changePassword","socialSigninWithToken","signout","profile","objects","objectsAction","query","SOCIAL_PROVIDERS","github","label","url","css","backgroundColor","google","facebook","twitter","4","default","appName","anonymousToken","signUpToken","apiUrl","storage","localStorage","storagePrefix","manageRefreshToken","runSigninAfterSignup","runSocket","socketUrl","isMobile","5","_classCallCheck","instance","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","filter","create","fieldName","operator","operators","numeric","equals","notEquals","greaterThan","greaterThanOrEqualsTo","lessThan","lessThanOrEqualsTo","empty","notEmpty","date","text","startsWith","endsWith","contains","notContains","boolean","relation","in","sort","order","orders","asc","desc","exclude","options","metadata","totalRows","StorageAbstract","setItem","getItem","removeItem","clear","val","6","_interopRequireWildcard","obj","__esModule","newObj","hasOwnProperty","_interopRequireDefault","_extends","assign","source","_defaults","_defaults2","_constants","constants","_helpers","helpers","_storage","_storage2","_http","_http2","_socket","_socket2","_auth","_auth2","_object","_object2","_file","_file2","_query","_query2","_user","_user2","dataMatch","exec","location","href","JSON","parse","decodeURIComponent","replace","status","isIE","documentMode","stringify","opener","origin","init","config","utils","http","baseURL","ENV","interceptors","request","indexOf","get","headers","responseError","scb","ecb","Message","__handleRefreshToken__","response","file","user","defaults","socket","connect","Authorization","bind","./constants","./defaults","./helpers","./services/auth","./services/file","./services/object","./services/query","./services/user","./utils/http","./utils/socket","./utils/storage","7","__generateFakeResponse__","statusText","__dispatchEvent__","event","createEvent","initEvent","eventName","dispatchEvent","createEventObject","eventType","fireEvent","_es6Promise","details","refresh_token","__signinWithToken__","username","refreshToken","useAnonymousAuth","access_token","token_type","expires_in","role","firstName","lastName","fullName","regId","userId","set","AnonymousToken","signin","password","method","Content-Type","email","confirmPassword","parameters","SignUpToken","__getSocialUrl__","providerName","isSignup","isAutoSignUp","provider","action","autoSignUpParam","__socialAuth__","isSignUp","spec","popup","open","focus","_handler","type","protocol","hostname","port","res","newValue","removeEventListener","close","addEventListener","socialSignin","accessToken","params","signupIfNotSignedIn","patch","_patch$data$data$","newDetails","socialSignup","tokenData","encodeURIComponent","join","console","log","newPassword","resetToken","oldPassword","remove","disconnect","getSocialProviders","./../constants","./../defaults","es6-promise","8","upload","fileAction","filename","filedata","substr","9","__allowedParams__","allowedParams","newParams","param","getList","getOne","update","post","10","11","__getUserDetailsFromStorage__","getUserDetails","force","getUsername","getUserRole","getToken","getRefreshToken","12","createInstance","context","Http","_len","_key","_typeof","Symbol","iterator","XMLHttpRequest","withCredentials","responseType","auth","split","header","map","jheader","parts","req","_getHeaders","getAllResponseHeaders","_getData","getResponseHeader","responseText","paramsArr","setRequestHeader","send","cfg","_this","_handleError","_encodeParams","ontimeout","onabort","onreadystatechange","readyState","DONE","_res","_createResponse","_setHeaders","_setData","13","Socket","io","onArr","forceNew","info","forEach","fn","warn","14","_slicedToArray","sliceIterator","arr","_arr","_n","_d","_e","_s","_i","next","done","err","Storage","prefix","delimiter","item","_item$split","_item$split2"],"mappings":"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","file":"backand.min.js","sourcesContent":["(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.backand = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n(function (process,global){\n/*!\n * @overview es6-promise - a tiny implementation of Promises/A+.\n * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)\n * @license   Licensed under MIT license\n *            See https://raw.githubusercontent.com/stefanpenner/es6-promise/master/LICENSE\n * @version   4.0.5\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global.ES6Promise = factory());\n}(this, (function () { 'use strict';\n\nfunction objectOrFunction(x) {\n  return typeof x === 'function' || typeof x === 'object' && x !== null;\n}\n\nfunction isFunction(x) {\n  return typeof x === 'function';\n}\n\nvar _isArray = undefined;\nif (!Array.isArray) {\n  _isArray = function (x) {\n    return Object.prototype.toString.call(x) === '[object Array]';\n  };\n} else {\n  _isArray = Array.isArray;\n}\n\nvar isArray = _isArray;\n\nvar len = 0;\nvar vertxNext = undefined;\nvar customSchedulerFn = undefined;\n\nvar asap = function asap(callback, arg) {\n  queue[len] = callback;\n  queue[len + 1] = arg;\n  len += 2;\n  if (len === 2) {\n    // If len is 2, that means that we need to schedule an async flush.\n    // If additional callbacks are queued before the queue is flushed, they\n    // will be processed by this flush that we are scheduling.\n    if (customSchedulerFn) {\n      customSchedulerFn(flush);\n    } else {\n      scheduleFlush();\n    }\n  }\n};\n\nfunction setScheduler(scheduleFn) {\n  customSchedulerFn = scheduleFn;\n}\n\nfunction setAsap(asapFn) {\n  asap = asapFn;\n}\n\nvar browserWindow = typeof window !== 'undefined' ? window : undefined;\nvar browserGlobal = browserWindow || {};\nvar BrowserMutationObserver = browserGlobal.MutationObserver || browserGlobal.WebKitMutationObserver;\nvar isNode = typeof self === 'undefined' && typeof process !== 'undefined' && ({}).toString.call(process) === '[object process]';\n\n// test for web worker but not in IE10\nvar isWorker = typeof Uint8ClampedArray !== 'undefined' && typeof importScripts !== 'undefined' && typeof MessageChannel !== 'undefined';\n\n// node\nfunction useNextTick() {\n  // node version 0.10.x displays a deprecation warning when nextTick is used recursively\n  // see https://github.com/cujojs/when/issues/410 for details\n  return function () {\n    return process.nextTick(flush);\n  };\n}\n\n// vertx\nfunction useVertxTimer() {\n  if (typeof vertxNext !== 'undefined') {\n    return function () {\n      vertxNext(flush);\n    };\n  }\n\n  return useSetTimeout();\n}\n\nfunction useMutationObserver() {\n  var iterations = 0;\n  var observer = new BrowserMutationObserver(flush);\n  var node = document.createTextNode('');\n  observer.observe(node, { characterData: true });\n\n  return function () {\n    node.data = iterations = ++iterations % 2;\n  };\n}\n\n// web worker\nfunction useMessageChannel() {\n  var channel = new MessageChannel();\n  channel.port1.onmessage = flush;\n  return function () {\n    return channel.port2.postMessage(0);\n  };\n}\n\nfunction useSetTimeout() {\n  // Store setTimeout reference so es6-promise will be unaffected by\n  // other code modifying setTimeout (like sinon.useFakeTimers())\n  var globalSetTimeout = setTimeout;\n  return function () {\n    return globalSetTimeout(flush, 1);\n  };\n}\n\nvar queue = new Array(1000);\nfunction flush() {\n  for (var i = 0; i < len; i += 2) {\n    var callback = queue[i];\n    var arg = queue[i + 1];\n\n    callback(arg);\n\n    queue[i] = undefined;\n    queue[i + 1] = undefined;\n  }\n\n  len = 0;\n}\n\nfunction attemptVertx() {\n  try {\n    var r = require;\n    var vertx = r('vertx');\n    vertxNext = vertx.runOnLoop || vertx.runOnContext;\n    return useVertxTimer();\n  } catch (e) {\n    return useSetTimeout();\n  }\n}\n\nvar scheduleFlush = undefined;\n// Decide what async method to use to triggering processing of queued callbacks:\nif (isNode) {\n  scheduleFlush = useNextTick();\n} else if (BrowserMutationObserver) {\n  scheduleFlush = useMutationObserver();\n} else if (isWorker) {\n  scheduleFlush = useMessageChannel();\n} else if (browserWindow === undefined && typeof require === 'function') {\n  scheduleFlush = attemptVertx();\n} else {\n  scheduleFlush = useSetTimeout();\n}\n\nfunction then(onFulfillment, onRejection) {\n  var _arguments = arguments;\n\n  var parent = this;\n\n  var child = new this.constructor(noop);\n\n  if (child[PROMISE_ID] === undefined) {\n    makePromise(child);\n  }\n\n  var _state = parent._state;\n\n  if (_state) {\n    (function () {\n      var callback = _arguments[_state - 1];\n      asap(function () {\n        return invokeCallback(_state, child, callback, parent._result);\n      });\n    })();\n  } else {\n    subscribe(parent, child, onFulfillment, onRejection);\n  }\n\n  return child;\n}\n\n/**\n  `Promise.resolve` returns a promise that will become resolved with the\n  passed `value`. It is shorthand for the following:\n\n  ```javascript\n  let promise = new Promise(function(resolve, reject){\n    resolve(1);\n  });\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  let promise = Promise.resolve(1);\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  @method resolve\n  @static\n  @param {Any} value value that the returned promise will be resolved with\n  Useful for tooling.\n  @return {Promise} a promise that will become fulfilled with the given\n  `value`\n*/\nfunction resolve(object) {\n  /*jshint validthis:true */\n  var Constructor = this;\n\n  if (object && typeof object === 'object' && object.constructor === Constructor) {\n    return object;\n  }\n\n  var promise = new Constructor(noop);\n  _resolve(promise, object);\n  return promise;\n}\n\nvar PROMISE_ID = Math.random().toString(36).substring(16);\n\nfunction noop() {}\n\nvar PENDING = void 0;\nvar FULFILLED = 1;\nvar REJECTED = 2;\n\nvar GET_THEN_ERROR = new ErrorObject();\n\nfunction selfFulfillment() {\n  return new TypeError(\"You cannot resolve a promise with itself\");\n}\n\nfunction cannotReturnOwn() {\n  return new TypeError('A promises callback cannot return that same promise.');\n}\n\nfunction getThen(promise) {\n  try {\n    return promise.then;\n  } catch (error) {\n    GET_THEN_ERROR.error = error;\n    return GET_THEN_ERROR;\n  }\n}\n\nfunction tryThen(then, value, fulfillmentHandler, rejectionHandler) {\n  try {\n    then.call(value, fulfillmentHandler, rejectionHandler);\n  } catch (e) {\n    return e;\n  }\n}\n\nfunction handleForeignThenable(promise, thenable, then) {\n  asap(function (promise) {\n    var sealed = false;\n    var error = tryThen(then, thenable, function (value) {\n      if (sealed) {\n        return;\n      }\n      sealed = true;\n      if (thenable !== value) {\n        _resolve(promise, value);\n      } else {\n        fulfill(promise, value);\n      }\n    }, function (reason) {\n      if (sealed) {\n        return;\n      }\n      sealed = true;\n\n      _reject(promise, reason);\n    }, 'Settle: ' + (promise._label || ' unknown promise'));\n\n    if (!sealed && error) {\n      sealed = true;\n      _reject(promise, error);\n    }\n  }, promise);\n}\n\nfunction handleOwnThenable(promise, thenable) {\n  if (thenable._state === FULFILLED) {\n    fulfill(promise, thenable._result);\n  } else if (thenable._state === REJECTED) {\n    _reject(promise, thenable._result);\n  } else {\n    subscribe(thenable, undefined, function (value) {\n      return _resolve(promise, value);\n    }, function (reason) {\n      return _reject(promise, reason);\n    });\n  }\n}\n\nfunction handleMaybeThenable(promise, maybeThenable, then$$) {\n  if (maybeThenable.constructor === promise.constructor && then$$ === then && maybeThenable.constructor.resolve === resolve) {\n    handleOwnThenable(promise, maybeThenable);\n  } else {\n    if (then$$ === GET_THEN_ERROR) {\n      _reject(promise, GET_THEN_ERROR.error);\n    } else if (then$$ === undefined) {\n      fulfill(promise, maybeThenable);\n    } else if (isFunction(then$$)) {\n      handleForeignThenable(promise, maybeThenable, then$$);\n    } else {\n      fulfill(promise, maybeThenable);\n    }\n  }\n}\n\nfunction _resolve(promise, value) {\n  if (promise === value) {\n    _reject(promise, selfFulfillment());\n  } else if (objectOrFunction(value)) {\n    handleMaybeThenable(promise, value, getThen(value));\n  } else {\n    fulfill(promise, value);\n  }\n}\n\nfunction publishRejection(promise) {\n  if (promise._onerror) {\n    promise._onerror(promise._result);\n  }\n\n  publish(promise);\n}\n\nfunction fulfill(promise, value) {\n  if (promise._state !== PENDING) {\n    return;\n  }\n\n  promise._result = value;\n  promise._state = FULFILLED;\n\n  if (promise._subscribers.length !== 0) {\n    asap(publish, promise);\n  }\n}\n\nfunction _reject(promise, reason) {\n  if (promise._state !== PENDING) {\n    return;\n  }\n  promise._state = REJECTED;\n  promise._result = reason;\n\n  asap(publishRejection, promise);\n}\n\nfunction subscribe(parent, child, onFulfillment, onRejection) {\n  var _subscribers = parent._subscribers;\n  var length = _subscribers.length;\n\n  parent._onerror = null;\n\n  _subscribers[length] = child;\n  _subscribers[length + FULFILLED] = onFulfillment;\n  _subscribers[length + REJECTED] = onRejection;\n\n  if (length === 0 && parent._state) {\n    asap(publish, parent);\n  }\n}\n\nfunction publish(promise) {\n  var subscribers = promise._subscribers;\n  var settled = promise._state;\n\n  if (subscribers.length === 0) {\n    return;\n  }\n\n  var child = undefined,\n      callback = undefined,\n      detail = promise._result;\n\n  for (var i = 0; i < subscribers.length; i += 3) {\n    child = subscribers[i];\n    callback = subscribers[i + settled];\n\n    if (child) {\n      invokeCallback(settled, child, callback, detail);\n    } else {\n      callback(detail);\n    }\n  }\n\n  promise._subscribers.length = 0;\n}\n\nfunction ErrorObject() {\n  this.error = null;\n}\n\nvar TRY_CATCH_ERROR = new ErrorObject();\n\nfunction tryCatch(callback, detail) {\n  try {\n    return callback(detail);\n  } catch (e) {\n    TRY_CATCH_ERROR.error = e;\n    return TRY_CATCH_ERROR;\n  }\n}\n\nfunction invokeCallback(settled, promise, callback, detail) {\n  var hasCallback = isFunction(callback),\n      value = undefined,\n      error = undefined,\n      succeeded = undefined,\n      failed = undefined;\n\n  if (hasCallback) {\n    value = tryCatch(callback, detail);\n\n    if (value === TRY_CATCH_ERROR) {\n      failed = true;\n      error = value.error;\n      value = null;\n    } else {\n      succeeded = true;\n    }\n\n    if (promise === value) {\n      _reject(promise, cannotReturnOwn());\n      return;\n    }\n  } else {\n    value = detail;\n    succeeded = true;\n  }\n\n  if (promise._state !== PENDING) {\n    // noop\n  } else if (hasCallback && succeeded) {\n      _resolve(promise, value);\n    } else if (failed) {\n      _reject(promise, error);\n    } else if (settled === FULFILLED) {\n      fulfill(promise, value);\n    } else if (settled === REJECTED) {\n      _reject(promise, value);\n    }\n}\n\nfunction initializePromise(promise, resolver) {\n  try {\n    resolver(function resolvePromise(value) {\n      _resolve(promise, value);\n    }, function rejectPromise(reason) {\n      _reject(promise, reason);\n    });\n  } catch (e) {\n    _reject(promise, e);\n  }\n}\n\nvar id = 0;\nfunction nextId() {\n  return id++;\n}\n\nfunction makePromise(promise) {\n  promise[PROMISE_ID] = id++;\n  promise._state = undefined;\n  promise._result = undefined;\n  promise._subscribers = [];\n}\n\nfunction Enumerator(Constructor, input) {\n  this._instanceConstructor = Constructor;\n  this.promise = new Constructor(noop);\n\n  if (!this.promise[PROMISE_ID]) {\n    makePromise(this.promise);\n  }\n\n  if (isArray(input)) {\n    this._input = input;\n    this.length = input.length;\n    this._remaining = input.length;\n\n    this._result = new Array(this.length);\n\n    if (this.length === 0) {\n      fulfill(this.promise, this._result);\n    } else {\n      this.length = this.length || 0;\n      this._enumerate();\n      if (this._remaining === 0) {\n        fulfill(this.promise, this._result);\n      }\n    }\n  } else {\n    _reject(this.promise, validationError());\n  }\n}\n\nfunction validationError() {\n  return new Error('Array Methods must be provided an Array');\n};\n\nEnumerator.prototype._enumerate = function () {\n  var length = this.length;\n  var _input = this._input;\n\n  for (var i = 0; this._state === PENDING && i < length; i++) {\n    this._eachEntry(_input[i], i);\n  }\n};\n\nEnumerator.prototype._eachEntry = function (entry, i) {\n  var c = this._instanceConstructor;\n  var resolve$$ = c.resolve;\n\n  if (resolve$$ === resolve) {\n    var _then = getThen(entry);\n\n    if (_then === then && entry._state !== PENDING) {\n      this._settledAt(entry._state, i, entry._result);\n    } else if (typeof _then !== 'function') {\n      this._remaining--;\n      this._result[i] = entry;\n    } else if (c === Promise) {\n      var promise = new c(noop);\n      handleMaybeThenable(promise, entry, _then);\n      this._willSettleAt(promise, i);\n    } else {\n      this._willSettleAt(new c(function (resolve$$) {\n        return resolve$$(entry);\n      }), i);\n    }\n  } else {\n    this._willSettleAt(resolve$$(entry), i);\n  }\n};\n\nEnumerator.prototype._settledAt = function (state, i, value) {\n  var promise = this.promise;\n\n  if (promise._state === PENDING) {\n    this._remaining--;\n\n    if (state === REJECTED) {\n      _reject(promise, value);\n    } else {\n      this._result[i] = value;\n    }\n  }\n\n  if (this._remaining === 0) {\n    fulfill(promise, this._result);\n  }\n};\n\nEnumerator.prototype._willSettleAt = function (promise, i) {\n  var enumerator = this;\n\n  subscribe(promise, undefined, function (value) {\n    return enumerator._settledAt(FULFILLED, i, value);\n  }, function (reason) {\n    return enumerator._settledAt(REJECTED, i, reason);\n  });\n};\n\n/**\n  `Promise.all` accepts an array of promises, and returns a new promise which\n  is fulfilled with an array of fulfillment values for the passed promises, or\n  rejected with the reason of the first passed promise to be rejected. It casts all\n  elements of the passed iterable to promises as it runs this algorithm.\n\n  Example:\n\n  ```javascript\n  let promise1 = resolve(1);\n  let promise2 = resolve(2);\n  let promise3 = resolve(3);\n  let promises = [ promise1, promise2, promise3 ];\n\n  Promise.all(promises).then(function(array){\n    // The array here would be [ 1, 2, 3 ];\n  });\n  ```\n\n  If any of the `promises` given to `all` are rejected, the first promise\n  that is rejected will be given as an argument to the returned promises's\n  rejection handler. For example:\n\n  Example:\n\n  ```javascript\n  let promise1 = resolve(1);\n  let promise2 = reject(new Error(\"2\"));\n  let promise3 = reject(new Error(\"3\"));\n  let promises = [ promise1, promise2, promise3 ];\n\n  Promise.all(promises).then(function(array){\n    // Code here never runs because there are rejected promises!\n  }, function(error) {\n    // error.message === \"2\"\n  });\n  ```\n\n  @method all\n  @static\n  @param {Array} entries array of promises\n  @param {String} label optional string for labeling the promise.\n  Useful for tooling.\n  @return {Promise} promise that is fulfilled when all `promises` have been\n  fulfilled, or rejected if any of them become rejected.\n  @static\n*/\nfunction all(entries) {\n  return new Enumerator(this, entries).promise;\n}\n\n/**\n  `Promise.race` returns a new promise which is settled in the same way as the\n  first passed promise to settle.\n\n  Example:\n\n  ```javascript\n  let promise1 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 2');\n    }, 100);\n  });\n\n  Promise.race([promise1, promise2]).then(function(result){\n    // result === 'promise 2' because it was resolved before promise1\n    // was resolved.\n  });\n  ```\n\n  `Promise.race` is deterministic in that only the state of the first\n  settled promise matters. For example, even if other promises given to the\n  `promises` array argument are resolved, but the first settled promise has\n  become rejected before the other promises became fulfilled, the returned\n  promise will become rejected:\n\n  ```javascript\n  let promise1 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      reject(new Error('promise 2'));\n    }, 100);\n  });\n\n  Promise.race([promise1, promise2]).then(function(result){\n    // Code here never runs\n  }, function(reason){\n    // reason.message === 'promise 2' because promise 2 became rejected before\n    // promise 1 became fulfilled\n  });\n  ```\n\n  An example real-world use case is implementing timeouts:\n\n  ```javascript\n  Promise.race([ajax('foo.json'), timeout(5000)])\n  ```\n\n  @method race\n  @static\n  @param {Array} promises array of promises to observe\n  Useful for tooling.\n  @return {Promise} a promise which settles in the same way as the first passed\n  promise to settle.\n*/\nfunction race(entries) {\n  /*jshint validthis:true */\n  var Constructor = this;\n\n  if (!isArray(entries)) {\n    return new Constructor(function (_, reject) {\n      return reject(new TypeError('You must pass an array to race.'));\n    });\n  } else {\n    return new Constructor(function (resolve, reject) {\n      var length = entries.length;\n      for (var i = 0; i < length; i++) {\n        Constructor.resolve(entries[i]).then(resolve, reject);\n      }\n    });\n  }\n}\n\n/**\n  `Promise.reject` returns a promise rejected with the passed `reason`.\n  It is shorthand for the following:\n\n  ```javascript\n  let promise = new Promise(function(resolve, reject){\n    reject(new Error('WHOOPS'));\n  });\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  let promise = Promise.reject(new Error('WHOOPS'));\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  @method reject\n  @static\n  @param {Any} reason value that the returned promise will be rejected with.\n  Useful for tooling.\n  @return {Promise} a promise rejected with the given `reason`.\n*/\nfunction reject(reason) {\n  /*jshint validthis:true */\n  var Constructor = this;\n  var promise = new Constructor(noop);\n  _reject(promise, reason);\n  return promise;\n}\n\nfunction needsResolver() {\n  throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');\n}\n\nfunction needsNew() {\n  throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\");\n}\n\n/**\n  Promise objects represent the eventual result of an asynchronous operation. The\n  primary way of interacting with a promise is through its `then` method, which\n  registers callbacks to receive either a promise's eventual value or the reason\n  why the promise cannot be fulfilled.\n\n  Terminology\n  -----------\n\n  - `promise` is an object or function with a `then` method whose behavior conforms to this specification.\n  - `thenable` is an object or function that defines a `then` method.\n  - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).\n  - `exception` is a value that is thrown using the throw statement.\n  - `reason` is a value that indicates why a promise was rejected.\n  - `settled` the final resting state of a promise, fulfilled or rejected.\n\n  A promise can be in one of three states: pending, fulfilled, or rejected.\n\n  Promises that are fulfilled have a fulfillment value and are in the fulfilled\n  state.  Promises that are rejected have a rejection reason and are in the\n  rejected state.  A fulfillment value is never a thenable.\n\n  Promises can also be said to *resolve* a value.  If this value is also a\n  promise, then the original promise's settled state will match the value's\n  settled state.  So a promise that *resolves* a promise that rejects will\n  itself reject, and a promise that *resolves* a promise that fulfills will\n  itself fulfill.\n\n\n  Basic Usage:\n  ------------\n\n  ```js\n  let promise = new Promise(function(resolve, reject) {\n    // on success\n    resolve(value);\n\n    // on failure\n    reject(reason);\n  });\n\n  promise.then(function(value) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Advanced Usage:\n  ---------------\n\n  Promises shine when abstracting away asynchronous interactions such as\n  `XMLHttpRequest`s.\n\n  ```js\n  function getJSON(url) {\n    return new Promise(function(resolve, reject){\n      let xhr = new XMLHttpRequest();\n\n      xhr.open('GET', url);\n      xhr.onreadystatechange = handler;\n      xhr.responseType = 'json';\n      xhr.setRequestHeader('Accept', 'application/json');\n      xhr.send();\n\n      function handler() {\n        if (this.readyState === this.DONE) {\n          if (this.status === 200) {\n            resolve(this.response);\n          } else {\n            reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));\n          }\n        }\n      };\n    });\n  }\n\n  getJSON('/posts.json').then(function(json) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Unlike callbacks, promises are great composable primitives.\n\n  ```js\n  Promise.all([\n    getJSON('/posts'),\n    getJSON('/comments')\n  ]).then(function(values){\n    values[0] // => postsJSON\n    values[1] // => commentsJSON\n\n    return values;\n  });\n  ```\n\n  @class Promise\n  @param {function} resolver\n  Useful for tooling.\n  @constructor\n*/\nfunction Promise(resolver) {\n  this[PROMISE_ID] = nextId();\n  this._result = this._state = undefined;\n  this._subscribers = [];\n\n  if (noop !== resolver) {\n    typeof resolver !== 'function' && needsResolver();\n    this instanceof Promise ? initializePromise(this, resolver) : needsNew();\n  }\n}\n\nPromise.all = all;\nPromise.race = race;\nPromise.resolve = resolve;\nPromise.reject = reject;\nPromise._setScheduler = setScheduler;\nPromise._setAsap = setAsap;\nPromise._asap = asap;\n\nPromise.prototype = {\n  constructor: Promise,\n\n  /**\n    The primary way of interacting with a promise is through its `then` method,\n    which registers callbacks to receive either a promise's eventual value or the\n    reason why the promise cannot be fulfilled.\n  \n    ```js\n    findUser().then(function(user){\n      // user is available\n    }, function(reason){\n      // user is unavailable, and you are given the reason why\n    });\n    ```\n  \n    Chaining\n    --------\n  \n    The return value of `then` is itself a promise.  This second, 'downstream'\n    promise is resolved with the return value of the first promise's fulfillment\n    or rejection handler, or rejected if the handler throws an exception.\n  \n    ```js\n    findUser().then(function (user) {\n      return user.name;\n    }, function (reason) {\n      return 'default name';\n    }).then(function (userName) {\n      // If `findUser` fulfilled, `userName` will be the user's name, otherwise it\n      // will be `'default name'`\n    });\n  \n    findUser().then(function (user) {\n      throw new Error('Found user, but still unhappy');\n    }, function (reason) {\n      throw new Error('`findUser` rejected and we're unhappy');\n    }).then(function (value) {\n      // never reached\n    }, function (reason) {\n      // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.\n      // If `findUser` rejected, `reason` will be '`findUser` rejected and we're unhappy'.\n    });\n    ```\n    If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.\n  \n    ```js\n    findUser().then(function (user) {\n      throw new PedagogicalException('Upstream error');\n    }).then(function (value) {\n      // never reached\n    }).then(function (value) {\n      // never reached\n    }, function (reason) {\n      // The `PedgagocialException` is propagated all the way down to here\n    });\n    ```\n  \n    Assimilation\n    ------------\n  \n    Sometimes the value you want to propagate to a downstream promise can only be\n    retrieved asynchronously. This can be achieved by returning a promise in the\n    fulfillment or rejection handler. The downstream promise will then be pending\n    until the returned promise is settled. This is called *assimilation*.\n  \n    ```js\n    findUser().then(function (user) {\n      return findCommentsByAuthor(user);\n    }).then(function (comments) {\n      // The user's comments are now available\n    });\n    ```\n  \n    If the assimliated promise rejects, then the downstream promise will also reject.\n  \n    ```js\n    findUser().then(function (user) {\n      return findCommentsByAuthor(user);\n    }).then(function (comments) {\n      // If `findCommentsByAuthor` fulfills, we'll have the value here\n    }, function (reason) {\n      // If `findCommentsByAuthor` rejects, we'll have the reason here\n    });\n    ```\n  \n    Simple Example\n    --------------\n  \n    Synchronous Example\n  \n    ```javascript\n    let result;\n  \n    try {\n      result = findResult();\n      // success\n    } catch(reason) {\n      // failure\n    }\n    ```\n  \n    Errback Example\n  \n    ```js\n    findResult(function(result, err){\n      if (err) {\n        // failure\n      } else {\n        // success\n      }\n    });\n    ```\n  \n    Promise Example;\n  \n    ```javascript\n    findResult().then(function(result){\n      // success\n    }, function(reason){\n      // failure\n    });\n    ```\n  \n    Advanced Example\n    --------------\n  \n    Synchronous Example\n  \n    ```javascript\n    let author, books;\n  \n    try {\n      author = findAuthor();\n      books  = findBooksByAuthor(author);\n      // success\n    } catch(reason) {\n      // failure\n    }\n    ```\n  \n    Errback Example\n  \n    ```js\n  \n    function foundBooks(books) {\n  \n    }\n  \n    function failure(reason) {\n  \n    }\n  \n    findAuthor(function(author, err){\n      if (err) {\n        failure(err);\n        // failure\n      } else {\n        try {\n          findBoooksByAuthor(author, function(books, err) {\n            if (err) {\n              failure(err);\n            } else {\n              try {\n                foundBooks(books);\n              } catch(reason) {\n                failure(reason);\n              }\n            }\n          });\n        } catch(error) {\n          failure(err);\n        }\n        // success\n      }\n    });\n    ```\n  \n    Promise Example;\n  \n    ```javascript\n    findAuthor().\n      then(findBooksByAuthor).\n      then(function(books){\n        // found books\n    }).catch(function(reason){\n      // something went wrong\n    });\n    ```\n  \n    @method then\n    @param {Function} onFulfilled\n    @param {Function} onRejected\n    Useful for tooling.\n    @return {Promise}\n  */\n  then: then,\n\n  /**\n    `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same\n    as the catch block of a try/catch statement.\n  \n    ```js\n    function findAuthor(){\n      throw new Error('couldn't find that author');\n    }\n  \n    // synchronous\n    try {\n      findAuthor();\n    } catch(reason) {\n      // something went wrong\n    }\n  \n    // async with promises\n    findAuthor().catch(function(reason){\n      // something went wrong\n    });\n    ```\n  \n    @method catch\n    @param {Function} onRejection\n    Useful for tooling.\n    @return {Promise}\n  */\n  'catch': function _catch(onRejection) {\n    return this.then(null, onRejection);\n  }\n};\n\nfunction polyfill() {\n    var local = undefined;\n\n    if (typeof global !== 'undefined') {\n        local = global;\n    } else if (typeof self !== 'undefined') {\n        local = self;\n    } else {\n        try {\n            local = Function('return this')();\n        } catch (e) {\n            throw new Error('polyfill failed because global object is unavailable in this environment');\n        }\n    }\n\n    var P = local.Promise;\n\n    if (P) {\n        var promiseToString = null;\n        try {\n            promiseToString = Object.prototype.toString.call(P.resolve());\n        } catch (e) {\n            // silently ignored\n        }\n\n        if (promiseToString === '[object Promise]' && !P.cast) {\n            return;\n        }\n    }\n\n    local.Promise = Promise;\n}\n\n// Strange compat..\nPromise.polyfill = polyfill;\nPromise.Promise = Promise;\n\nreturn Promise;\n\n})));\n\n}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"_process\":2}],2:[function(require,module,exports){\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n},{}],3:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar EVENTS = exports.EVENTS = {\n  SIGNIN: 'SIGNIN',\n  SIGNOUT: 'SIGNOUT',\n  SIGNUP: 'SIGNUP'\n};\n\nvar URLS = exports.URLS = {\n  token: 'token',\n  signup: '1/user/signup',\n  requestResetPassword: '1/user/requestResetPassword',\n  resetPassword: '1/user/resetPassword',\n  changePassword: '1/user/changePassword',\n  // socialLoginWithCode: '1/user/PROVIDER/code',\n  socialSigninWithToken: '1/user/PROVIDER/token',\n  // socialSingupWithCode: '1/user/PROVIDER/signupCode',\n  signout: '1/user/signout',\n  profile: 'api/account/profile',\n  objects: '1/objects',\n  objectsAction: '1/objects/action',\n  query: '1/query/data'\n};\n\nvar SOCIAL_PROVIDERS = exports.SOCIAL_PROVIDERS = {\n  github: { name: 'github', label: 'Github', url: 'www.github.com', css: { backgroundColor: '#444' }, id: 1 },\n  google: { name: 'google', label: 'Google', url: 'www.google.com', css: { backgroundColor: '#dd4b39' }, id: 2 },\n  facebook: { name: 'facebook', label: 'Facebook', url: 'www.facebook.com', css: { backgroundColor: '#3b5998' }, id: 3 },\n  twitter: { name: 'twitter', label: 'Twitter', url: 'www.twitter.com', css: { backgroundColor: '#55acee' }, id: 4 }\n};\n\n},{}],4:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  appName: null,\n  anonymousToken: null,\n  signUpToken: null,\n  apiUrl: 'https://api.backand.com',\n  storage: window.localStorage,\n  storagePrefix: 'BACKAND_',\n  manageRefreshToken: true,\n  runSigninAfterSignup: true,\n  runSocket: false,\n  socketUrl: 'https://socket.backand.com',\n  isMobile: false\n};\n\n},{}],5:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar filter = exports.filter = {\n  create: function create(fieldName, operator, value) {\n    return {\n      fieldName: fieldName,\n      operator: operator,\n      value: value\n    };\n  },\n  operators: {\n    numeric: { equals: \"equals\", notEquals: \"notEquals\", greaterThan: \"greaterThan\", greaterThanOrEqualsTo: \"greaterThanOrEqualsTo\", lessThan: \"lessThan\", lessThanOrEqualsTo: \"lessThanOrEqualsTo\", empty: \"empty\", notEmpty: \"notEmpty\" },\n    date: { equals: \"equals\", notEquals: \"notEquals\", greaterThan: \"greaterThan\", greaterThanOrEqualsTo: \"greaterThanOrEqualsTo\", lessThan: \"lessThan\", lessThanOrEqualsTo: \"lessThanOrEqualsTo\", empty: \"empty\", notEmpty: \"notEmpty\" },\n    text: { equals: \"equals\", notEquals: \"notEquals\", startsWith: \"startsWith\", endsWith: \"endsWith\", contains: \"contains\", notContains: \"notContains\", empty: \"empty\", notEmpty: \"notEmpty\" },\n    boolean: { equals: \"equals\" },\n    relation: { in: \"in\" }\n  }\n};\n\nvar sort = exports.sort = {\n  create: function create(fieldName, order) {\n    return {\n      fieldName: fieldName,\n      order: order\n    };\n  },\n  orders: { asc: \"asc\", desc: \"desc\" }\n};\n\nvar exclude = exports.exclude = {\n  options: { metadata: \"metadata\", totalRows: \"totalRows\", all: \"metadata,totalRows\" }\n};\n\nvar StorageAbstract = exports.StorageAbstract = function () {\n  function StorageAbstract() {\n    _classCallCheck(this, StorageAbstract);\n\n    if (this.constructor === StorageAbstract) {\n      throw new TypeError(\"Can not construct abstract class.\");\n    }\n    if (this.setItem === undefined || this.setItem === StorageAbstract.prototype.setItem) {\n      throw new TypeError(\"Must override setItem method.\");\n    }\n    if (this.getItem === undefined || this.getItem === StorageAbstract.prototype.getItem) {\n      throw new TypeError(\"Must override getItem method.\");\n    }\n    if (this.removeItem === undefined || this.removeItem === StorageAbstract.prototype.removeItem) {\n      throw new TypeError(\"Must override removeItem method.\");\n    }\n    if (this.clear === undefined || this.clear === StorageAbstract.prototype.clear) {\n      throw new TypeError(\"Must override clear method.\");\n    }\n    // this.data = {};\n  }\n\n  _createClass(StorageAbstract, [{\n    key: \"setItem\",\n    value: function setItem(id, val) {\n      throw new TypeError(\"Do not call abstract method setItem from child.\");\n      // return this.data[id] = String(val);\n    }\n  }, {\n    key: \"getItem\",\n    value: function getItem(id) {\n      throw new TypeError(\"Do not call abstract method getItem from child.\");\n      // return this.data.hasOwnProperty(id) ? this._data[id] : null;\n    }\n  }, {\n    key: \"removeItem\",\n    value: function removeItem(id) {\n      throw new TypeError(\"Do not call abstract method removeItem from child.\");\n      // delete this.data[id];\n      // return null;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      throw new TypeError(\"Do not call abstract method clear from child.\");\n      // return this.data = {};\n    }\n  }]);\n\n  return StorageAbstract;\n}();\n\n},{}],6:[function(require,module,exports){\n'use strict';\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /***********************************************\r\n                                                                                                                                                                                                                                                                   * backand JavaScript Library\r\n                                                                                                                                                                                                                                                                   * Authors: backand\r\n                                                                                                                                                                                                                                                                   * License: MIT (http://www.opensource.org/licenses/mit-license.php)\r\n                                                                                                                                                                                                                                                                   * Compiled At: 26/11/2016\r\n                                                                                                                                                                                                                                                                   ***********************************************/\n\n\nvar _defaults = require('./defaults');\n\nvar _defaults2 = _interopRequireDefault(_defaults);\n\nvar _constants = require('./constants');\n\nvar constants = _interopRequireWildcard(_constants);\n\nvar _helpers = require('./helpers');\n\nvar helpers = _interopRequireWildcard(_helpers);\n\nvar _storage = require('./utils/storage');\n\nvar _storage2 = _interopRequireDefault(_storage);\n\nvar _http = require('./utils/http');\n\nvar _http2 = _interopRequireDefault(_http);\n\nvar _socket = require('./utils/socket');\n\nvar _socket2 = _interopRequireDefault(_socket);\n\nvar _auth = require('./services/auth');\n\nvar _auth2 = _interopRequireDefault(_auth);\n\nvar _object = require('./services/object');\n\nvar _object2 = _interopRequireDefault(_object);\n\nvar _file = require('./services/file');\n\nvar _file2 = _interopRequireDefault(_file);\n\nvar _query = require('./services/query');\n\nvar _query2 = _interopRequireDefault(_query);\n\nvar _user = require('./services/user');\n\nvar _user2 = _interopRequireDefault(_user);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// get data from url in social sign-in popup\n// let dataMatch = /\\?(data|error)=(.+)/.exec(window.location.href);\nvar dataMatch = /(data|error)=(.+)/.exec(window.location.href);\nif (dataMatch && dataMatch[1] && dataMatch[2]) {\n  var data = {\n    data: JSON.parse(decodeURIComponent(dataMatch[2].replace(/#.*/, '')))\n  };\n  data.status = dataMatch[1] === 'data' ? 200 : 0;\n  var isIE = false || !!document.documentMode;\n  if (!isIE) {\n    window.opener.postMessage(JSON.stringify(data), location.origin);\n  } else {\n    localStorage.setItem('SOCIAL_DATA', JSON.stringify(data));\n  }\n}\n\nvar backand = {\n  constants: constants,\n  helpers: helpers\n};\nbackand.init = function () {\n  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n\n  // combine defaults with user config\n  _extends(_defaults2.default, config);\n  // console.log(defaults);\n\n  // verify new defaults\n  if (!_defaults2.default.appName) throw new Error('appName is missing');\n  if (!_defaults2.default.anonymousToken) throw new Error('anonymousToken is missing');\n  if (!_defaults2.default.signUpToken) throw new Error('signUpToken is missing');\n\n  // init utils\n  var utils = {\n    storage: new _storage2.default(_defaults2.default.storage, _defaults2.default.storagePrefix),\n    http: _http2.default.create({\n      baseURL: _defaults2.default.apiUrl\n    }),\n    isIE: window.document && (false || !!document.documentMode),\n    ENV: 'browser'\n  };\n  if (_defaults2.default.runSocket) {\n    utils['socket'] = new _socket2.default(_defaults2.default.socketUrl);\n  }\n\n  utils.http.config.interceptors = {\n    request: function request(config) {\n      if (config.url.indexOf(constants.URLS.token) === -1 && backand.utils.storage.get('user')) {\n        config.headers = _extends({}, config.headers, backand.utils.storage.get('user').token);\n      }\n    },\n    responseError: function responseError(error, config, resolve, reject, scb, ecb) {\n      if (config.url.indexOf(constants.URLS.token) === -1 && _defaults2.default.manageRefreshToken && error.status === 401 && error.data && error.data.Message === 'invalid or expired token') {\n        _auth2.default.__handleRefreshToken__.call(utils, error).then(function (response) {\n          backand.utils.http.request(config, scb, ecb);\n        }).catch(function (error) {\n          ecb && ecb(error);\n          reject(error);\n        });\n      } else {\n        ecb && ecb(error);\n        reject(error);\n      }\n    }\n  };\n\n  // expose backand namespace to window\n  delete backand.init;\n  _extends(backand, _auth2.default, {\n    object: _object2.default,\n    file: _file2.default,\n    query: _query2.default,\n    user: _user2.default,\n    utils: utils,\n    defaults: _defaults2.default\n  });\n  if (_defaults2.default.runSocket) {\n    backand.utils.storage.get('user') && backand.utils.socket.connect(backand.utils.storage.get('user').token.Authorization || null, _defaults2.default.anonymousToken, _defaults2.default.appName);\n    _extends(backand, { on: backand.utils.socket.on.bind(backand.utils.socket) });\n  }\n};\n\nmodule.exports = backand;\n\n},{\"./constants\":3,\"./defaults\":4,\"./helpers\":5,\"./services/auth\":7,\"./services/file\":8,\"./services/object\":9,\"./services/query\":10,\"./services/user\":11,\"./utils/http\":12,\"./utils/socket\":13,\"./utils/storage\":14}],7:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _es6Promise = require('es6-promise');\n\nvar _constants = require('./../constants');\n\nvar _defaults = require('./../defaults');\n\nvar _defaults2 = _interopRequireDefault(_defaults);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = {\n  __handleRefreshToken__: __handleRefreshToken__,\n  useAnonymousAuth: useAnonymousAuth,\n  signin: signin,\n  signup: signup,\n  socialSignin: socialSignin,\n  socialSigninWithToken: socialSigninWithToken,\n  socialSignup: socialSignup,\n  requestResetPassword: requestResetPassword,\n  resetPassword: resetPassword,\n  changePassword: changePassword,\n  signout: signout,\n  // getUserDetails,\n  getSocialProviders: getSocialProviders\n};\n\n\nfunction __generateFakeResponse__() {\n  var status = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  var statusText = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  var headers = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  var data = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '';\n\n  return {\n    status: status,\n    statusText: statusText,\n    headers: headers,\n    data: data\n  };\n}\nfunction __dispatchEvent__(name) {\n  var event = void 0;\n  if (_defaults2.default.isMobile) return;\n  if (document.createEvent) {\n    event = document.createEvent('Event');\n    event.initEvent(name, true, true);\n    event.eventName = name;\n    window.dispatchEvent(event);\n  } else {\n    event = document.createEventObject();\n    event.eventType = name;\n    event.eventName = name;\n    window.fireEvent('on' + event.eventType, event);\n  }\n}\nfunction __handleRefreshToken__(error) {\n  return new _es6Promise.Promise(function (resolve, reject) {\n    var user = backand.utils.storage.get('user');\n    if (!user || !user.details.refresh_token) {\n      reject(__generateFakeResponse__(0, '', [], 'No cached user or refreshToken found. authentication is required.'));\n    } else {\n      __signinWithToken__({\n        username: user.details.username,\n        refreshToken: user.details.refresh_token\n      }).then(function (response) {\n        resolve(response);\n      }).catch(function (error) {\n        reject(error);\n      });\n    }\n  });\n};\nfunction useAnonymousAuth(scb) {\n  return new _es6Promise.Promise(function (resolve, reject) {\n    var details = {\n      \"access_token\": _defaults2.default.anonymousToken,\n      \"token_type\": \"AnonymousToken\",\n      \"expires_in\": 0,\n      \"appName\": _defaults2.default.appName,\n      \"username\": \"Guest\",\n      \"role\": \"User\",\n      \"firstName\": \"anonymous\",\n      \"lastName\": \"anonymous\",\n      \"fullName\": \"\",\n      \"regId\": 0,\n      \"userId\": null\n    };\n    backand.utils.storage.set('user', {\n      token: {\n        AnonymousToken: _defaults2.default.anonymousToken\n      },\n      details: details\n    });\n    __dispatchEvent__(_constants.EVENTS.SIGNIN);\n    if (_defaults2.default.runSocket) {\n      backand.utils.socket.connect(null, _defaults2.default.anonymousToken, _defaults2.default.appName);\n    }\n    scb && scb(__generateFakeResponse__(200, 'OK', [], details));\n    resolve(__generateFakeResponse__(200, 'OK', [], details));\n  });\n}\nfunction signin(username, password, scb, ecb) {\n  return new _es6Promise.Promise(function (resolve, reject) {\n    backand.utils.http({\n      url: _constants.URLS.token,\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      data: 'username=' + username + '&password=' + password + '&appName=' + _defaults2.default.appName + '&grant_type=password'\n    }).then(function (response) {\n      backand.utils.storage.set('user', {\n        token: {\n          Authorization: 'Bearer ' + response.data.access_token\n        },\n        details: response.data\n      });\n      __dispatchEvent__(_constants.EVENTS.SIGNIN);\n      if (_defaults2.default.runSocket) {\n        backand.utils.socket.connect(backand.utils.storage.get('user').token.Authorization, _defaults2.default.anonymousToken, _defaults2.default.appName);\n      }\n      scb && scb(response);\n      resolve(response);\n    }).catch(function (error) {\n      ecb && ecb(error);\n      reject(error);\n    });\n  });\n}\nfunction signup(email, password, confirmPassword, firstName, lastName) {\n  var parameters = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\n  var scb = arguments[6];\n  var ecb = arguments[7];\n\n  return new _es6Promise.Promise(function (resolve, reject) {\n    backand.utils.http({\n      url: _constants.URLS.signup,\n      method: 'POST',\n      headers: {\n        'SignUpToken': _defaults2.default.signUpToken\n      },\n      data: {\n        firstName: firstName,\n        lastName: lastName,\n        email: email,\n        password: password,\n        confirmPassword: confirmPassword,\n        parameters: parameters\n      }\n    }, scb, ecb).then(function (response) {\n      __dispatchEvent__(_constants.EVENTS.SIGNUP);\n      if (_defaults2.default.runSigninAfterSignup) {\n        return signin(response.data.username, password);\n      } else {\n        scb && scb(response);\n        resolve(response);\n      }\n    }).then(function (response) {\n      scb && scb(response);\n      resolve(response);\n    }).catch(function (error) {\n      ecb && ecb(error);\n      reject(error);\n    });\n  });\n}\nfunction __getSocialUrl__(providerName, isSignup, isAutoSignUp) {\n  var provider = _constants.SOCIAL_PROVIDERS[providerName];\n  var action = isSignup ? 'up' : 'in';\n  var autoSignUpParam = '&signupIfNotSignedIn=' + (!isSignup && isAutoSignUp ? 'true' : 'false');\n  return '/user/socialSign' + action + '?provider=' + provider.label + autoSignUpParam + '&response_type=token&client_id=self&redirect_uri=' + provider.url + '&state=';\n}\nfunction __socialAuth__(provider, isSignUp, spec, email) {\n  return new _es6Promise.Promise(function (resolve, reject) {\n    if (!_constants.SOCIAL_PROVIDERS[provider]) {\n      reject(__generateFakeResponse__(0, '', [], 'Unknown Social Provider'));\n    }\n    var url = _defaults2.default.apiUrl + '/1/' + __getSocialUrl__(provider, isSignUp, true) + '&appname=' + _defaults2.default.appName + (email ? '&email=' + email : '') + '&returnAddress='; // ${location.href}\n    var popup = null;\n    if (!backand.utils.isIE) {\n      popup = window.open(url, 'socialpopup', spec);\n    } else {\n      popup = window.open('', '', spec);\n      popup.location = url;\n    }\n    if (popup && popup.focus) {\n      popup.focus();\n    }\n\n    var _handler = function handler(e) {\n      var url = e.type === 'message' ? e.origin : e.url;\n      // ie-location-origin-polyfill\n      if (!window.location.origin) {\n        window.location.origin = window.location.protocol + \"//\" + window.location.hostname + (window.location.port ? ':' + window.location.port : '');\n      }\n      if (url.indexOf(window.location.origin) === -1) {\n        reject(__generateFakeResponse__(0, '', [], 'Unknown Origin Message'));\n      }\n\n      var res = e.type === 'message' ? JSON.parse(e.data) : JSON.parse(e.newValue);\n      window.removeEventListener('message', _handler, false);\n      window.removeEventListener('storage', _handler, false);\n      if (popup && popup.close) {\n        popup.close();\n      }\n      e.type === 'storage' && localStorage.removeItem(e.key);\n\n      if (res.status != 200) {\n        reject(res);\n      } else {\n        resolve(res);\n      }\n    };\n    _handler = _handler.bind(popup);\n\n    window.addEventListener('message', _handler, false);\n    window.addEventListener('storage', _handler, false);\n  });\n}\nfunction socialSignin(provider, scb, ecb) {\n  var spec = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'left=1, top=1, width=500, height=560';\n\n  return new _es6Promise.Promise(function (resolve, reject) {\n    __socialAuth__(provider, false, spec, '').then(function (response) {\n      __dispatchEvent__(_constants.EVENTS.SIGNUP);\n      return __signinWithToken__({\n        accessToken: response.data.access_token\n      });\n    }).then(function (response) {\n      scb && scb(response);\n      resolve(response);\n    }).catch(function (error) {\n      ecb && ecb(error);\n      reject(error);\n    });\n  });\n};\nfunction socialSigninWithToken(provider, token, scb, ecb) {\n  return new _es6Promise.Promise(function (resolve, reject) {\n    backand.utils.http({\n      url: _constants.URLS.socialSigninWithToken.replace('PROVIDER', provider),\n      method: 'GET',\n      params: {\n        accessToken: token,\n        appName: _defaults2.default.appName,\n        signupIfNotSignedIn: true\n      }\n    }).then(function (response) {\n      backand.utils.storage.set('user', {\n        token: {\n          Authorization: 'Bearer ' + response.data.access_token\n        },\n        details: response.data\n      });\n      __dispatchEvent__(_constants.EVENTS.SIGNIN);\n      if (_defaults2.default.runSocket) {\n        backand.utils.socket.connect(backand.utils.storage.get('user').token.Authorization, _defaults2.default.anonymousToken, _defaults2.default.appName);\n      }\n      // TODO:PATCH\n      backand.utils.http({\n        url: _constants.URLS.objects + '/users',\n        method: 'GET',\n        params: {\n          filter: [{\n            \"fieldName\": \"email\",\n            \"operator\": \"equals\",\n            \"value\": response.data.username\n          }]\n        }\n      }).then(function (patch) {\n        var _patch$data$data$ = patch.data.data[0],\n            id = _patch$data$data$.id,\n            firstName = _patch$data$data$.firstName,\n            lastName = _patch$data$data$.lastName;\n\n        var user = backand.utils.storage.get('user');\n        var newDetails = { userId: id.toString(), firstName: firstName, lastName: lastName };\n        backand.utils.storage.set('user', {\n          token: user.token,\n          details: _extends({}, user.details, newDetails)\n        });\n        user = backand.utils.storage.get('user');\n        var res = __generateFakeResponse__(response.status, response.statusText, response.headers, user.details);\n        scb && scb(res);\n        resolve(res);\n      }).catch(function (error) {\n        ecb && ecb(error);\n        reject(error);\n      });\n      // EOP\n    }).catch(function (error) {\n      ecb && ecb(error);\n      reject(error);\n    });\n  });\n};\nfunction socialSignup(provider, email, scb, ecb) {\n  var spec = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 'left=1, top=1, width=500, height=560';\n\n  return new _es6Promise.Promise(function (resolve, reject) {\n    __socialAuth__(provider, true, spec, email).then(function (response) {\n      __dispatchEvent__(_constants.EVENTS.SIGNUP);\n      if (_defaults2.default.runSigninAfterSignup) {\n        return __signinWithToken__({\n          accessToken: response.data.access_token\n        });\n      } else {\n        scb && scb(response);\n        resolve(response);\n      }\n    }).then(function (response) {\n      scb && scb(response);\n      resolve(response);\n    }).catch(function (error) {\n      ecb && ecb(error);\n      reject(error);\n    });\n  });\n}\nfunction __signinWithToken__(tokenData) {\n  return new _es6Promise.Promise(function (resolve, reject) {\n    var data = [];\n    for (var obj in tokenData) {\n      data.push(encodeURIComponent(obj) + '=' + encodeURIComponent(tokenData[obj]));\n    }\n    data = data.join(\"&\");\n\n    backand.utils.http({\n      url: _constants.URLS.token,\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      data: data + '&appName=' + _defaults2.default.appName + '&grant_type=password'\n    }).then(function (response) {\n      backand.utils.storage.set('user', {\n        token: {\n          Authorization: 'Bearer ' + response.data.access_token\n        },\n        details: response.data\n      });\n      __dispatchEvent__(_constants.EVENTS.SIGNIN);\n      if (_defaults2.default.runSocket) {\n        backand.utils.socket.connect(backand.utils.storage.get('user').token.Authorization, _defaults2.default.anonymousToken, _defaults2.default.appName);\n      }\n      resolve(response);\n    }).catch(function (error) {\n      console.log(error);\n      reject(error);\n    });\n  });\n}\nfunction requestResetPassword(username, scb, ecb) {\n  return backand.utils.http({\n    url: _constants.URLS.requestResetPassword,\n    method: 'POST',\n    data: {\n      appName: _defaults2.default.appName,\n      username: username\n    }\n  }, scb, ecb);\n}\nfunction resetPassword(newPassword, resetToken, scb, ecb) {\n  return backand.utils.http({\n    url: _constants.URLS.resetPassword,\n    method: 'POST',\n    data: {\n      newPassword: newPassword,\n      resetToken: resetToken\n    }\n  }, scb, ecb);\n}\nfunction changePassword(oldPassword, newPassword, scb, ecb) {\n  return backand.utils.http({\n    url: _constants.URLS.changePassword,\n    method: 'POST',\n    data: {\n      oldPassword: oldPassword,\n      newPassword: newPassword\n    }\n  }, scb, ecb);\n}\nfunction signout(scb) {\n  return new _es6Promise.Promise(function (resolve, reject) {\n    backand.utils.http({\n      url: _constants.URLS.signout,\n      method: 'GET'\n    });\n    backand.utils.storage.remove('user');\n    if (_defaults2.default.runSocket) {\n      backand.utils.socket.disconnect();\n    }\n    __dispatchEvent__(_constants.EVENTS.SIGNOUT);\n    scb && scb(__generateFakeResponse__(200, 'OK', [], backand.utils.storage.get('user')));\n    resolve(__generateFakeResponse__(200, 'OK', [], backand.utils.storage.get('user')));\n  });\n}\nfunction getSocialProviders(scb) {\n  return new _es6Promise.Promise(function (resolve, reject) {\n    scb && scb(_constants.SOCIAL_PROVIDERS);\n    resolve(_constants.SOCIAL_PROVIDERS);\n  });\n}\n\n},{\"./../constants\":3,\"./../defaults\":4,\"es6-promise\":1}],8:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _constants = require('./../constants');\n\nexports.default = {\n  upload: upload,\n  remove: remove\n};\n\n\nfunction upload(object, fileAction, filename, filedata, scb, ecb) {\n  return backand.utils.http({\n    url: _constants.URLS.objectsAction + '/' + object + '?name=' + fileAction,\n    method: 'POST',\n    data: {\n      filename: filename,\n      filedata: filedata.substr(filedata.indexOf(',') + 1, filedata.length)\n    }\n  }, scb, ecb);\n}\nfunction remove(object, fileAction, filename, scb, ecb) {\n  return backand.utils.http({\n    url: _constants.URLS.objectsAction + '/' + object + '?name=' + fileAction,\n    method: 'DELETE',\n    data: {\n      filename: filename\n    }\n  }, scb, ecb);\n}\n\n},{\"./../constants\":3}],9:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _constants = require('./../constants');\n\nexports.default = {\n  getList: getList,\n  create: create,\n  getOne: getOne,\n  update: update,\n  remove: remove,\n  action: {\n    get: get,\n    post: post\n  }\n};\n\n\nfunction __allowedParams__(allowedParams, params) {\n  var newParams = {};\n  for (var param in params) {\n    if (allowedParams.indexOf(param) != -1) {\n      newParams[param] = params[param];\n    }\n  }\n  return newParams;\n}\nfunction getList(object) {\n  var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var scb = arguments[2];\n  var ecb = arguments[3];\n\n  var allowedParams = ['pageSize', 'pageNumber', 'filter', 'sort', 'search', 'exclude', 'deep', 'relatedObjects'];\n  return backand.utils.http({\n    url: _constants.URLS.objects + '/' + object,\n    method: 'GET',\n    params: __allowedParams__(allowedParams, params)\n  }, null, ecb).then(function (response) {\n    var totalRows = response.data['totalRows'];\n    response.data = response.data['data'];\n    scb && scb(response, totalRows);\n    return response;\n  });\n}\nfunction create(object, data) {\n  var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var scb = arguments[3];\n  var ecb = arguments[4];\n\n  var allowedParams = ['returnObject', 'deep'];\n  return backand.utils.http({\n    url: _constants.URLS.objects + '/' + object,\n    method: 'POST',\n    data: data,\n    params: __allowedParams__(allowedParams, params)\n  }, scb, ecb);\n}\nfunction getOne(object, id) {\n  var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var scb = arguments[3];\n  var ecb = arguments[4];\n\n  var allowedParams = ['deep', 'exclude', 'level'];\n  return backand.utils.http({\n    url: _constants.URLS.objects + '/' + object + '/' + id,\n    method: 'GET',\n    params: __allowedParams__(allowedParams, params)\n  }, scb, ecb);\n}\nfunction update(object, id, data) {\n  var params = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var scb = arguments[4];\n  var ecb = arguments[5];\n\n  var allowedParams = ['returnObject', 'deep'];\n  return backand.utils.http({\n    url: _constants.URLS.objects + '/' + object + '/' + id,\n    method: 'PUT',\n    data: data,\n    params: __allowedParams__(allowedParams, params)\n  }, scb, ecb);\n}\nfunction remove(object, id, scb, ecb) {\n  return backand.utils.http({\n    url: _constants.URLS.objects + '/' + object + '/' + id,\n    method: 'DELETE'\n  }, scb, ecb);\n}\n\nfunction get(object, action) {\n  var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var scb = arguments[3];\n  var ecb = arguments[4];\n\n  return backand.utils.http({\n    url: _constants.URLS.objectsAction + '/' + object + '?name=' + action,\n    method: 'GET',\n    params: params\n  }, scb, ecb);\n}\nfunction post(object, action, data) {\n  var params = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var scb = arguments[4];\n  var ecb = arguments[5];\n\n  return backand.utils.http({\n    url: _constants.URLS.objectsAction + '/' + object + '?name=' + action,\n    method: 'POST',\n    data: data,\n    params: params\n  }, scb, ecb);\n}\n\n},{\"./../constants\":3}],10:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _constants = require('./../constants');\n\nexports.default = {\n  get: get,\n  post: post\n};\n\n\nfunction get(name) {\n  var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var scb = arguments[2];\n  var ecb = arguments[3];\n\n  return backand.utils.http({\n    url: _constants.URLS.query + '/' + name,\n    method: 'GET',\n    params: params\n  }, scb, ecb);\n}\nfunction post(name, data) {\n  var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var scb = arguments[3];\n  var ecb = arguments[4];\n\n  return backand.utils.http({\n    url: _constants.URLS.query + '/' + name,\n    method: 'POST',\n    data: data,\n    params: params\n  }, scb, ecb);\n}\n\n},{\"./../constants\":3}],11:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _es6Promise = require('es6-promise');\n\nvar _constants = require('./../constants');\n\nexports.default = {\n  getUserDetails: getUserDetails,\n  getUsername: getUsername,\n  getUserRole: getUserRole,\n  getToken: getToken,\n  getRefreshToken: getRefreshToken\n};\n\n\nfunction __generateFakeResponse__() {\n  var status = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  var statusText = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  var headers = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  var data = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '';\n\n  return {\n    status: status,\n    statusText: statusText,\n    headers: headers,\n    data: data\n  };\n}\nfunction __getUserDetailsFromStorage__(scb, ecb) {\n  return new _es6Promise.Promise(function (resolve, reject) {\n    var user = backand.utils.storage.get('user');\n    if (!user) {\n      ecb && ecb(__generateFakeResponse__(0, '', [], 'No cached user found. authentication is required.'));\n      reject(__generateFakeResponse__(0, '', [], 'No cached user found. authentication is required.'));\n    } else {\n      scb && scb(__generateFakeResponse__(200, 'OK', [], user.details));\n      resolve(__generateFakeResponse__(200, 'OK', [], user.details));\n    }\n  });\n}\nfunction getUserDetails(scb, ecb) {\n  var force = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  if (!force) {\n    return __getUserDetailsFromStorage__(scb, ecb);\n  } else {\n    return backand.utils.http({\n      url: _constants.URLS.profile,\n      method: 'GET'\n    }).then(function (response) {\n      var user = backand.utils.storage.get('user');\n      var newDetails = response.data;\n      backand.utils.storage.set('user', {\n        token: user.token,\n        details: _extends({}, user.details, newDetails)\n      });\n      return __getUserDetailsFromStorage__(scb, ecb);\n    });\n  }\n}\nfunction getUsername(scb, ecb) {\n  return __getUserDetailsFromStorage__(null, ecb).then(function (response) {\n    response.data = response.data['username'];\n    scb && scb(response);\n    return response;\n  });\n}\nfunction getUserRole() {\n  return __getUserDetailsFromStorage__(null, ecb).then(function (response) {\n    response.data = response.data['role'];\n    scb && scb(response);\n    return response;\n  });\n}\nfunction getToken() {\n  return __getUserDetailsFromStorage__(null, ecb).then(function (response) {\n    response.data = response.data['access_token'];\n    scb && scb(response);\n    return response;\n  });\n}\nfunction getRefreshToken() {\n  return __getUserDetailsFromStorage__(null, ecb).then(function (response) {\n    response.data = response.data['refresh_token'];\n    scb && scb(response);\n    return response;\n  });\n}\n\n},{\"./../constants\":3,\"es6-promise\":1}],12:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _es6Promise = require('es6-promise');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Http = function () {\n  function Http() {\n    var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, Http);\n\n    if (!window.XMLHttpRequest) throw new Error('XMLHttpRequest is not supported by this platform');\n\n    this.config = _extends({\n      // url: '/',\n      method: 'GET',\n      headers: {},\n      params: {},\n      interceptors: {},\n      withCredentials: false,\n      responseType: 'json',\n      // timeout: null,\n      auth: {\n        username: null,\n        password: null\n      }\n    }, config);\n  }\n\n  _createClass(Http, [{\n    key: '_getHeaders',\n    value: function _getHeaders(headers) {\n      return headers.split('\\r\\n').filter(function (header) {\n        return header;\n      }).map(function (header) {\n        var jheader = {};\n        var parts = header.split(':');\n        jheader[parts[0]] = parts[1];\n        return jheader;\n      });\n    }\n  }, {\n    key: '_getData',\n    value: function _getData(type, data) {\n      if (!type) {\n        return data;\n      } else if (type.indexOf('json') === -1) {\n        return data;\n      } else {\n        return JSON.parse(data);\n      }\n    }\n  }, {\n    key: '_createResponse',\n    value: function _createResponse(req, config) {\n      return {\n        status: req.status,\n        statusText: req.statusText,\n        headers: this._getHeaders(req.getAllResponseHeaders()),\n        config: config,\n        data: this._getData(req.getResponseHeader(\"Content-Type\"), req.responseText)\n      };\n    }\n  }, {\n    key: '_handleError',\n    value: function _handleError(data, config) {\n      return {\n        status: 0,\n        statusText: 'ERROR',\n        headers: [],\n        config: config,\n        data: data\n      };\n    }\n  }, {\n    key: '_encodeParams',\n    value: function _encodeParams(params) {\n      var paramsArr = [];\n      for (var param in params) {\n        var val = params[param];\n        if ((typeof val === 'undefined' ? 'undefined' : _typeof(val)) === 'object') {\n          val = JSON.stringify(val);\n        }\n        paramsArr.push(param + '=' + encodeURIComponent(val));\n      }\n      return paramsArr.join('&');\n    }\n  }, {\n    key: '_setHeaders',\n    value: function _setHeaders(req, headers) {\n      for (var header in headers) {\n        req.setRequestHeader(header, headers[header]);\n      }\n    }\n  }, {\n    key: '_setData',\n    value: function _setData(req, data) {\n      if (!data) {\n        req.send();\n      } else if ((typeof data === 'undefined' ? 'undefined' : _typeof(data)) != 'object') {\n        req.send(data);\n      } else {\n        req.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\n        req.send(JSON.stringify(data));\n      }\n    }\n  }, {\n    key: 'request',\n    value: function request(cfg, scb, ecb) {\n      var _this = this;\n\n      return new _es6Promise.Promise(function (resolve, reject) {\n\n        var req = new XMLHttpRequest();\n        var config = _extends({}, _this.config, cfg);\n\n        if (!config.url || typeof config.url !== 'string' || config.url.length === 0) {\n          var res = _this._handleError('url parameter is missing', config);\n          ecb && ecb(res);\n          reject(res);\n        }\n        if (config.withCredentials) {\n          req.withCredentials = true;\n        }\n        if (config.timeout) {\n          req.timeout = true;\n        }\n        config.interceptors.request && config.interceptors.request.call(_this, config);\n        var params = _this._encodeParams(config.params);\n        req.open(config.method, '' + (config.baseURL ? config.baseURL + '/' : '') + config.url + (params ? '?' + params : ''), true, config.auth.username, config.auth.password);\n        req.ontimeout = function () {\n          var res = this._handleError('timeout', config);\n          ecb && ecb(res);\n          reject(res);\n        };\n        req.onabort = function () {\n          var res = this._handleError('abort', config);\n          ecb && ecb(res);\n          reject(res);\n        };\n        req.onreadystatechange = function () {\n          if (req.readyState == XMLHttpRequest.DONE) {\n            var _res = _this._createResponse(req, config);\n            if (_res.status === 200) {\n              if (config.interceptors.response) {\n                config.interceptors.response.call(_this, _res, config, resolve, reject, scb, ecb);\n              } else {\n                scb && scb(_res);\n                resolve(_res);\n              }\n            } else {\n              if (config.interceptors.responseError) {\n                config.interceptors.responseError.call(_this, _res, config, resolve, reject, scb, ecb);\n              } else {\n                ecb && ecb(_res);\n                reject(_res);\n              }\n            }\n          }\n        };\n        _this._setHeaders(req, config.headers);\n        _this._setData(req, config.data);\n      });\n    }\n  }]);\n\n  return Http;\n}();\n\nfunction createInstance() {\n  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var context = new Http(config);\n  var instance = function instance() {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return Http.prototype.request.apply(context, args);\n  };\n  instance.config = context.config;\n  return instance;\n}\n\nvar http = createInstance();\nhttp.create = function (config) {\n  return createInstance(config);\n};\n\nexports.default = http;\n\n},{\"es6-promise\":1}],13:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Socket = function () {\n  function Socket(url) {\n    _classCallCheck(this, Socket);\n\n    if (!window.io) throw new Error('runSocket is true but socketio-client is not included');\n    this.url = url;\n    this.onArr = [];\n    this.socket = null;\n  }\n\n  _createClass(Socket, [{\n    key: 'on',\n    value: function on(eventName, callback) {\n      this.onArr.push({ eventName: eventName, callback: callback });\n    }\n  }, {\n    key: 'connect',\n    value: function connect(token, anonymousToken, appName) {\n      var _this = this;\n\n      this.disconnect();\n      this.socket = io.connect(this.url, { 'forceNew': true });\n\n      this.socket.on('connect', function () {\n        console.info('trying to establish a socket connection to ' + appName + ' ...');\n        _this.socket.emit(\"login\", token, anonymousToken, appName);\n      });\n\n      this.socket.on('authorized', function () {\n        console.info('socket connected');\n        _this.onArr.forEach(function (fn) {\n          _this.socket.on(fn.eventName, function (data) {\n            fn.callback(data);\n          });\n        });\n      });\n\n      this.socket.on('notAuthorized', function () {\n        setTimeout(function () {\n          return _this.disconnect();\n        }, 1000);\n      });\n\n      this.socket.on('disconnect', function () {\n        console.info('socket disconnect');\n      });\n\n      this.socket.on('reconnecting', function () {\n        console.info('socket reconnecting');\n      });\n\n      this.socket.on('error', function (error) {\n        console.warn('error: ' + error);\n      });\n    }\n  }, {\n    key: 'disconnect',\n    value: function disconnect() {\n      if (this.socket) {\n        this.socket.close();\n      }\n    }\n  }]);\n\n  return Socket;\n}();\n\nexports.default = Socket;\n\n},{}],14:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Storage = function () {\n  function Storage(storage) {\n    var prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n\n    _classCallCheck(this, Storage);\n\n    if (!storage) throw new Error('The provided Storage is not supported by this platform');\n    if (!storage.setItem || !storage.getItem || !storage.removeItem || !storage.clear) throw new Error('The provided Storage not implement the necessary functions');\n    this.storage = storage;\n    this.prefix = prefix;\n    this.delimiter = '__________';\n  }\n\n  _createClass(Storage, [{\n    key: 'get',\n    value: function get(key) {\n      var item = this.storage.getItem('' + this.prefix + key);\n      if (!item) {\n        return item;\n      } else {\n        var _item$split = item.split(this.delimiter),\n            _item$split2 = _slicedToArray(_item$split, 2),\n            type = _item$split2[0],\n            val = _item$split2[1];\n\n        if (type != 'JSON') {\n          return val;\n        } else {\n          return JSON.parse(val);\n        }\n      }\n    }\n  }, {\n    key: 'set',\n    value: function set(key, val) {\n      if ((typeof val === 'undefined' ? 'undefined' : _typeof(val)) != 'object') {\n        this.storage.setItem('' + this.prefix + key, 'STRING' + this.delimiter + val);\n      } else {\n        this.storage.setItem('' + this.prefix + key, 'JSON' + this.delimiter + JSON.stringify(val));\n      }\n    }\n  }, {\n    key: 'remove',\n    value: function remove(key) {\n      this.storage.removeItem('' + this.prefix + key);\n    }\n  }, {\n    key: 'clear',\n    value: function clear() {\n      for (var i = 0; i < this.storage.length; i++) {\n        if (this.storage.getItem(this.storage.key(i)).indexOf(this.prefix) != -1) this.remove(this.storage.key(i));\n      }\n    }\n  }]);\n\n  return Storage;\n}();\n\nexports.default = Storage;\n\n},{}]},{},[6])(6)\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n"]}