{"version":3,"sources":["backand.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","process","global","factory","define","amd","ES6Promise","this","objectOrFunction","x","isFunction","setScheduler","scheduleFn","customSchedulerFn","setAsap","asapFn","asap","useNextTick","nextTick","flush","useVertxTimer","vertxNext","useSetTimeout","useMutationObserver","iterations","observer","BrowserMutationObserver","node","document","createTextNode","observe","characterData","data","useMessageChannel","channel","MessageChannel","port1","onmessage","port2","postMessage","globalSetTimeout","setTimeout","len","callback","queue","arg","undefined","attemptVertx","vertx","runOnLoop","runOnContext","then","onFulfillment","onRejection","_arguments","arguments","parent","child","constructor","noop","PROMISE_ID","makePromise","_state","invokeCallback","_result","subscribe","resolve","object","Constructor","promise","_resolve","selfFulfillment","TypeError","cannotReturnOwn","getThen","error","GET_THEN_ERROR","tryThen","value","fulfillmentHandler","rejectionHandler","handleForeignThenable","thenable","sealed","fulfill","reason","_reject","_label","handleOwnThenable","FULFILLED","REJECTED","handleMaybeThenable","maybeThenable","then$$","publishRejection","_onerror","publish","PENDING","_subscribers","subscribers","settled","detail","ErrorObject","tryCatch","TRY_CATCH_ERROR","hasCallback","succeeded","failed","initializePromise","resolver","nextId","id","Enumerator","input","_instanceConstructor","isArray","_input","_remaining","Array","_enumerate","validationError","all","entries","race","reject","_","needsResolver","needsNew","Promise","polyfill","local","self","Function","P","promiseToString","Object","prototype","toString","cast","_isArray","scheduleFlush","browserWindow","window","browserGlobal","MutationObserver","WebKitMutationObserver","isNode","isWorker","Uint8ClampedArray","importScripts","Math","random","substring","_eachEntry","entry","c","resolve$$","_then","_settledAt","_willSettleAt","state","enumerator","_setScheduler","_setAsap","_asap","catch","_process","2","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","runClearTimeout","marker","cachedClearTimeout","clearTimeout","cleanUpNextTick","draining","currentQueue","concat","queueIndex","drainQueue","timeout","run","Item","array","args","push","apply","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","binding","name","cwd","chdir","dir","umask","3","defineProperty","EVENTS","SIGNIN","SIGNOUT","SIGNUP","URLS","token","signup","requestResetPassword","resetPassword","changePassword","objects","objectsAction","SOCIAL_PROVIDERS","github","label","url","css","backgroundColor","google","facebook","twitter","4","default","appName","anonymousToken","signUpToken","apiUrl","storagePrefix","storageType","manageRefreshToken","runSigninAfterSignup","runSocket","socketUrl","isMobile","5","filter","create","fieldName","operator","operators","numeric","equals","notEquals","greaterThan","greaterThanOrEqualsTo","lessThan","lessThanOrEqualsTo","empty","notEmpty","date","text","startsWith","endsWith","contains","notContains","boolean","relation","in","sort","order","orders","asc","desc","exclude","options","metadata","totalRows","6","_interopRequireWildcard","obj","__esModule","newObj","key","hasOwnProperty","_interopRequireDefault","_extends","assign","target","source","_defaults","_defaults2","_constants","constants","_helpers","helpers","_storage","_storage2","_http","_http2","_socket","_socket2","_auth","auth","_crud","crud","_files","files","initiate","config","storage","http","baseURL","scope","socket","service","fn","bind","interceptors","request","indexOf","get","headers","responseError","scb","ecb","_this","AnonymousToken","Authorization","status","Message","__handleRefreshToken__","response","connect","./constants","./defaults","./helpers","./services/auth","./services/crud","./services/files","./utils/http","./utils/socket","./utils/storage","7","__initiate__","__setAuth__","__generateFakeResponse__","statusText","__dispatchEvent__","event","createEvent","initEvent","eventName","dispatchEvent","createEventObject","eventType","fireEvent","__clearAuth__","set","_es6Promise","user","details","refresh_token","__signinWithToken__","username","refreshToken","useAnonymousAuth","_this2","signin","password","_this3","method","Content-Type","access_token","email","confirmPassword","firstName","lastName","_this4","SignUpToken","__getSocialUrl__","providerName","isSignup","isAutoSignUp","provider","action","autoSignUpParam","__checkSocialAuthWindowForData__","socialAuthWindow","timer","setInterval","closed","clearInterval","locationCopy","location","dataMatch","exec","href","JSON","parse","decodeURIComponent","replace","opener","stringify","origin","__socialAuth__","isSignUp","spec","_this5","windowUrl","open","focus","addEventListener","originalEvent","_generateFakeResponse","removeEventListener","close","res","socialSignin","_this6","accessToken","socialSignup","_this7","_socialAuth","tokenData","_this8","encodeURIComponent","join","newPassword","resetToken","oldPassword","signout","getUserDetails","./../constants","./../defaults","es6-promise","8","__encodeParameters__","allowedParams","params","uri","param","encodeURI","getList","getOne","update","remove","9","uploadFile","objectName","fileActionName","filename","filedata","substr","deleteFile","10","_classCallCheck","instance","createInstance","context","Http","_len","_key","_typeof","Symbol","iterator","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","protoProps","staticProps","XMLHttpRequest","split","header","map","jheader","parts","type","req","_getHeaders","getAllResponseHeaders","_getData","getResponseHeader","responseText","setRequestHeader","send","cfg","onreadystatechange","readyState","DONE","_createResponse","_setHeaders","_setData","11","Socket","io","console","warn","forceNew","onArr","info","forEach","disconnect","12","_slicedToArray","sliceIterator","arr","_arr","_n","_d","_e","_s","_i","next","done","err","Storage","prefix","delimiter","item","getItem","_item$split","_item$split2","val","setItem","removeItem"],"mappings":"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","file":"backand.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n(function (process,global){\n/*!\n * @overview es6-promise - a tiny implementation of Promises/A+.\n * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)\n * @license   Licensed under MIT license\n *            See https://raw.githubusercontent.com/stefanpenner/es6-promise/master/LICENSE\n * @version   4.0.5\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global.ES6Promise = factory());\n}(this, (function () { 'use strict';\n\nfunction objectOrFunction(x) {\n  return typeof x === 'function' || typeof x === 'object' && x !== null;\n}\n\nfunction isFunction(x) {\n  return typeof x === 'function';\n}\n\nvar _isArray = undefined;\nif (!Array.isArray) {\n  _isArray = function (x) {\n    return Object.prototype.toString.call(x) === '[object Array]';\n  };\n} else {\n  _isArray = Array.isArray;\n}\n\nvar isArray = _isArray;\n\nvar len = 0;\nvar vertxNext = undefined;\nvar customSchedulerFn = undefined;\n\nvar asap = function asap(callback, arg) {\n  queue[len] = callback;\n  queue[len + 1] = arg;\n  len += 2;\n  if (len === 2) {\n    // If len is 2, that means that we need to schedule an async flush.\n    // If additional callbacks are queued before the queue is flushed, they\n    // will be processed by this flush that we are scheduling.\n    if (customSchedulerFn) {\n      customSchedulerFn(flush);\n    } else {\n      scheduleFlush();\n    }\n  }\n};\n\nfunction setScheduler(scheduleFn) {\n  customSchedulerFn = scheduleFn;\n}\n\nfunction setAsap(asapFn) {\n  asap = asapFn;\n}\n\nvar browserWindow = typeof window !== 'undefined' ? window : undefined;\nvar browserGlobal = browserWindow || {};\nvar BrowserMutationObserver = browserGlobal.MutationObserver || browserGlobal.WebKitMutationObserver;\nvar isNode = typeof self === 'undefined' && typeof process !== 'undefined' && ({}).toString.call(process) === '[object process]';\n\n// test for web worker but not in IE10\nvar isWorker = typeof Uint8ClampedArray !== 'undefined' && typeof importScripts !== 'undefined' && typeof MessageChannel !== 'undefined';\n\n// node\nfunction useNextTick() {\n  // node version 0.10.x displays a deprecation warning when nextTick is used recursively\n  // see https://github.com/cujojs/when/issues/410 for details\n  return function () {\n    return process.nextTick(flush);\n  };\n}\n\n// vertx\nfunction useVertxTimer() {\n  if (typeof vertxNext !== 'undefined') {\n    return function () {\n      vertxNext(flush);\n    };\n  }\n\n  return useSetTimeout();\n}\n\nfunction useMutationObserver() {\n  var iterations = 0;\n  var observer = new BrowserMutationObserver(flush);\n  var node = document.createTextNode('');\n  observer.observe(node, { characterData: true });\n\n  return function () {\n    node.data = iterations = ++iterations % 2;\n  };\n}\n\n// web worker\nfunction useMessageChannel() {\n  var channel = new MessageChannel();\n  channel.port1.onmessage = flush;\n  return function () {\n    return channel.port2.postMessage(0);\n  };\n}\n\nfunction useSetTimeout() {\n  // Store setTimeout reference so es6-promise will be unaffected by\n  // other code modifying setTimeout (like sinon.useFakeTimers())\n  var globalSetTimeout = setTimeout;\n  return function () {\n    return globalSetTimeout(flush, 1);\n  };\n}\n\nvar queue = new Array(1000);\nfunction flush() {\n  for (var i = 0; i < len; i += 2) {\n    var callback = queue[i];\n    var arg = queue[i + 1];\n\n    callback(arg);\n\n    queue[i] = undefined;\n    queue[i + 1] = undefined;\n  }\n\n  len = 0;\n}\n\nfunction attemptVertx() {\n  try {\n    var r = require;\n    var vertx = r('vertx');\n    vertxNext = vertx.runOnLoop || vertx.runOnContext;\n    return useVertxTimer();\n  } catch (e) {\n    return useSetTimeout();\n  }\n}\n\nvar scheduleFlush = undefined;\n// Decide what async method to use to triggering processing of queued callbacks:\nif (isNode) {\n  scheduleFlush = useNextTick();\n} else if (BrowserMutationObserver) {\n  scheduleFlush = useMutationObserver();\n} else if (isWorker) {\n  scheduleFlush = useMessageChannel();\n} else if (browserWindow === undefined && typeof require === 'function') {\n  scheduleFlush = attemptVertx();\n} else {\n  scheduleFlush = useSetTimeout();\n}\n\nfunction then(onFulfillment, onRejection) {\n  var _arguments = arguments;\n\n  var parent = this;\n\n  var child = new this.constructor(noop);\n\n  if (child[PROMISE_ID] === undefined) {\n    makePromise(child);\n  }\n\n  var _state = parent._state;\n\n  if (_state) {\n    (function () {\n      var callback = _arguments[_state - 1];\n      asap(function () {\n        return invokeCallback(_state, child, callback, parent._result);\n      });\n    })();\n  } else {\n    subscribe(parent, child, onFulfillment, onRejection);\n  }\n\n  return child;\n}\n\n/**\n  `Promise.resolve` returns a promise that will become resolved with the\n  passed `value`. It is shorthand for the following:\n\n  ```javascript\n  let promise = new Promise(function(resolve, reject){\n    resolve(1);\n  });\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  let promise = Promise.resolve(1);\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  @method resolve\n  @static\n  @param {Any} value value that the returned promise will be resolved with\n  Useful for tooling.\n  @return {Promise} a promise that will become fulfilled with the given\n  `value`\n*/\nfunction resolve(object) {\n  /*jshint validthis:true */\n  var Constructor = this;\n\n  if (object && typeof object === 'object' && object.constructor === Constructor) {\n    return object;\n  }\n\n  var promise = new Constructor(noop);\n  _resolve(promise, object);\n  return promise;\n}\n\nvar PROMISE_ID = Math.random().toString(36).substring(16);\n\nfunction noop() {}\n\nvar PENDING = void 0;\nvar FULFILLED = 1;\nvar REJECTED = 2;\n\nvar GET_THEN_ERROR = new ErrorObject();\n\nfunction selfFulfillment() {\n  return new TypeError(\"You cannot resolve a promise with itself\");\n}\n\nfunction cannotReturnOwn() {\n  return new TypeError('A promises callback cannot return that same promise.');\n}\n\nfunction getThen(promise) {\n  try {\n    return promise.then;\n  } catch (error) {\n    GET_THEN_ERROR.error = error;\n    return GET_THEN_ERROR;\n  }\n}\n\nfunction tryThen(then, value, fulfillmentHandler, rejectionHandler) {\n  try {\n    then.call(value, fulfillmentHandler, rejectionHandler);\n  } catch (e) {\n    return e;\n  }\n}\n\nfunction handleForeignThenable(promise, thenable, then) {\n  asap(function (promise) {\n    var sealed = false;\n    var error = tryThen(then, thenable, function (value) {\n      if (sealed) {\n        return;\n      }\n      sealed = true;\n      if (thenable !== value) {\n        _resolve(promise, value);\n      } else {\n        fulfill(promise, value);\n      }\n    }, function (reason) {\n      if (sealed) {\n        return;\n      }\n      sealed = true;\n\n      _reject(promise, reason);\n    }, 'Settle: ' + (promise._label || ' unknown promise'));\n\n    if (!sealed && error) {\n      sealed = true;\n      _reject(promise, error);\n    }\n  }, promise);\n}\n\nfunction handleOwnThenable(promise, thenable) {\n  if (thenable._state === FULFILLED) {\n    fulfill(promise, thenable._result);\n  } else if (thenable._state === REJECTED) {\n    _reject(promise, thenable._result);\n  } else {\n    subscribe(thenable, undefined, function (value) {\n      return _resolve(promise, value);\n    }, function (reason) {\n      return _reject(promise, reason);\n    });\n  }\n}\n\nfunction handleMaybeThenable(promise, maybeThenable, then$$) {\n  if (maybeThenable.constructor === promise.constructor && then$$ === then && maybeThenable.constructor.resolve === resolve) {\n    handleOwnThenable(promise, maybeThenable);\n  } else {\n    if (then$$ === GET_THEN_ERROR) {\n      _reject(promise, GET_THEN_ERROR.error);\n    } else if (then$$ === undefined) {\n      fulfill(promise, maybeThenable);\n    } else if (isFunction(then$$)) {\n      handleForeignThenable(promise, maybeThenable, then$$);\n    } else {\n      fulfill(promise, maybeThenable);\n    }\n  }\n}\n\nfunction _resolve(promise, value) {\n  if (promise === value) {\n    _reject(promise, selfFulfillment());\n  } else if (objectOrFunction(value)) {\n    handleMaybeThenable(promise, value, getThen(value));\n  } else {\n    fulfill(promise, value);\n  }\n}\n\nfunction publishRejection(promise) {\n  if (promise._onerror) {\n    promise._onerror(promise._result);\n  }\n\n  publish(promise);\n}\n\nfunction fulfill(promise, value) {\n  if (promise._state !== PENDING) {\n    return;\n  }\n\n  promise._result = value;\n  promise._state = FULFILLED;\n\n  if (promise._subscribers.length !== 0) {\n    asap(publish, promise);\n  }\n}\n\nfunction _reject(promise, reason) {\n  if (promise._state !== PENDING) {\n    return;\n  }\n  promise._state = REJECTED;\n  promise._result = reason;\n\n  asap(publishRejection, promise);\n}\n\nfunction subscribe(parent, child, onFulfillment, onRejection) {\n  var _subscribers = parent._subscribers;\n  var length = _subscribers.length;\n\n  parent._onerror = null;\n\n  _subscribers[length] = child;\n  _subscribers[length + FULFILLED] = onFulfillment;\n  _subscribers[length + REJECTED] = onRejection;\n\n  if (length === 0 && parent._state) {\n    asap(publish, parent);\n  }\n}\n\nfunction publish(promise) {\n  var subscribers = promise._subscribers;\n  var settled = promise._state;\n\n  if (subscribers.length === 0) {\n    return;\n  }\n\n  var child = undefined,\n      callback = undefined,\n      detail = promise._result;\n\n  for (var i = 0; i < subscribers.length; i += 3) {\n    child = subscribers[i];\n    callback = subscribers[i + settled];\n\n    if (child) {\n      invokeCallback(settled, child, callback, detail);\n    } else {\n      callback(detail);\n    }\n  }\n\n  promise._subscribers.length = 0;\n}\n\nfunction ErrorObject() {\n  this.error = null;\n}\n\nvar TRY_CATCH_ERROR = new ErrorObject();\n\nfunction tryCatch(callback, detail) {\n  try {\n    return callback(detail);\n  } catch (e) {\n    TRY_CATCH_ERROR.error = e;\n    return TRY_CATCH_ERROR;\n  }\n}\n\nfunction invokeCallback(settled, promise, callback, detail) {\n  var hasCallback = isFunction(callback),\n      value = undefined,\n      error = undefined,\n      succeeded = undefined,\n      failed = undefined;\n\n  if (hasCallback) {\n    value = tryCatch(callback, detail);\n\n    if (value === TRY_CATCH_ERROR) {\n      failed = true;\n      error = value.error;\n      value = null;\n    } else {\n      succeeded = true;\n    }\n\n    if (promise === value) {\n      _reject(promise, cannotReturnOwn());\n      return;\n    }\n  } else {\n    value = detail;\n    succeeded = true;\n  }\n\n  if (promise._state !== PENDING) {\n    // noop\n  } else if (hasCallback && succeeded) {\n      _resolve(promise, value);\n    } else if (failed) {\n      _reject(promise, error);\n    } else if (settled === FULFILLED) {\n      fulfill(promise, value);\n    } else if (settled === REJECTED) {\n      _reject(promise, value);\n    }\n}\n\nfunction initializePromise(promise, resolver) {\n  try {\n    resolver(function resolvePromise(value) {\n      _resolve(promise, value);\n    }, function rejectPromise(reason) {\n      _reject(promise, reason);\n    });\n  } catch (e) {\n    _reject(promise, e);\n  }\n}\n\nvar id = 0;\nfunction nextId() {\n  return id++;\n}\n\nfunction makePromise(promise) {\n  promise[PROMISE_ID] = id++;\n  promise._state = undefined;\n  promise._result = undefined;\n  promise._subscribers = [];\n}\n\nfunction Enumerator(Constructor, input) {\n  this._instanceConstructor = Constructor;\n  this.promise = new Constructor(noop);\n\n  if (!this.promise[PROMISE_ID]) {\n    makePromise(this.promise);\n  }\n\n  if (isArray(input)) {\n    this._input = input;\n    this.length = input.length;\n    this._remaining = input.length;\n\n    this._result = new Array(this.length);\n\n    if (this.length === 0) {\n      fulfill(this.promise, this._result);\n    } else {\n      this.length = this.length || 0;\n      this._enumerate();\n      if (this._remaining === 0) {\n        fulfill(this.promise, this._result);\n      }\n    }\n  } else {\n    _reject(this.promise, validationError());\n  }\n}\n\nfunction validationError() {\n  return new Error('Array Methods must be provided an Array');\n};\n\nEnumerator.prototype._enumerate = function () {\n  var length = this.length;\n  var _input = this._input;\n\n  for (var i = 0; this._state === PENDING && i < length; i++) {\n    this._eachEntry(_input[i], i);\n  }\n};\n\nEnumerator.prototype._eachEntry = function (entry, i) {\n  var c = this._instanceConstructor;\n  var resolve$$ = c.resolve;\n\n  if (resolve$$ === resolve) {\n    var _then = getThen(entry);\n\n    if (_then === then && entry._state !== PENDING) {\n      this._settledAt(entry._state, i, entry._result);\n    } else if (typeof _then !== 'function') {\n      this._remaining--;\n      this._result[i] = entry;\n    } else if (c === Promise) {\n      var promise = new c(noop);\n      handleMaybeThenable(promise, entry, _then);\n      this._willSettleAt(promise, i);\n    } else {\n      this._willSettleAt(new c(function (resolve$$) {\n        return resolve$$(entry);\n      }), i);\n    }\n  } else {\n    this._willSettleAt(resolve$$(entry), i);\n  }\n};\n\nEnumerator.prototype._settledAt = function (state, i, value) {\n  var promise = this.promise;\n\n  if (promise._state === PENDING) {\n    this._remaining--;\n\n    if (state === REJECTED) {\n      _reject(promise, value);\n    } else {\n      this._result[i] = value;\n    }\n  }\n\n  if (this._remaining === 0) {\n    fulfill(promise, this._result);\n  }\n};\n\nEnumerator.prototype._willSettleAt = function (promise, i) {\n  var enumerator = this;\n\n  subscribe(promise, undefined, function (value) {\n    return enumerator._settledAt(FULFILLED, i, value);\n  }, function (reason) {\n    return enumerator._settledAt(REJECTED, i, reason);\n  });\n};\n\n/**\n  `Promise.all` accepts an array of promises, and returns a new promise which\n  is fulfilled with an array of fulfillment values for the passed promises, or\n  rejected with the reason of the first passed promise to be rejected. It casts all\n  elements of the passed iterable to promises as it runs this algorithm.\n\n  Example:\n\n  ```javascript\n  let promise1 = resolve(1);\n  let promise2 = resolve(2);\n  let promise3 = resolve(3);\n  let promises = [ promise1, promise2, promise3 ];\n\n  Promise.all(promises).then(function(array){\n    // The array here would be [ 1, 2, 3 ];\n  });\n  ```\n\n  If any of the `promises` given to `all` are rejected, the first promise\n  that is rejected will be given as an argument to the returned promises's\n  rejection handler. For example:\n\n  Example:\n\n  ```javascript\n  let promise1 = resolve(1);\n  let promise2 = reject(new Error(\"2\"));\n  let promise3 = reject(new Error(\"3\"));\n  let promises = [ promise1, promise2, promise3 ];\n\n  Promise.all(promises).then(function(array){\n    // Code here never runs because there are rejected promises!\n  }, function(error) {\n    // error.message === \"2\"\n  });\n  ```\n\n  @method all\n  @static\n  @param {Array} entries array of promises\n  @param {String} label optional string for labeling the promise.\n  Useful for tooling.\n  @return {Promise} promise that is fulfilled when all `promises` have been\n  fulfilled, or rejected if any of them become rejected.\n  @static\n*/\nfunction all(entries) {\n  return new Enumerator(this, entries).promise;\n}\n\n/**\n  `Promise.race` returns a new promise which is settled in the same way as the\n  first passed promise to settle.\n\n  Example:\n\n  ```javascript\n  let promise1 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 2');\n    }, 100);\n  });\n\n  Promise.race([promise1, promise2]).then(function(result){\n    // result === 'promise 2' because it was resolved before promise1\n    // was resolved.\n  });\n  ```\n\n  `Promise.race` is deterministic in that only the state of the first\n  settled promise matters. For example, even if other promises given to the\n  `promises` array argument are resolved, but the first settled promise has\n  become rejected before the other promises became fulfilled, the returned\n  promise will become rejected:\n\n  ```javascript\n  let promise1 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      reject(new Error('promise 2'));\n    }, 100);\n  });\n\n  Promise.race([promise1, promise2]).then(function(result){\n    // Code here never runs\n  }, function(reason){\n    // reason.message === 'promise 2' because promise 2 became rejected before\n    // promise 1 became fulfilled\n  });\n  ```\n\n  An example real-world use case is implementing timeouts:\n\n  ```javascript\n  Promise.race([ajax('foo.json'), timeout(5000)])\n  ```\n\n  @method race\n  @static\n  @param {Array} promises array of promises to observe\n  Useful for tooling.\n  @return {Promise} a promise which settles in the same way as the first passed\n  promise to settle.\n*/\nfunction race(entries) {\n  /*jshint validthis:true */\n  var Constructor = this;\n\n  if (!isArray(entries)) {\n    return new Constructor(function (_, reject) {\n      return reject(new TypeError('You must pass an array to race.'));\n    });\n  } else {\n    return new Constructor(function (resolve, reject) {\n      var length = entries.length;\n      for (var i = 0; i < length; i++) {\n        Constructor.resolve(entries[i]).then(resolve, reject);\n      }\n    });\n  }\n}\n\n/**\n  `Promise.reject` returns a promise rejected with the passed `reason`.\n  It is shorthand for the following:\n\n  ```javascript\n  let promise = new Promise(function(resolve, reject){\n    reject(new Error('WHOOPS'));\n  });\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  let promise = Promise.reject(new Error('WHOOPS'));\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  @method reject\n  @static\n  @param {Any} reason value that the returned promise will be rejected with.\n  Useful for tooling.\n  @return {Promise} a promise rejected with the given `reason`.\n*/\nfunction reject(reason) {\n  /*jshint validthis:true */\n  var Constructor = this;\n  var promise = new Constructor(noop);\n  _reject(promise, reason);\n  return promise;\n}\n\nfunction needsResolver() {\n  throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');\n}\n\nfunction needsNew() {\n  throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\");\n}\n\n/**\n  Promise objects represent the eventual result of an asynchronous operation. The\n  primary way of interacting with a promise is through its `then` method, which\n  registers callbacks to receive either a promise's eventual value or the reason\n  why the promise cannot be fulfilled.\n\n  Terminology\n  -----------\n\n  - `promise` is an object or function with a `then` method whose behavior conforms to this specification.\n  - `thenable` is an object or function that defines a `then` method.\n  - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).\n  - `exception` is a value that is thrown using the throw statement.\n  - `reason` is a value that indicates why a promise was rejected.\n  - `settled` the final resting state of a promise, fulfilled or rejected.\n\n  A promise can be in one of three states: pending, fulfilled, or rejected.\n\n  Promises that are fulfilled have a fulfillment value and are in the fulfilled\n  state.  Promises that are rejected have a rejection reason and are in the\n  rejected state.  A fulfillment value is never a thenable.\n\n  Promises can also be said to *resolve* a value.  If this value is also a\n  promise, then the original promise's settled state will match the value's\n  settled state.  So a promise that *resolves* a promise that rejects will\n  itself reject, and a promise that *resolves* a promise that fulfills will\n  itself fulfill.\n\n\n  Basic Usage:\n  ------------\n\n  ```js\n  let promise = new Promise(function(resolve, reject) {\n    // on success\n    resolve(value);\n\n    // on failure\n    reject(reason);\n  });\n\n  promise.then(function(value) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Advanced Usage:\n  ---------------\n\n  Promises shine when abstracting away asynchronous interactions such as\n  `XMLHttpRequest`s.\n\n  ```js\n  function getJSON(url) {\n    return new Promise(function(resolve, reject){\n      let xhr = new XMLHttpRequest();\n\n      xhr.open('GET', url);\n      xhr.onreadystatechange = handler;\n      xhr.responseType = 'json';\n      xhr.setRequestHeader('Accept', 'application/json');\n      xhr.send();\n\n      function handler() {\n        if (this.readyState === this.DONE) {\n          if (this.status === 200) {\n            resolve(this.response);\n          } else {\n            reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));\n          }\n        }\n      };\n    });\n  }\n\n  getJSON('/posts.json').then(function(json) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Unlike callbacks, promises are great composable primitives.\n\n  ```js\n  Promise.all([\n    getJSON('/posts'),\n    getJSON('/comments')\n  ]).then(function(values){\n    values[0] // => postsJSON\n    values[1] // => commentsJSON\n\n    return values;\n  });\n  ```\n\n  @class Promise\n  @param {function} resolver\n  Useful for tooling.\n  @constructor\n*/\nfunction Promise(resolver) {\n  this[PROMISE_ID] = nextId();\n  this._result = this._state = undefined;\n  this._subscribers = [];\n\n  if (noop !== resolver) {\n    typeof resolver !== 'function' && needsResolver();\n    this instanceof Promise ? initializePromise(this, resolver) : needsNew();\n  }\n}\n\nPromise.all = all;\nPromise.race = race;\nPromise.resolve = resolve;\nPromise.reject = reject;\nPromise._setScheduler = setScheduler;\nPromise._setAsap = setAsap;\nPromise._asap = asap;\n\nPromise.prototype = {\n  constructor: Promise,\n\n  /**\n    The primary way of interacting with a promise is through its `then` method,\n    which registers callbacks to receive either a promise's eventual value or the\n    reason why the promise cannot be fulfilled.\n  \n    ```js\n    findUser().then(function(user){\n      // user is available\n    }, function(reason){\n      // user is unavailable, and you are given the reason why\n    });\n    ```\n  \n    Chaining\n    --------\n  \n    The return value of `then` is itself a promise.  This second, 'downstream'\n    promise is resolved with the return value of the first promise's fulfillment\n    or rejection handler, or rejected if the handler throws an exception.\n  \n    ```js\n    findUser().then(function (user) {\n      return user.name;\n    }, function (reason) {\n      return 'default name';\n    }).then(function (userName) {\n      // If `findUser` fulfilled, `userName` will be the user's name, otherwise it\n      // will be `'default name'`\n    });\n  \n    findUser().then(function (user) {\n      throw new Error('Found user, but still unhappy');\n    }, function (reason) {\n      throw new Error('`findUser` rejected and we're unhappy');\n    }).then(function (value) {\n      // never reached\n    }, function (reason) {\n      // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.\n      // If `findUser` rejected, `reason` will be '`findUser` rejected and we're unhappy'.\n    });\n    ```\n    If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.\n  \n    ```js\n    findUser().then(function (user) {\n      throw new PedagogicalException('Upstream error');\n    }).then(function (value) {\n      // never reached\n    }).then(function (value) {\n      // never reached\n    }, function (reason) {\n      // The `PedgagocialException` is propagated all the way down to here\n    });\n    ```\n  \n    Assimilation\n    ------------\n  \n    Sometimes the value you want to propagate to a downstream promise can only be\n    retrieved asynchronously. This can be achieved by returning a promise in the\n    fulfillment or rejection handler. The downstream promise will then be pending\n    until the returned promise is settled. This is called *assimilation*.\n  \n    ```js\n    findUser().then(function (user) {\n      return findCommentsByAuthor(user);\n    }).then(function (comments) {\n      // The user's comments are now available\n    });\n    ```\n  \n    If the assimliated promise rejects, then the downstream promise will also reject.\n  \n    ```js\n    findUser().then(function (user) {\n      return findCommentsByAuthor(user);\n    }).then(function (comments) {\n      // If `findCommentsByAuthor` fulfills, we'll have the value here\n    }, function (reason) {\n      // If `findCommentsByAuthor` rejects, we'll have the reason here\n    });\n    ```\n  \n    Simple Example\n    --------------\n  \n    Synchronous Example\n  \n    ```javascript\n    let result;\n  \n    try {\n      result = findResult();\n      // success\n    } catch(reason) {\n      // failure\n    }\n    ```\n  \n    Errback Example\n  \n    ```js\n    findResult(function(result, err){\n      if (err) {\n        // failure\n      } else {\n        // success\n      }\n    });\n    ```\n  \n    Promise Example;\n  \n    ```javascript\n    findResult().then(function(result){\n      // success\n    }, function(reason){\n      // failure\n    });\n    ```\n  \n    Advanced Example\n    --------------\n  \n    Synchronous Example\n  \n    ```javascript\n    let author, books;\n  \n    try {\n      author = findAuthor();\n      books  = findBooksByAuthor(author);\n      // success\n    } catch(reason) {\n      // failure\n    }\n    ```\n  \n    Errback Example\n  \n    ```js\n  \n    function foundBooks(books) {\n  \n    }\n  \n    function failure(reason) {\n  \n    }\n  \n    findAuthor(function(author, err){\n      if (err) {\n        failure(err);\n        // failure\n      } else {\n        try {\n          findBoooksByAuthor(author, function(books, err) {\n            if (err) {\n              failure(err);\n            } else {\n              try {\n                foundBooks(books);\n              } catch(reason) {\n                failure(reason);\n              }\n            }\n          });\n        } catch(error) {\n          failure(err);\n        }\n        // success\n      }\n    });\n    ```\n  \n    Promise Example;\n  \n    ```javascript\n    findAuthor().\n      then(findBooksByAuthor).\n      then(function(books){\n        // found books\n    }).catch(function(reason){\n      // something went wrong\n    });\n    ```\n  \n    @method then\n    @param {Function} onFulfilled\n    @param {Function} onRejected\n    Useful for tooling.\n    @return {Promise}\n  */\n  then: then,\n\n  /**\n    `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same\n    as the catch block of a try/catch statement.\n  \n    ```js\n    function findAuthor(){\n      throw new Error('couldn't find that author');\n    }\n  \n    // synchronous\n    try {\n      findAuthor();\n    } catch(reason) {\n      // something went wrong\n    }\n  \n    // async with promises\n    findAuthor().catch(function(reason){\n      // something went wrong\n    });\n    ```\n  \n    @method catch\n    @param {Function} onRejection\n    Useful for tooling.\n    @return {Promise}\n  */\n  'catch': function _catch(onRejection) {\n    return this.then(null, onRejection);\n  }\n};\n\nfunction polyfill() {\n    var local = undefined;\n\n    if (typeof global !== 'undefined') {\n        local = global;\n    } else if (typeof self !== 'undefined') {\n        local = self;\n    } else {\n        try {\n            local = Function('return this')();\n        } catch (e) {\n            throw new Error('polyfill failed because global object is unavailable in this environment');\n        }\n    }\n\n    var P = local.Promise;\n\n    if (P) {\n        var promiseToString = null;\n        try {\n            promiseToString = Object.prototype.toString.call(P.resolve());\n        } catch (e) {\n            // silently ignored\n        }\n\n        if (promiseToString === '[object Promise]' && !P.cast) {\n            return;\n        }\n    }\n\n    local.Promise = Promise;\n}\n\n// Strange compat..\nPromise.polyfill = polyfill;\nPromise.Promise = Promise;\n\nreturn Promise;\n\n})));\n\n}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"_process\":2}],2:[function(require,module,exports){\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n},{}],3:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar EVENTS = exports.EVENTS = {\n  SIGNIN: 'SIGNIN',\n  SIGNOUT: 'SIGNOUT',\n  SIGNUP: 'SIGNUP'\n};\n\nvar URLS = exports.URLS = {\n  token: '/token',\n  signup: '/1/user/signup',\n  requestResetPassword: '/1/user/requestResetPassword',\n  resetPassword: '/1/user/resetPassword',\n  changePassword: '/1/user/changePassword',\n  objects: '/1/objects',\n  objectsAction: '/1/objects/action'\n};\n\nvar SOCIAL_PROVIDERS = exports.SOCIAL_PROVIDERS = {\n  github: { name: 'github', label: 'Github', url: 'www.github.com', css: { backgroundColor: '#444' }, id: 1 },\n  google: { name: 'google', label: 'Google', url: 'www.google.com', css: { backgroundColor: '#dd4b39' }, id: 2 },\n  facebook: { name: 'facebook', label: 'Facebook', url: 'www.facebook.com', css: { backgroundColor: '#3b5998' }, id: 3 },\n  twitter: { name: 'twitter', label: 'Twitter', url: 'www.twitter.com', css: { backgroundColor: '#55acee' }, id: 4 }\n};\n\n},{}],4:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  appName: null,\n  anonymousToken: null,\n  signUpToken: null,\n  apiUrl: 'https://api.backand.com',\n  storagePrefix: 'BACKAND_',\n  storageType: 'local',\n  manageRefreshToken: true,\n  runSigninAfterSignup: true,\n  runSocket: true,\n  socketUrl: 'https://socket.backand.com',\n  isMobile: false\n};\n\n},{}],5:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar filter = exports.filter = {\n  create: function create(fieldName, operator, value) {\n    return {\n      fieldName: fieldName,\n      operator: operator,\n      value: value\n    };\n  },\n  operators: {\n    numeric: { equals: \"equals\", notEquals: \"notEquals\", greaterThan: \"greaterThan\", greaterThanOrEqualsTo: \"greaterThanOrEqualsTo\", lessThan: \"lessThan\", lessThanOrEqualsTo: \"lessThanOrEqualsTo\", empty: \"empty\", notEmpty: \"notEmpty\" },\n    date: { equals: \"equals\", notEquals: \"notEquals\", greaterThan: \"greaterThan\", greaterThanOrEqualsTo: \"greaterThanOrEqualsTo\", lessThan: \"lessThan\", lessThanOrEqualsTo: \"lessThanOrEqualsTo\", empty: \"empty\", notEmpty: \"notEmpty\" },\n    text: { equals: \"equals\", notEquals: \"notEquals\", startsWith: \"startsWith\", endsWith: \"endsWith\", contains: \"contains\", notContains: \"notContains\", empty: \"empty\", notEmpty: \"notEmpty\" },\n    boolean: { equals: \"equals\" },\n    relation: { in: \"in\" }\n  }\n};\n\nvar sort = exports.sort = {\n  create: function create(fieldName, order) {\n    return {\n      fieldName: fieldName,\n      order: order\n    };\n  },\n  orders: { asc: \"asc\", desc: \"desc\" }\n};\n\nvar exclude = exports.exclude = {\n  options: { metadata: \"metadata\", totalRows: \"totalRows\", all: \"metadata&totalRows\" }\n};\n\n},{}],6:[function(require,module,exports){\n'use strict';\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /***********************************************\r\n                                                                                                                                                                                                                                                                   * backand JavaScript Library\r\n                                                                                                                                                                                                                                                                   * Authors: backand\r\n                                                                                                                                                                                                                                                                   * License: MIT (http://www.opensource.org/licenses/mit-license.php)\r\n                                                                                                                                                                                                                                                                   * Compiled At: 26/11/2016\r\n                                                                                                                                                                                                                                                                   ***********************************************/\n\n\nvar _defaults = require('./defaults');\n\nvar _defaults2 = _interopRequireDefault(_defaults);\n\nvar _constants = require('./constants');\n\nvar constants = _interopRequireWildcard(_constants);\n\nvar _helpers = require('./helpers');\n\nvar helpers = _interopRequireWildcard(_helpers);\n\nvar _storage = require('./utils/storage');\n\nvar _storage2 = _interopRequireDefault(_storage);\n\nvar _http = require('./utils/http');\n\nvar _http2 = _interopRequireDefault(_http);\n\nvar _socket = require('./utils/socket');\n\nvar _socket2 = _interopRequireDefault(_socket);\n\nvar _auth = require('./services/auth');\n\nvar auth = _interopRequireWildcard(_auth);\n\nvar _crud = require('./services/crud');\n\nvar crud = _interopRequireWildcard(_crud);\n\nvar _files = require('./services/files');\n\nvar files = _interopRequireWildcard(_files);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n(function () {\n  'use strict';\n\n  window['backand'] = {};\n  window['backand'].initiate = function () {\n    var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n\n    // combine defaults with user config\n    _extends(_defaults2.default, config);\n\n    // verify new defaults\n    if (!_defaults2.default.appName) throw new Error('appName is missing');\n    if (!_defaults2.default.anonymousToken) throw new Error('anonymousToken is missing');\n    if (!_defaults2.default.signUpToken) throw new Error('signUpToken is missing');\n\n    // init globals\n    var storage = new _storage2.default(_defaults2.default.storageType, _defaults2.default.storagePrefix);\n    var http = (0, _http2.default)({\n      baseURL: _defaults2.default.apiUrl\n    });\n    var scope = {\n      storage: storage,\n      http: http\n    };\n    var socket = null;\n    if (_defaults2.default.runSocket) {\n      socket = new _socket2.default(_defaults2.default.socketUrl);\n      scope.socket = socket;\n    }\n\n    // bind globals to all service functions\n    var service = _extends({}, auth, crud, files);\n    for (var fn in service) {\n      service[fn] = service[fn].bind(scope);\n    }\n\n    // set interceptor for authHeaders & refreshToken\n    http.config.interceptors = {\n      request: function request(config) {\n        if (config.url.indexOf(constants.URLS.token) === -1 && storage.get('user')) {\n          config.headers = _extends({}, config.headers, storage.get('user').token);\n        }\n      },\n      responseError: function responseError(error, config, resolve, reject, scb, ecb) {\n        var _this = this;\n\n        if (config.url.indexOf(constants.URLS.token) === -1 && _defaults2.default.manageRefreshToken && config.headers && (config.headers.AnonymousToken || config.headers.Authorization) && error.status === 401 && error.data && error.data.Message === 'invalid or expired token') {\n          auth.__handleRefreshToken__.call(scope, error).then(function (response) {\n            _this.request(config, scb, ecb);\n          }).catch(function (error) {\n            ecb && ecb(error);\n            reject(error);\n          });\n        }\n      }\n    };\n\n    // expose backand namespace to window\n    window['backand'] = {\n      service: service,\n      constants: constants,\n      helpers: helpers\n    };\n    if (_defaults2.default.runSocket) {\n      storage.get('user') && storage.get('user').token.Authorization && socket.connect(storage.get('user').token.Authorization, _defaults2.default.anonymousToken, _defaults2.default.appName);\n      window['backand'].socket = socket;\n    }\n  };\n})();\n\n},{\"./constants\":3,\"./defaults\":4,\"./helpers\":5,\"./services/auth\":7,\"./services/crud\":8,\"./services/files\":9,\"./utils/http\":10,\"./utils/socket\":11,\"./utils/storage\":12}],7:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.__initiate__ = __initiate__;\nexports.__handleRefreshToken__ = __handleRefreshToken__;\nexports.useAnonymousAuth = useAnonymousAuth;\nexports.signin = signin;\nexports.signup = signup;\nexports.socialSignin = socialSignin;\nexports.socialSignup = socialSignup;\nexports.requestResetPassword = requestResetPassword;\nexports.resetPassword = resetPassword;\nexports.changePassword = changePassword;\nexports.signout = signout;\nexports.getUserDetails = getUserDetails;\n\nvar _es6Promise = require('es6-promise');\n\nvar _constants = require('./../constants');\n\nvar _defaults = require('./../defaults');\n\nvar _defaults2 = _interopRequireDefault(_defaults);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction __initiate__() {\n  this.storage.get('user') && __setAuth__.call(this, this.storage.get('user'));\n}\nfunction __generateFakeResponse__() {\n  var status = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  var statusText = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  var headers = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  var data = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '';\n\n  return {\n    status: status,\n    statusText: statusText,\n    headers: headers,\n    data: data\n  };\n}\nfunction __dispatchEvent__(name) {\n  var event = void 0;\n  if (document.createEvent) {\n    event = document.createEvent('Event');\n    event.initEvent(name, true, true);\n    event.eventName = name;\n    window.dispatchEvent(event);\n  } else {\n    event = document.createEventObject();\n    event.eventType = name;\n    event.eventName = name;\n    window.fireEvent('on' + event.eventType, event);\n  }\n}\nfunction __clearAuth__() {\n  // this.storage.remove('user');\n  // delete this.http.config.headers['AnonymousToken'];\n  // delete this.http.config.headers['Authorization'];\n}\nfunction __setAuth__(data) {\n  this.storage.set('user', data);\n  // this.http.config.headers =\n  //   Object.assign(this.http.config.headers, this.storage.get('user').token)\n}\nfunction __handleRefreshToken__(error) {\n  var _this = this;\n\n  return new _es6Promise.Promise(function (resolve, reject) {\n    var user = _this.storage.get('user');\n    if (!user || !user.details.refresh_token) {\n      reject(__generateFakeResponse__(0, '', [], 'No cached user or refreshToken found. authentication is required.'));\n    } else {\n      __signinWithToken__.call(_this, {\n        username: user.details.username,\n        refreshToken: user.details.refresh_token\n      }).then(function (response) {\n        resolve(response);\n      }).catch(function (error) {\n        reject(error);\n      });\n    }\n  });\n};\nfunction useAnonymousAuth(scb) {\n  var _this2 = this;\n\n  return new _es6Promise.Promise(function (resolve, reject) {\n    __clearAuth__.call(_this2);\n    __setAuth__.call(_this2, {\n      token: {\n        AnonymousToken: _defaults2.default.anonymousToken\n      },\n      details: {\n        username: 'anonymous',\n        name: 'anonymous user'\n      }\n    });\n    scb && scb(__generateFakeResponse__(200, 'OK', [], _this2.storage.get('user')));\n    resolve(__generateFakeResponse__(200, 'OK', [], _this2.storage.get('user')));\n  });\n}\nfunction signin(username, password, scb, ecb) {\n  var _this3 = this;\n\n  return new _es6Promise.Promise(function (resolve, reject) {\n    __clearAuth__.call(_this3);\n    _this3.http({\n      url: _constants.URLS.token,\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      data: 'username=' + username + '&password=' + password + '&appName=' + _defaults2.default.appName + '&grant_type=password'\n    }).then(function (response) {\n      __setAuth__.call(_this3, {\n        token: {\n          Authorization: 'Bearer ' + response.data.access_token\n        },\n        details: response.data\n      });\n      __dispatchEvent__(_constants.EVENTS.SIGNIN);\n      if (_defaults2.default.runSocket) {\n        _this3.socket.connect(_this3.storage.get('user').token.Authorization, _defaults2.default.anonymousToken, _defaults2.default.appName);\n      }\n      scb && scb(response);\n      resolve(response);\n    }).catch(function (error) {\n      ecb && ecb(error);\n      reject(error);\n    });\n  });\n}\nfunction signup(email, password, confirmPassword, firstName, lastName, scb, ecb) {\n  var _this4 = this;\n\n  return new _es6Promise.Promise(function (resolve, reject) {\n    __clearAuth__.call(_this4);\n    _this4.http({\n      url: _constants.URLS.signup,\n      method: 'POST',\n      headers: {\n        'SignUpToken': _defaults2.default.signUpToken\n      },\n      data: {\n        firstName: firstName,\n        lastName: lastName,\n        email: email,\n        password: password,\n        confirmPassword: confirmPassword\n      }\n    }, scb, ecb).then(function (response) {\n      __dispatchEvent__(_constants.EVENTS.SIGNUP);\n      if (_defaults2.default.runSigninAfterSignup) {\n        return signin.call(_this4, response.data.username, password);\n      } else {\n        scb && scb(response);\n        resolve(response);\n      }\n    }).then(function (response) {\n      scb && scb(response);\n      resolve(response);\n    }).catch(function (error) {\n      ecb && ecb(error);\n      reject(error);\n    });\n  });\n}\nfunction __getSocialUrl__(providerName, isSignup, isAutoSignUp) {\n  var provider = _constants.SOCIAL_PROVIDERS[providerName];\n  var action = isSignup ? 'up' : 'in';\n  var autoSignUpParam = !isSignup && isAutoSignUp ? \"&signupIfNotSignedIn=true\" : '';\n  return '/user/socialSign' + action + '?provider=' + provider.label + autoSignUpParam + '&response_type=token&client_id=self&redirect_uri=' + provider.url + '&state=';\n}\nfunction __checkSocialAuthWindowForData__(socialAuthWindow) {\n  var timer = setInterval(function () {\n    if (socialAuthWindow.closed) {\n      clearInterval(timer);\n    }\n    var locationCopy = _extends({}, socialAuthWindow.location);\n    var dataMatch = /\\?(data|error)=(.+)/.exec(locationCopy.href);\n    if (dataMatch && dataMatch[1] && dataMatch[2]) {\n      clearInterval(timer);\n      var data = dataMatch[1] === 'data' ? __generateFakeResponse__(200, 'OK', [], JSON.parse(decodeURIComponent(dataMatch[2].replace(/#.*/, '')))) : __generateFakeResponse__(0, '', [], JSON.parse(decodeURIComponent(dataMatch[2].replace(/#.*/, ''))));\n      socialAuthWindow.opener.postMessage(JSON.stringify(data), locationCopy.origin);\n    }\n  }, 333);\n}\nfunction __socialAuth__(provider, isSignUp, spec, email, scb, ecb) {\n  var _this5 = this;\n\n  return new _es6Promise.Promise(function (resolve, reject) {\n    if (!_constants.SOCIAL_PROVIDERS[provider]) {\n      ecb && ecb(__generateFakeResponse__(0, '', [], 'Unknown Social Provider'));\n      reject(__generateFakeResponse__(0, '', [], 'Unknown Social Provider'));\n    }\n    var windowUrl = _defaults2.default.apiUrl + '/1/' + __getSocialUrl__(provider, isSignUp, true) + '&appname=' + _defaults2.default.appName + (email ? '&email=' + email : '') + '&returnAddress=';\n    var socialAuthWindow = window.open('', '', spec);\n    socialAuthWindow.location = windowUrl;\n    socialAuthWindow.focus();\n    window.addEventListener('message', function (e) {\n      var origin = e.origin || e.originalEvent.origin;\n      if (origin !== location.origin) {\n        ecb && ecb(_this5._generateFakeResponse(0, '', [], 'Unknown Origin Message'));\n        reject(_this5._generateFakeResponse(0, '', [], 'Unknown Origin Message'));\n      }\n      window.removeEventListener('message', null, false);\n      socialAuthWindow.close();\n      // setTimeout(socialAuthWindow = null, 1000);\n\n      var res = JSON.parse(e.data);\n      if (res.status != 200) {\n        ecb && ecb(res);\n        reject(res);\n      } else {\n        scb && scb(res);\n        resolve(res);\n      }\n    }, false);\n    __checkSocialAuthWindowForData__(socialAuthWindow);\n  });\n}\nfunction socialSignin(provider, scb, ecb) {\n  var _this6 = this;\n\n  var spec = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'left=1, top=1, width=600, height=600';\n\n  return new _es6Promise.Promise(function (resolve, reject) {\n    __clearAuth__.call(_this6);\n    __socialAuth__(provider, false, spec, null, scb, ecb).then(function (response) {\n      __dispatchEvent__(_constants.EVENTS.SIGNUP);\n      return __signinWithToken__.call(_this6, {\n        accessToken: response.data.access_token\n      });\n    }).then(function (response) {\n      scb && scb(response);\n      resolve(response);\n    }).catch(function (error) {\n      ecb && ecb(error);\n      reject(error);\n    });\n  });\n};\nfunction socialSignup(provider, email, scb, ecb) {\n  var _this7 = this;\n\n  var spec = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 'left=1, top=1, width=600, height=600';\n\n  return new _es6Promise.Promise(function (resolve, reject) {\n    __clearAuth__.call(_this7);\n    _socialAuth(provider, true, spec, email, scb, ecb).then(function (response) {\n      __dispatchEvent__(_constants.EVENTS.SIGNUP);\n      if (_defaults2.default.runSigninAfterSignup) {\n        return __signinWithToken__.call(_this7, {\n          accessToken: response.data.access_token\n        });\n      } else {\n        scb && scb(response);\n        resolve(response);\n      }\n    }).then(function (response) {\n      scb && scb(response);\n      resolve(response);\n    }).catch(function (error) {\n      ecb && ecb(error);\n      reject(error);\n    });\n  });\n}\nfunction __signinWithToken__(tokenData) {\n  var _this8 = this;\n\n  return new _es6Promise.Promise(function (resolve, reject) {\n    __clearAuth__.call(_this8);\n    var data = [];\n    for (var obj in tokenData) {\n      data.push(encodeURIComponent(obj) + '=' + encodeURIComponent(tokenData[obj]));\n    }\n    data = data.join(\"&\");\n\n    _this8.http({\n      url: _constants.URLS.token,\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      data: data + '&appName=' + _defaults2.default.appName + '&grant_type=password'\n    }).then(function (response) {\n      __setAuth__.call(_this8, {\n        token: {\n          Authorization: 'Bearer ' + response.data.access_token\n        },\n        details: response.data\n      });\n      __dispatchEvent__(_constants.EVENTS.SIGNIN);\n      if (_defaults2.default.runSocket) {\n        _this8.socket.connect(_this8.storage.get('user').token.Authorization, _defaults2.default.anonymousToken, _defaults2.default.appName);\n      }\n      resolve(response);\n    }).catch(function (error) {\n      reject(error);\n    });\n  });\n}\nfunction requestResetPassword(username, scb, ecb) {\n  return this.http({\n    url: _constants.URLS.requestResetPassword,\n    method: 'POST',\n    data: {\n      appName: _defaults2.default.appName,\n      username: username\n    }\n  }, scb, ecb);\n}\nfunction resetPassword(newPassword, resetToken, scb, ecb) {\n  return this.http({\n    url: _constants.URLS.resetPassword,\n    method: 'POST',\n    data: {\n      newPassword: newPassword,\n      resetToken: resetToken\n    }\n  }, scb, ecb);\n}\nfunction changePassword(oldPassword, newPassword, scb, ecb) {\n  return this.http({\n    url: _constants.URLS.changePassword,\n    method: 'POST',\n    data: {\n      oldPassword: oldPassword,\n      newPassword: newPassword\n    }\n  }, scb, ecb);\n}\nfunction signout(scb) {\n  __clearAuth__.call(this);\n  __dispatchEvent__(_constants.EVENTS.SIGNOUT);\n}\nfunction getUserDetails() {\n  return this.storage.get('user').details;\n}\n\n},{\"./../constants\":3,\"./../defaults\":4,\"es6-promise\":1}],8:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getList = getList;\nexports.create = create;\nexports.getOne = getOne;\nexports.update = update;\nexports.remove = remove;\n\nvar _es6Promise = require('es6-promise');\n\nvar _constants = require('./../constants');\n\nfunction __encodeParameters__(allowedParams, params) {\n  var uri = '?';\n  for (var param in params) {\n    if (allowedParams.indexOf(param) != -1) {\n      uri = uri.concat(param + '=' + encodeURI(JSON.stringify(params[param])));\n    }\n  }\n  return uri;\n}\nfunction getList(object, params, scb, ecb) {\n  var allowedParams = ['pageSize', 'pageNumber', 'filter', 'sort', 'search', 'exclude', 'deep', 'relatedObjects'];\n  return this.http({\n    url: _constants.URLS.objects + '/' + object + __encodeParameters__(allowedParams, params),\n    method: 'GET'\n  }, scb, ecb);\n}\nfunction create(object, data, params, scb, ecb) {\n  var allowedParams = ['returnObject', 'deep'];\n  return this.http({\n    url: _constants.URLS.objects + '/' + object + __encodeParameters__(allowedParams, params),\n    method: 'POST',\n    data: data\n  }, scb, ecb);\n}\nfunction getOne(object, id, params, scb, ecb) {\n  var allowedParams = ['deep', 'exclude', 'level'];\n  return this.http({\n    url: _constants.URLS.objects + '/' + object + '/' + id + __encodeParameters__(allowedParams, params),\n    method: 'GET'\n  }, scb, ecb);\n}\nfunction update(object, id, data, params, scb, ecb) {\n  var allowedParams = ['returnObject', 'deep'];\n  return this.http({\n    url: _constants.URLS.objects + '/' + object + '/' + id + __encodeParameters__(allowedParams, params),\n    method: 'PUT',\n    data: data\n  }, scb, ecb);\n}\nfunction remove(object, id, scb, ecb) {\n  return this.http({\n    url: _constants.URLS.objects + '/' + object + '/' + id,\n    method: 'DELETE'\n  }, scb, ecb);\n}\n\n},{\"./../constants\":3,\"es6-promise\":1}],9:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.uploadFile = uploadFile;\nexports.deleteFile = deleteFile;\n\nvar _es6Promise = require('es6-promise');\n\nvar _constants = require('./../constants');\n\nfunction uploadFile(objectName, fileActionName, filename, filedata, scb, ecb) {\n  return this.http({\n    url: _constants.URLS.objectsAction + '/' + objectName + '?name=' + fileActionName,\n    method: 'POST',\n    data: {\n      filename: filename,\n      filedata: filedata.substr(filedata.indexOf(',') + 1, filedata.length)\n    }\n  }, scb, ecb);\n}\nfunction deleteFile(objectName, fileActionName, filename, scb, ecb) {\n  return this.http({\n    url: _constants.URLS.objectsAction + '/' + objectName + '?name=' + fileActionName,\n    method: 'DELETE',\n    data: {\n      filename: filename\n    }\n  }, scb, ecb);\n}\n\n},{\"./../constants\":3,\"es6-promise\":1}],10:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _es6Promise = require('es6-promise');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Http = function () {\n  function Http() {\n    var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, Http);\n\n    if (!window.XMLHttpRequest) throw new Error('XMLHttpRequest is not supported by the browser');\n\n    this.config = _extends({ url: '/', method: 'GET', headers: {} }, config);\n  }\n\n  _createClass(Http, [{\n    key: '_getHeaders',\n    value: function _getHeaders(headers) {\n      return headers.split('\\r\\n').filter(function (header) {\n        return header;\n      }).map(function (header) {\n        var jheader = {};\n        var parts = header.split(':');\n        jheader[parts[0]] = parts[1];\n        return jheader;\n      });\n    }\n  }, {\n    key: '_getData',\n    value: function _getData(type, data) {\n      if (!type) {\n        return data;\n      } else if (type.indexOf('json') === -1) {\n        return data;\n      } else {\n        return JSON.parse(data);\n      }\n    }\n  }, {\n    key: '_createResponse',\n    value: function _createResponse(req) {\n      return {\n        status: req.status,\n        statusText: req.statusText,\n        headers: this._getHeaders(req.getAllResponseHeaders()),\n        data: this._getData(req.getResponseHeader(\"Content-Type\"), req.responseText)\n      };\n    }\n  }, {\n    key: '_setHeaders',\n    value: function _setHeaders(req, headers) {\n      for (var header in headers) {\n        req.setRequestHeader(header, headers[header]);\n      }\n    }\n  }, {\n    key: '_setData',\n    value: function _setData(req, data) {\n      if (!data) {\n        req.send();\n      } else if ((typeof data === 'undefined' ? 'undefined' : _typeof(data)) != 'object') {\n        req.send(data);\n      } else {\n        req.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\n        req.send(JSON.stringify(data));\n      }\n    }\n  }, {\n    key: 'request',\n    value: function request(cfg, scb, ecb) {\n      var _this = this;\n\n      return new _es6Promise.Promise(function (resolve, reject) {\n        var req = new XMLHttpRequest();\n        var config = _extends({}, _this.config, cfg);\n        config.interceptors.request && config.interceptors.request(config);\n\n        req.open(config.method, '' + (config.baseURL ? config.baseURL + '/' : '') + config.url, true);\n        req.onreadystatechange = function () {\n          if (req.readyState == XMLHttpRequest.DONE) {\n            var res = _this._createResponse(req);\n            if (res.status === 200) {\n              config.interceptors.response && config.interceptors.response.call(_this, res, config, resolve, reject, scb, ecb);\n              scb && scb(res);\n              resolve(res);\n            } else {\n              config.interceptors.responseError && config.interceptors.responseError.call(_this, res, config, resolve, reject, scb, ecb);\n              ecb && ecb(res);\n              reject(res);\n            }\n          }\n        };\n        _this._setHeaders(req, config.headers);\n        _this._setData(req, config.data);\n      });\n    }\n  }]);\n\n  return Http;\n}();\n\nfunction createInstance() {\n  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var context = new Http(config);\n  var instance = function instance() {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return Http.prototype.request.apply(context, args);\n  };\n  instance.config = context.config;\n  return instance;\n}\nexports.default = createInstance;\n\n// var context = new Http(config);\n// var instance = (...args) => httpClient.prototype.request.apply(context, args);\n// instance.config = context.config;\n// export default instance;\n\n},{\"es6-promise\":1}],11:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Socket = function () {\n  function Socket(url) {\n    _classCallCheck(this, Socket);\n\n    if (!window.io) console.warn('SocketIO is not included');\n    this.url = url;\n    this.socket = io.connect(this.url, { 'forceNew': true });\n    this.onArr = [];\n  }\n\n  _createClass(Socket, [{\n    key: 'on',\n    value: function on(eventName, callback) {\n      this.onArr.push({ eventName: eventName, callback: callback });\n    }\n  }, {\n    key: 'connect',\n    value: function connect(token, anonymousToken, appName) {\n      var _this = this;\n\n      this.socket = io.connect(this.url, { 'forceNew': true });\n\n      this.socket.on('connect', function () {\n        console.info('trying to establish a socket connection to ' + appName + ' ...');\n        _this.socket.emit(\"login\", token, anonymousToken, appName);\n      });\n\n      this.socket.on('authorized', function () {\n        console.info('socket connected');\n        _this.onArr.forEach(function (fn) {\n          _this.socket.on(fn.eventName, function (data) {\n            fn.callback(data);\n          });\n        });\n      });\n\n      this.socket.on('notAuthorized', function () {\n        setTimeout(function () {\n          return _this.disconnect();\n        }, 1000);\n      });\n\n      this.socket.on('disconnect', function () {\n        console.info('socket disconnect');\n      });\n\n      this.socket.on('reconnecting', function () {\n        console.info('socket reconnecting');\n      });\n\n      this.socket.on('error', function (error) {\n        console.warn('error: ' + error);\n      });\n    }\n  }, {\n    key: 'disconnect',\n    value: function disconnect() {\n      if (this.socket) {\n        this.socket.close();\n      }\n    }\n  }]);\n\n  return Socket;\n}();\n\nexports.default = Socket;\n\n},{}],12:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Storage = function () {\n  function Storage(type) {\n    var prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n\n    _classCallCheck(this, Storage);\n\n    if (!window[type + 'Storage']) throw new Error(type + 'Storage is not supported by the browser');\n    this.prefix = prefix;\n    this.delimiter = '__________';\n    this.storage = window[type + 'Storage'];\n  }\n\n  _createClass(Storage, [{\n    key: 'get',\n    value: function get(key) {\n      var item = this.storage.getItem('' + this.prefix + key);\n      if (!item) {\n        return item;\n      } else {\n        var _item$split = item.split(this.delimiter),\n            _item$split2 = _slicedToArray(_item$split, 2),\n            type = _item$split2[0],\n            val = _item$split2[1];\n\n        if (type != 'JSON') {\n          return val;\n        } else {\n          return JSON.parse(val);\n        }\n      }\n    }\n  }, {\n    key: 'set',\n    value: function set(key, val) {\n      if ((typeof val === 'undefined' ? 'undefined' : _typeof(val)) != 'object') {\n        this.storage.setItem('' + this.prefix + key, 'STRING' + this.delimiter + val);\n      } else {\n        this.storage.setItem('' + this.prefix + key, 'JSON' + this.delimiter + JSON.stringify(val));\n      }\n    }\n  }, {\n    key: 'remove',\n    value: function remove(key) {\n      this.storage.removeItem('' + this.prefix + key);\n    }\n  }, {\n    key: 'clear',\n    value: function clear() {\n      for (var i = 0; i < this.storage.length; i++) {\n        if (this.storage.getItem(this.storage.key(i)).indexOf(this.prefix) != -1) this.remove(this.storage.key(i));\n      }\n    }\n  }]);\n\n  return Storage;\n}();\n\nexports.default = Storage;\n\n},{}]},{},[6])\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJub2RlX21vZHVsZXMvZXM2LXByb21pc2UvZGlzdC9lczYtcHJvbWlzZS5qcyIsIm5vZGVfbW9kdWxlcy9wcm9jZXNzL2Jyb3dzZXIuanMiLCJzcmNcXGNvbnN0YW50cy5qcyIsInNyY1xcZGVmYXVsdHMuanMiLCJzcmNcXGhlbHBlcnMuanMiLCJzcmNcXGluZGV4LmpzIiwic3JjXFxzZXJ2aWNlc1xcYXV0aC5qcyIsInNyY1xcc2VydmljZXNcXGNydWQuanMiLCJzcmNcXHNlcnZpY2VzXFxmaWxlcy5qcyIsInNyY1xcdXRpbHNcXGh0dHAuanMiLCJzcmNcXHV0aWxzXFxzb2NrZXQuanMiLCJzcmNcXHV0aWxzXFxzdG9yYWdlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQ0FBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7QUNwb0NBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7O0FDcExPLElBQU0sMEJBQVM7QUFDcEIsVUFBUSxRQURZO0FBRXBCLFdBQVMsU0FGVztBQUdwQixVQUFRO0FBSFksQ0FBZjs7QUFNQSxJQUFNLHNCQUFPO0FBQ2xCLFNBQU8sUUFEVztB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QixDQURmO0FBQUE7QUFBQSxZQUNFLElBREY7QUFBQSxZQUNRLEdBRFI7O0FBRUgsWUFBSSxRQUFRLE1BQVosRUFBb0I7QUFDbEIsaUJBQU8sR0FBUDtBQUNELFNBRkQsTUFHSztBQUNILGlCQUFPLEtBQUssS0FBTCxDQUFXLEdBQVgsQ0FBUDtBQUNEO0FBQ0Y7QUFDRjs7O3dCQUNJLEcsRUFBSyxHLEVBQUs7QUFDYixVQUFJLFFBQU8sR0FBUCx5Q0FBTyxHQUFQLE1BQWMsUUFBbEIsRUFBNEI7QUFDMUIsYUFBSyxPQUFMLENBQWEsT0FBYixNQUF3QixLQUFLLE1BQTdCLEdBQXNDLEdBQXRDLGFBQXNELEtBQUssU0FBM0QsR0FBdUUsR0FBdkU7QUFDRCxPQUZELE1BR0s7QUFDSCxhQUFLLE9BQUwsQ0FBYSxPQUFiLE1BQXdCLEtBQUssTUFBN0IsR0FBc0MsR0FBdEMsV0FBb0QsS0FBSyxTQUF6RCxHQUFxRSxLQUFLLFNBQUwsQ0FBZSxHQUFmLENBQXJFO0FBQ0Q7QUFDRjs7OzJCQUNPLEcsRUFBSztBQUNYLFdBQUssT0FBTCxDQUFhLFVBQWIsTUFBMkIsS0FBSyxNQUFoQyxHQUF5QyxHQUF6QztBQUNEOzs7NEJBQ087QUFDTixXQUFJLElBQUksSUFBRyxDQUFYLEVBQWMsSUFBSSxLQUFLLE9BQUwsQ0FBYSxNQUEvQixFQUF1QyxHQUF2QyxFQUEyQztBQUN4QyxZQUFHLEtBQUssT0FBTCxDQUFhLE9BQWIsQ0FBcUIsS0FBSyxPQUFMLENBQWEsR0FBYixDQUFpQixDQUFqQixDQUFyQixFQUEwQyxPQUExQyxDQUFrRCxLQUFLLE1BQXZELEtBQWtFLENBQUMsQ0FBdEUsRUFDQyxLQUFLLE1BQUwsQ0FBWSxLQUFLLE9BQUwsQ0FBYSxHQUFiLENBQWlCLENBQWpCLENBQVo7QUFDSDtBQUNGOzs7Ozs7a0JBdkNrQixPIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gZSh0LG4scil7ZnVuY3Rpb24gcyhvLHUpe2lmKCFuW29dKXtpZighdFtvXSl7dmFyIGE9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtpZighdSYmYSlyZXR1cm4gYShvLCEwKTtpZihpKXJldHVybiBpKG8sITApO3ZhciBmPW5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIrbytcIidcIik7dGhyb3cgZi5jb2RlPVwiTU9EVUxFX05PVF9GT1VORFwiLGZ9dmFyIGw9bltvXT17ZXhwb3J0czp7fX07dFtvXVswXS5jYWxsKGwuZXhwb3J0cyxmdW5jdGlvbihlKXt2YXIgbj10W29dWzFdW2VdO3JldHVybiBzKG4/bjplKX0sbCxsLmV4cG9ydHMsZSx0LG4scil9cmV0dXJuIG5bb10uZXhwb3J0c312YXIgaT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2Zvcih2YXIgbz0wO288ci5sZW5ndGg7bysrKXMocltvXSk7cmV0dXJuIHN9KSIsIi8qIVxuICogQG92ZXJ2aWV3IGVzNi1wcm9taXNlIC0gYSB0aW55IGltcGxlbWVudGF0aW9uIG9mIFByb21pc2VzL0ErLlxuICogQGNvcHlyaWdodCBDb3B5cmlnaHQgKGMpIDIwMTQgWWVodWRhIEthdHosIFRvbSBEYWxlLCBTdGVmYW4gUGVubmVyIGFuZCBjb250cmlidXRvcnMgKENvbnZlcnNpb24gdG8gRVM2IEFQSSBieSBKYWtlIEFyY2hpYmFsZClcbiAqIEBsaWNlbnNlICAgTGljZW5zZWQgdW5kZXIgTUlUIGxpY2Vuc2VcbiAqICAgICAgICAgICAgU2VlIGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9zdGVmYW5wZW5uZXIvZXM2LXByb21pc2UvbWFzdGVyL0xJQ0VOU0VcbiAqIEB2ZXJzaW9uICAgNC4wLjVcbiAqL1xuXG4oZnVuY3Rpb24gKGdsb2JhbCwgZmFjdG9yeSkge1xuICAgIHR5cGVvZiBleHBvcnRzID09PSAnb2JqZWN0JyAmJiB0eXBlb2YgbW9kdWxlICE9PSAndW5kZWZpbmVkJyA/IG1vZHVsZS5leHBvcnRzID0gZmFjdG9yeSgpIDpcbiAgICB0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQgPyBkZWZpbmUoZmFjdG9yeSkgOlxuICAgIChnbG9iYWwuRVM2UHJvbWlzZSA9IGZhY3RvcnkoKSk7XG59KHRoaXMsIChmdW5jdGlvbiAoKSB7ICd1c2Ugc3RyaWN0JztcblxuZnVuY3Rpb24gb2JqZWN0T3JGdW5jdGlvbih4KSB7XG4gIHJldHVybiB0eXBlb2YgeCA9PT0gJ2Z1bmN0aW9uJyB8fCB0eXBlb2YgeCA9PT0gJ29iamVjdCcgJiYgeCAhPT0gbnVsbDtcbn1cblxuZnVuY3Rpb24gaXNGdW5jdGlvbih4KSB7XG4gIHJldHVybiB0eXBlb2YgeCA9PT0gJ2Z1bmN0aW9uJztcbn1cblxudmFyIF9pc0FycmF5ID0gdW5kZWZpbmVkO1xuaWYgKCFBcnJheS5pc0FycmF5KSB7XG4gIF9pc0FycmF5ID0gZnVuY3Rpb24gKHgpIHtcbiAgICByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHgpID09PSAnW29iamVjdCBBcnJheV0nO1xuICB9O1xufSBlbHNlIHtcbiAgX2lzQXJyYXkgPSBBcnJheS5pc0FycmF5O1xufVxuXG52YXIgaXNBcnJheSA9IF9pc0FycmF5O1xuXG52YXIgbGVuID0gMDtcbnZhciB2ZXJ0eE5leHQgPSB1bmRlZmluZWQ7XG52YXIgY3VzdG9tU2NoZWR1bGVyRm4gPSB1bmRlZmluZWQ7XG5cbnZhciBhc2FwID0gZnVuY3Rpb24gYXNhcChjYWxsYmFjaywgYXJnKSB7XG4gIHF1ZXVlW2xlbl0gPSBjYWxsYmFjaztcbiAgcXVldWVbbGVuICsgMV0gPSBhcmc7XG4gIGxlbiArPSAyO1xuICBpZiAobGVuID09PSAyKSB7XG4gICAgLy8gSWYgbGVuIGlzIDIsIHRoYXQgbWVhbnMgdGhhdCB3ZSBuZWVkIHRvIHNjaGVkdWxlIGFuIGFzeW5jIGZsdXNoLlxuICAgIC8vIElmIGFkZGl0aW9uYWwgY2FsbGJhY2tzIGFyZSBxdWV1ZWQgYmVmb3JlIHRoZSBxdWV1ZSBpcyBmbHVzaGVkLCB0aGV5XG4gICAgLy8gd2lsbCBiZSBwcm9jZXNzZWQgYnkgdGhpcyBmbHVzaCB0aGF0IHdlIGFyZSBzY2hlZHVsaW5nLlxuICAgIGlmIChjdXN0b21TY2hlZHVsZXJGbikge1xuICAgICAgY3VzdG9tU2NoZWR1bGVyRm4oZmx1c2gpO1xuICAgIH0gZWxzZSB7XG4gICAgICBzY2hlZHVsZUZsdXNoKCk7XG4gICAgfVxuICB9XG59O1xuXG5mdW5jdGlvbiBzZXRTY2hlZHVsZXIoc2NoZWR1bGVGbikge1xuICBjdXN0b21TY2hlZHVsZXJGbiA9IHNjaGVkdWxlRm47XG59XG5cbmZ1bmN0aW9uIHNldEFzYXAoYXNhcEZuKSB7XG4gIGFzYXAgPSBhc2FwRm47XG59XG5cbnZhciBicm93c2VyV2luZG93ID0gdHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgPyB3aW5kb3cgOiB1bmRlZmluZWQ7XG52YXIgYnJvd3Nlckdsb2JhbCA9IGJyb3dzZXJXaW5kb3cgfHwge307XG52YXIgQnJvd3Nlck11dGF0aW9uT2JzZXJ2ZXIgPSBicm93c2VyR2xvYmFsLk11dGF0aW9uT2JzZXJ2ZXIgfHwgYnJvd3Nlckdsb2JhbC5XZWJLaXRNdXRhdGlvbk9ic2VydmVyO1xudmFyIGlzTm9kZSA9IHR5cGVvZiBzZWxmID09PSAndW5kZWZpbmVkJyAmJiB0eXBlb2YgcHJvY2VzcyAhPT0gJ3VuZGVmaW5lZCcgJiYgKHt9KS50b1N0cmluZy5jYWxsKHByb2Nlc3MpID09PSAnW29iamVjdCBwcm9jZXNzXSc7XG5cbi8vIHRlc3QgZm9yIHdlYiB3b3JrZXIgYnV0IG5vdCBpbiBJRTEwXG52YXIgaXNXb3JrZXIgPSB0eXBlb2YgVWludDhDbGFtcGVkQXJyYXkgIT09ICd1bmRlZmluZWQnICYmIHR5cGVvZiBpbXBvcnRTY3JpcHRzICE9PSAndW5kZWZpbmVkJyAmJiB0eXBlb2YgTWVzc2FnZUNoYW5uZWwgIT09ICd1bmRlZmluZWQnO1xuXG4vLyBub2RlXG5mdW5jdGlvbiB1c2VOZXh0VGljaygpIHtcbiAgLy8gbm9kZSB2ZXJzaW9uIDAuMTAueCBkaXNwbGF5cyBhIGRlcHJlY2F0aW9uIHdhcm5pbmcgd2hlbiBuZXh0VGljayBpcyB1c2VkIHJlY3Vyc2l2ZWx5XG4gIC8vIHNlZSBodHRwczovL2dpdGh1Yi5jb20vY3Vqb2pzL3doZW4vaXNzdWVzLzQxMCBmb3IgZGV0YWlsc1xuICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBwcm9jZXNzLm5leHRUaWNrKGZsdXNoKTtcbiAgfTtcbn1cblxuLy8gdmVydHhcbmZ1bmN0aW9uIHVzZVZlcnR4VGltZXIoKSB7XG4gIGlmICh0eXBlb2YgdmVydHhOZXh0ICE9PSAndW5kZWZpbmVkJykge1xuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICB2ZXJ0eE5leHQoZmx1c2gpO1xuICAgIH07XG4gIH1cblxuICByZXR1cm4gdXNlU2V0VGltZW91dCgpO1xufVxuXG5mdW5jdGlvbiB1c2VNdXRhdGlvbk9ic2VydmVyKCkge1xuICB2YXIgaXRlcmF0aW9ucyA9IDA7XG4gIHZhciBvYnNlcnZlciA9IG5ldyBCcm93c2VyTXV0YXRpb25PYnNlcnZlcihmbHVzaCk7XG4gIHZhciBub2RlID0gZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoJycpO1xuICBvYnNlcnZlci5vYnNlcnZlKG5vZGUsIHsgY2hhcmFjdGVyRGF0YTogdHJ1ZSB9KTtcblxuICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgIG5vZGUuZGF0YSA9IGl0ZXJhdGlvbnMgPSArK2l0ZXJhdGlvbnMgJSAyO1xuICB9O1xufVxuXG4vLyB3ZWIgd29ya2VyXG5mdW5jdGlvbiB1c2VNZXNzYWdlQ2hhbm5lbCgpIHtcbiAgdmFyIGNoYW5uZWwgPSBuZXcgTWVzc2FnZUNoYW5uZWwoKTtcbiAgY2hhbm5lbC5wb3J0MS5vbm1lc3NhZ2UgPSBmbHVzaDtcbiAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gY2hhbm5lbC5wb3J0Mi5wb3N0TWVzc2FnZSgwKTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gdXNlU2V0VGltZW91dCgpIHtcbiAgLy8gU3RvcmUgc2V0VGltZW91dCByZWZlcmVuY2Ugc28gZXM2LXByb21pc2Ugd2lsbCBiZSB1bmFmZmVjdGVkIGJ5XG4gIC8vIG90aGVyIGNvZGUgbW9kaWZ5aW5nIHNldFRpbWVvdXQgKGxpa2Ugc2lub24udXNlRmFrZVRpbWVycygpKVxuICB2YXIgZ2xvYmFsU2V0VGltZW91dCA9IHNldFRpbWVvdXQ7XG4gIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIGdsb2JhbFNldFRpbWVvdXQoZmx1c2gsIDEpO1xuICB9O1xufVxuXG52YXIgcXVldWUgPSBuZXcgQXJyYXkoMTAwMCk7XG5mdW5jdGlvbiBmbHVzaCgpIHtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW47IGkgKz0gMikge1xuICAgIHZhciBjYWxsYmFjayA9IHF1ZXVlW2ldO1xuICAgIHZhciBhcmcgPSBxdWV1ZVtpICsgMV07XG5cbiAgICBjYWxsYmFjayhhcmcpO1xuXG4gICAgcXVldWVbaV0gPSB1bmRlZmluZWQ7XG4gICAgcXVldWVbaSArIDFdID0gdW5kZWZpbmVkO1xuICB9XG5cbiAgbGVuID0gMDtcbn1cblxuZnVuY3Rpb24gYXR0ZW1wdFZlcnR4KCkge1xuICB0cnkge1xuICAgIHZhciByID0gcmVxdWlyZTtcbiAgICB2YXIgdmVydHggPSByKCd2ZXJ0eCcpO1xuICAgIHZlcnR4TmV4dCA9IHZlcnR4LnJ1bk9uTG9vcCB8fCB2ZXJ0eC5ydW5PbkNvbnRleHQ7XG4gICAgcmV0dXJuIHVzZVZlcnR4VGltZXIoKTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIHJldHVybiB1c2VTZXRUaW1lb3V0KCk7XG4gIH1cbn1cblxudmFyIHNjaGVkdWxlRmx1c2ggPSB1bmRlZmluZWQ7XG4vLyBEZWNpZGUgd2hhdCBhc3luYyBtZXRob2QgdG8gdXNlIHRvIHRyaWdnZXJpbmcgcHJvY2Vzc2luZyBvZiBxdWV1ZWQgY2FsbGJhY2tzOlxuaWYgKGlzTm9kZSkge1xuICBzY2hlZHVsZUZsdXNoID0gdXNlTmV4dFRpY2soKTtcbn0gZWxzZSBpZiAoQnJvd3Nlck11dGF0aW9uT2JzZXJ2ZXIpIHtcbiAgc2NoZWR1bGVGbHVzaCA9IHVzZU11dGF0aW9uT2JzZXJ2ZXIoKTtcbn0gZWxzZSBpZiAoaXNXb3JrZXIpIHtcbiAgc2NoZWR1bGVGbHVzaCA9IHVzZU1lc3NhZ2VDaGFubmVsKCk7XG59IGVsc2UgaWYgKGJyb3dzZXJXaW5kb3cgPT09IHVuZGVmaW5lZCAmJiB0eXBlb2YgcmVxdWlyZSA9PT0gJ2Z1bmN0aW9uJykge1xuICBzY2hlZHVsZUZsdXNoID0gYXR0ZW1wdFZlcnR4KCk7XG59IGVsc2Uge1xuICBzY2hlZHVsZUZsdXNoID0gdXNlU2V0VGltZW91dCgpO1xufVxuXG5mdW5jdGlvbiB0aGVuKG9uRnVsZmlsbG1lbnQsIG9uUmVqZWN0aW9uKSB7XG4gIHZhciBfYXJndW1lbnRzID0gYXJndW1lbnRzO1xuXG4gIHZhciBwYXJlbnQgPSB0aGlzO1xuXG4gIHZhciBjaGlsZCA9IG5ldyB0aGlzLmNvbnN0cnVjdG9yKG5vb3ApO1xuXG4gIGlmIChjaGlsZFtQUk9NSVNFX0lEXSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgbWFrZVByb21pc2UoY2hpbGQpO1xuICB9XG5cbiAgdmFyIF9zdGF0ZSA9IHBhcmVudC5fc3RhdGU7XG5cbiAgaWYgKF9zdGF0ZSkge1xuICAgIChmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgY2FsbGJhY2sgPSBfYXJndW1lbnRzW19zdGF0ZSAtIDFdO1xuICAgICAgYXNhcChmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiBpbnZva2VDYWxsYmFjayhfc3RhdGUsIGNoaWxkLCBjYWxsYmFjaywgcGFyZW50Ll9yZXN1bHQpO1xuICAgICAgfSk7XG4gICAgfSkoKTtcbiAgfSBlbHNlIHtcbiAgICBzdWJzY3JpYmUocGFyZW50LCBjaGlsZCwgb25GdWxmaWxsbWVudCwgb25SZWplY3Rpb24pO1xuICB9XG5cbiAgcmV0dXJuIGNoaWxkO1xufVxuXG4vKipcbiAgYFByb21pc2UucmVzb2x2ZWAgcmV0dXJucyBhIHByb21pc2UgdGhhdCB3aWxsIGJlY29tZSByZXNvbHZlZCB3aXRoIHRoZVxuICBwYXNzZWQgYHZhbHVlYC4gSXQgaXMgc2hvcnRoYW5kIGZvciB0aGUgZm9sbG93aW5nOlxuXG4gIGBgYGphdmFzY3JpcHRcbiAgbGV0IHByb21pc2UgPSBuZXcgUHJvbWlzZShmdW5jdGlvbihyZXNvbHZlLCByZWplY3Qpe1xuICAgIHJlc29sdmUoMSk7XG4gIH0pO1xuXG4gIHByb21pc2UudGhlbihmdW5jdGlvbih2YWx1ZSl7XG4gICAgLy8gdmFsdWUgPT09IDFcbiAgfSk7XG4gIGBgYFxuXG4gIEluc3RlYWQgb2Ygd3JpdGluZyB0aGUgYWJvdmUsIHlvdXIgY29kZSBub3cgc2ltcGx5IGJlY29tZXMgdGhlIGZvbGxvd2luZzpcblxuICBgYGBqYXZhc2NyaXB0XG4gIGxldCBwcm9taXNlID0gUHJvbWlzZS5yZXNvbHZlKDEpO1xuXG4gIHByb21pc2UudGhlbihmdW5jdGlvbih2YWx1ZSl7XG4gICAgLy8gdmFsdWUgPT09IDFcbiAgfSk7XG4gIGBgYFxuXG4gIEBtZXRob2QgcmVzb2x2ZVxuICBAc3RhdGljXG4gIEBwYXJhbSB7QW55fSB2YWx1ZSB2YWx1ZSB0aGF0IHRoZSByZXR1cm5lZCBwcm9taXNlIHdpbGwgYmUgcmVzb2x2ZWQgd2l0aFxuICBVc2VmdWwgZm9yIHRvb2xpbmcuXG4gIEByZXR1cm4ge1Byb21pc2V9IGEgcHJvbWlzZSB0aGF0IHdpbGwgYmVjb21lIGZ1bGZpbGxlZCB3aXRoIHRoZSBnaXZlblxuICBgdmFsdWVgXG4qL1xuZnVuY3Rpb24gcmVzb2x2ZShvYmplY3QpIHtcbiAgLypqc2hpbnQgdmFsaWR0aGlzOnRydWUgKi9cbiAgdmFyIENvbnN0cnVjdG9yID0gdGhpcztcblxuICBpZiAob2JqZWN0ICYmIHR5cGVvZiBvYmplY3QgPT09ICdvYmplY3QnICYmIG9iamVjdC5jb25zdHJ1Y3RvciA9PT0gQ29uc3RydWN0b3IpIHtcbiAgICByZXR1cm4gb2JqZWN0O1xuICB9XG5cbiAgdmFyIHByb21pc2UgPSBuZXcgQ29uc3RydWN0b3Iobm9vcCk7XG4gIF9yZXNvbHZlKHByb21pc2UsIG9iamVjdCk7XG4gIHJldHVybiBwcm9taXNlO1xufVxuXG52YXIgUFJPTUlTRV9JRCA9IE1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnN1YnN0cmluZygxNik7XG5cbmZ1bmN0aW9uIG5vb3AoKSB7fVxuXG52YXIgUEVORElORyA9IHZvaWQgMDtcbnZhciBGVUxGSUxMRUQgPSAxO1xudmFyIFJFSkVDVEVEID0gMjtcblxudmFyIEdFVF9USEVOX0VSUk9SID0gbmV3IEVycm9yT2JqZWN0KCk7XG5cbmZ1bmN0aW9uIHNlbGZGdWxmaWxsbWVudCgpIHtcbiAgcmV0dXJuIG5ldyBUeXBlRXJyb3IoXCJZb3UgY2Fubm90IHJlc29sdmUgYSBwcm9taXNlIHdpdGggaXRzZWxmXCIpO1xufVxuXG5mdW5jdGlvbiBjYW5ub3RSZXR1cm5Pd24oKSB7XG4gIHJldHVybiBuZXcgVHlwZUVycm9yKCdBIHByb21pc2VzIGNhbGxiYWNrIGNhbm5vdCByZXR1cm4gdGhhdCBzYW1lIHByb21pc2UuJyk7XG59XG5cbmZ1bmN0aW9uIGdldFRoZW4ocHJvbWlzZSkge1xuICB0cnkge1xuICAgIHJldHVybiBwcm9taXNlLnRoZW47XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgR0VUX1RIRU5fRVJST1IuZXJyb3IgPSBlcnJvcjtcbiAgICByZXR1cm4gR0VUX1RIRU5fRVJST1I7XG4gIH1cbn1cblxuZnVuY3Rpb24gdHJ5VGhlbih0aGVuLCB2YWx1ZSwgZnVsZmlsbG1lbnRIYW5kbGVyLCByZWplY3Rpb25IYW5kbGVyKSB7XG4gIHRyeSB7XG4gICAgdGhlbi5jYWxsKHZhbHVlLCBmdWxmaWxsbWVudEhhbmRsZXIsIHJlamVjdGlvbkhhbmRsZXIpO1xuICB9IGNhdGNoIChlKSB7XG4gICAgcmV0dXJuIGU7XG4gIH1cbn1cblxuZnVuY3Rpb24gaGFuZGxlRm9yZWlnblRoZW5hYmxlKHByb21pc2UsIHRoZW5hYmxlLCB0aGVuKSB7XG4gIGFzYXAoZnVuY3Rpb24gKHByb21pc2UpIHtcbiAgICB2YXIgc2VhbGVkID0gZmFsc2U7XG4gICAgdmFyIGVycm9yID0gdHJ5VGhlbih0aGVuLCB0aGVuYWJsZSwgZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgICBpZiAoc2VhbGVkKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIHNlYWxlZCA9IHRydWU7XG4gICAgICBpZiAodGhlbmFibGUgIT09IHZhbHVlKSB7XG4gICAgICAgIF9yZXNvbHZlKHByb21pc2UsIHZhbHVlKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGZ1bGZpbGwocHJvbWlzZSwgdmFsdWUpO1xuICAgICAgfVxuICAgIH0sIGZ1bmN0aW9uIChyZWFzb24pIHtcbiAgICAgIGlmIChzZWFsZWQpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgc2VhbGVkID0gdHJ1ZTtcblxuICAgICAgX3JlamVjdChwcm9taXNlLCByZWFzb24pO1xuICAgIH0sICdTZXR0bGU6ICcgKyAocHJvbWlzZS5fbGFiZWwgfHwgJyB1bmtub3duIHByb21pc2UnKSk7XG5cbiAgICBpZiAoIXNlYWxlZCAmJiBlcnJvcikge1xuICAgICAgc2VhbGVkID0gdHJ1ZTtcbiAgICAgIF9yZWplY3QocHJvbWlzZSwgZXJyb3IpO1xuICAgIH1cbiAgfSwgcHJvbWlzZSk7XG59XG5cbmZ1bmN0aW9uIGhhbmRsZU93blRoZW5hYmxlKHByb21pc2UsIHRoZW5hYmxlKSB7XG4gIGlmICh0aGVuYWJsZS5fc3RhdGUgPT09IEZVTEZJTExFRCkge1xuICAgIGZ1bGZpbGwocHJvbWlzZSwgdGhlbmFibGUuX3Jlc3VsdCk7XG4gIH0gZWxzZSBpZiAodGhlbmFibGUuX3N0YXRlID09PSBSRUpFQ1RFRCkge1xuICAgIF9yZWplY3QocHJvbWlzZSwgdGhlbmFibGUuX3Jlc3VsdCk7XG4gIH0gZWxzZSB7XG4gICAgc3Vic2NyaWJlKHRoZW5hYmxlLCB1bmRlZmluZWQsIGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgICAgcmV0dXJuIF9yZXNvbHZlKHByb21pc2UsIHZhbHVlKTtcbiAgICB9LCBmdW5jdGlvbiAocmVhc29uKSB7XG4gICAgICByZXR1cm4gX3JlamVjdChwcm9taXNlLCByZWFzb24pO1xuICAgIH0pO1xuICB9XG59XG5cbmZ1bmN0aW9uIGhhbmRsZU1heWJlVGhlbmFibGUocHJvbWlzZSwgbWF5YmVUaGVuYWJsZSwgdGhlbiQkKSB7XG4gIGlmIChtYXliZVRoZW5hYmxlLmNvbnN0cnVjdG9yID09PSBwcm9taXNlLmNvbnN0cnVjdG9yICYmIHRoZW4kJCA9PT0gdGhlbiAmJiBtYXliZVRoZW5hYmxlLmNvbnN0cnVjdG9yLnJlc29sdmUgPT09IHJlc29sdmUpIHtcbiAgICBoYW5kbGVPd25UaGVuYWJsZShwcm9taXNlLCBtYXliZVRoZW5hYmxlKTtcbiAgfSBlbHNlIHtcbiAgICBpZiAodGhlbiQkID09PSBHRVRfVEhFTl9FUlJPUikge1xuICAgICAgX3JlamVjdChwcm9taXNlLCBHRVRfVEhFTl9FUlJPUi5lcnJvcik7XG4gICAgfSBlbHNlIGlmICh0aGVuJCQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgZnVsZmlsbChwcm9taXNlLCBtYXliZVRoZW5hYmxlKTtcbiAgICB9IGVsc2UgaWYgKGlzRnVuY3Rpb24odGhlbiQkKSkge1xuICAgICAgaGFuZGxlRm9yZWlnblRoZW5hYmxlKHByb21pc2UsIG1heWJlVGhlbmFibGUsIHRoZW4kJCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGZ1bGZpbGwocHJvbWlzZSwgbWF5YmVUaGVuYWJsZSk7XG4gICAgfVxuICB9XG59XG5cbmZ1bmN0aW9uIF9yZXNvbHZlKHByb21pc2UsIHZhbHVlKSB7XG4gIGlmIChwcm9taXNlID09PSB2YWx1ZSkge1xuICAgIF9yZWplY3QocHJvbWlzZSwgc2VsZkZ1bGZpbGxtZW50KCkpO1xuICB9IGVsc2UgaWYgKG9iamVjdE9yRnVuY3Rpb24odmFsdWUpKSB7XG4gICAgaGFuZGxlTWF5YmVUaGVuYWJsZShwcm9taXNlLCB2YWx1ZSwgZ2V0VGhlbih2YWx1ZSkpO1xuICB9IGVsc2Uge1xuICAgIGZ1bGZpbGwocHJvbWlzZSwgdmFsdWUpO1xuICB9XG59XG5cbmZ1bmN0aW9uIHB1Ymxpc2hSZWplY3Rpb24ocHJvbWlzZSkge1xuICBpZiAocHJvbWlzZS5fb25lcnJvcikge1xuICAgIHByb21pc2UuX29uZXJyb3IocHJvbWlzZS5fcmVzdWx0KTtcbiAgfVxuXG4gIHB1Ymxpc2gocHJvbWlzZSk7XG59XG5cbmZ1bmN0aW9uIGZ1bGZpbGwocHJvbWlzZSwgdmFsdWUpIHtcbiAgaWYgKHByb21pc2UuX3N0YXRlICE9PSBQRU5ESU5HKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgcHJvbWlzZS5fcmVzdWx0ID0gdmFsdWU7XG4gIHByb21pc2UuX3N0YXRlID0gRlVMRklMTEVEO1xuXG4gIGlmIChwcm9taXNlLl9zdWJzY3JpYmVycy5sZW5ndGggIT09IDApIHtcbiAgICBhc2FwKHB1Ymxpc2gsIHByb21pc2UpO1xuICB9XG59XG5cbmZ1bmN0aW9uIF9yZWplY3QocHJvbWlzZSwgcmVhc29uKSB7XG4gIGlmIChwcm9taXNlLl9zdGF0ZSAhPT0gUEVORElORykge1xuICAgIHJldHVybjtcbiAgfVxuICBwcm9taXNlLl9zdGF0ZSA9IFJFSkVDVEVEO1xuICBwcm9taXNlLl9yZXN1bHQgPSByZWFzb247XG5cbiAgYXNhcChwdWJsaXNoUmVqZWN0aW9uLCBwcm9taXNlKTtcbn1cblxuZnVuY3Rpb24gc3Vic2NyaWJlKHBhcmVudCwgY2hpbGQsIG9uRnVsZmlsbG1lbnQsIG9uUmVqZWN0aW9uKSB7XG4gIHZhciBfc3Vic2NyaWJlcnMgPSBwYXJlbnQuX3N1YnNjcmliZXJzO1xuICB2YXIgbGVuZ3RoID0gX3N1YnNjcmliZXJzLmxlbmd0aDtcblxuICBwYXJlbnQuX29uZXJyb3IgPSBudWxsO1xuXG4gIF9zdWJzY3JpYmVyc1tsZW5ndGhdID0gY2hpbGQ7XG4gIF9zdWJzY3JpYmVyc1tsZW5ndGggKyBGVUxGSUxMRURdID0gb25GdWxmaWxsbWVudDtcbiAgX3N1YnNjcmliZXJzW2xlbmd0aCArIFJFSkVDVEVEXSA9IG9uUmVqZWN0aW9uO1xuXG4gIGlmIChsZW5ndGggPT09IDAgJiYgcGFyZW50Ll9zdGF0ZSkge1xuICAgIGFzYXAocHVibGlzaCwgcGFyZW50KTtcbiAgfVxufVxuXG5mdW5jdGlvbiBwdWJsaXNoKHByb21pc2UpIHtcbiAgdmFyIHN1YnNjcmliZXJzID0gcHJvbWlzZS5fc3Vic2NyaWJlcnM7XG4gIHZhciBzZXR0bGVkID0gcHJvbWlzZS5fc3RhdGU7XG5cbiAgaWYgKHN1YnNjcmliZXJzLmxlbmd0aCA9PT0gMCkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIHZhciBjaGlsZCA9IHVuZGVmaW5lZCxcbiAgICAgIGNhbGxiYWNrID0gdW5kZWZpbmVkLFxuICAgICAgZGV0YWlsID0gcHJvbWlzZS5fcmVzdWx0O1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgc3Vic2NyaWJlcnMubGVuZ3RoOyBpICs9IDMpIHtcbiAgICBjaGlsZCA9IHN1YnNjcmliZXJzW2ldO1xuICAgIGNhbGxiYWNrID0gc3Vic2NyaWJlcnNbaSArIHNldHRsZWRdO1xuXG4gICAgaWYgKGNoaWxkKSB7XG4gICAgICBpbnZva2VDYWxsYmFjayhzZXR0bGVkLCBjaGlsZCwgY2FsbGJhY2ssIGRldGFpbCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGNhbGxiYWNrKGRldGFpbCk7XG4gICAgfVxuICB9XG5cbiAgcHJvbWlzZS5fc3Vic2NyaWJlcnMubGVuZ3RoID0gMDtcbn1cblxuZnVuY3Rpb24gRXJyb3JPYmplY3QoKSB7XG4gIHRoaXMuZXJyb3IgPSBudWxsO1xufVxuXG52YXIgVFJZX0NBVENIX0VSUk9SID0gbmV3IEVycm9yT2JqZWN0KCk7XG5cbmZ1bmN0aW9uIHRyeUNhdGNoKGNhbGxiYWNrLCBkZXRhaWwpIHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gY2FsbGJhY2soZGV0YWlsKTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIFRSWV9DQVRDSF9FUlJPUi5lcnJvciA9IGU7XG4gICAgcmV0dXJuIFRSWV9DQVRDSF9FUlJPUjtcbiAgfVxufVxuXG5mdW5jdGlvbiBpbnZva2VDYWxsYmFjayhzZXR0bGVkLCBwcm9taXNlLCBjYWxsYmFjaywgZGV0YWlsKSB7XG4gIHZhciBoYXNDYWxsYmFjayA9IGlzRnVuY3Rpb24oY2FsbGJhY2spLFxuICAgICAgdmFsdWUgPSB1bmRlZmluZWQsXG4gICAgICBlcnJvciA9IHVuZGVmaW5lZCxcbiAgICAgIHN1Y2NlZWRlZCA9IHVuZGVmaW5lZCxcbiAgICAgIGZhaWxlZCA9IHVuZGVmaW5lZDtcblxuICBpZiAoaGFzQ2FsbGJhY2spIHtcbiAgICB2YWx1ZSA9IHRyeUNhdGNoKGNhbGxiYWNrLCBkZXRhaWwpO1xuXG4gICAgaWYgKHZhbHVlID09PSBUUllfQ0FUQ0hfRVJST1IpIHtcbiAgICAgIGZhaWxlZCA9IHRydWU7XG4gICAgICBlcnJvciA9IHZhbHVlLmVycm9yO1xuICAgICAgdmFsdWUgPSBudWxsO1xuICAgIH0gZWxzZSB7XG4gICAgICBzdWNjZWVkZWQgPSB0cnVlO1xuICAgIH1cblxuICAgIGlmIChwcm9taXNlID09PSB2YWx1ZSkge1xuICAgICAgX3JlamVjdChwcm9taXNlLCBjYW5ub3RSZXR1cm5Pd24oKSk7XG4gICAgICByZXR1cm47XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIHZhbHVlID0gZGV0YWlsO1xuICAgIHN1Y2NlZWRlZCA9IHRydWU7XG4gIH1cblxuICBpZiAocHJvbWlzZS5fc3RhdGUgIT09IFBFTkRJTkcpIHtcbiAgICAvLyBub29wXG4gIH0gZWxzZSBpZiAoaGFzQ2FsbGJhY2sgJiYgc3VjY2VlZGVkKSB7XG4gICAgICBfcmVzb2x2ZShwcm9taXNlLCB2YWx1ZSk7XG4gICAgfSBlbHNlIGlmIChmYWlsZWQpIHtcbiAgICAgIF9yZWplY3QocHJvbWlzZSwgZXJyb3IpO1xuICAgIH0gZWxzZSBpZiAoc2V0dGxlZCA9PT0gRlVMRklMTEVEKSB7XG4gICAgICBmdWxmaWxsKHByb21pc2UsIHZhbHVlKTtcbiAgICB9IGVsc2UgaWYgKHNldHRsZWQgPT09IFJFSkVDVEVEKSB7XG4gICAgICBfcmVqZWN0KHByb21pc2UsIHZhbHVlKTtcbiAgICB9XG59XG5cbmZ1bmN0aW9uIGluaXRpYWxpemVQcm9taXNlKHByb21pc2UsIHJlc29sdmVyKSB7XG4gIHRyeSB7XG4gICAgcmVzb2x2ZXIoZnVuY3Rpb24gcmVzb2x2ZVByb21pc2UodmFsdWUpIHtcbiAgICAgIF9yZXNvbHZlKHByb21pc2UsIHZhbHVlKTtcbiAgICB9LCBmdW5jdGlvbiByZWplY3RQcm9taXNlKHJlYXNvbikge1xuICAgICAgX3JlamVjdChwcm9taXNlLCByZWFzb24pO1xuICAgIH0pO1xuICB9IGNhdGNoIChlKSB7XG4gICAgX3JlamVjdChwcm9taXNlLCBlKTtcbiAgfVxufVxuXG52YXIgaWQgPSAwO1xuZnVuY3Rpb24gbmV4dElkKCkge1xuICByZXR1cm4gaWQrKztcbn1cblxuZnVuY3Rpb24gbWFrZVByb21pc2UocHJvbWlzZSkge1xuICBwcm9taXNlW1BST01JU0VfSURdID0gaWQrKztcbiAgcHJvbWlzZS5fc3RhdGUgPSB1bmRlZmluZWQ7XG4gIHByb21pc2UuX3Jlc3VsdCA9IHVuZGVmaW5lZDtcbiAgcHJvbWlzZS5fc3Vic2NyaWJlcnMgPSBbXTtcbn1cblxuZnVuY3Rpb24gRW51bWVyYXRvcihDb25zdHJ1Y3RvciwgaW5wdXQpIHtcbiAgdGhpcy5faW5zdGFuY2VDb25zdHJ1Y3RvciA9IENvbnN0cnVjdG9yO1xuICB0aGlzLnByb21pc2UgPSBuZXcgQ29uc3RydWN0b3Iobm9vcCk7XG5cbiAgaWYgKCF0aGlzLnByb21pc2VbUFJPTUlTRV9JRF0pIHtcbiAgICBtYWtlUHJvbWlzZSh0aGlzLnByb21pc2UpO1xuICB9XG5cbiAgaWYgKGlzQXJyYXkoaW5wdXQpKSB7XG4gICAgdGhpcy5faW5wdXQgPSBpbnB1dDtcbiAgICB0aGlzLmxlbmd0aCA9IGlucHV0Lmxlbmd0aDtcbiAgICB0aGlzLl9yZW1haW5pbmcgPSBpbnB1dC5sZW5ndGg7XG5cbiAgICB0aGlzLl9yZXN1bHQgPSBuZXcgQXJyYXkodGhpcy5sZW5ndGgpO1xuXG4gICAgaWYgKHRoaXMubGVuZ3RoID09PSAwKSB7XG4gICAgICBmdWxmaWxsKHRoaXMucHJvbWlzZSwgdGhpcy5fcmVzdWx0KTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5sZW5ndGggPSB0aGlzLmxlbmd0aCB8fCAwO1xuICAgICAgdGhpcy5fZW51bWVyYXRlKCk7XG4gICAgICBpZiAodGhpcy5fcmVtYWluaW5nID09PSAwKSB7XG4gICAgICAgIGZ1bGZpbGwodGhpcy5wcm9taXNlLCB0aGlzLl9yZXN1bHQpO1xuICAgICAgfVxuICAgIH1cbiAgfSBlbHNlIHtcbiAgICBfcmVqZWN0KHRoaXMucHJvbWlzZSwgdmFsaWRhdGlvbkVycm9yKCkpO1xuICB9XG59XG5cbmZ1bmN0aW9uIHZhbGlkYXRpb25FcnJvcigpIHtcbiAgcmV0dXJuIG5ldyBFcnJvcignQXJyYXkgTWV0aG9kcyBtdXN0IGJlIHByb3ZpZGVkIGFuIEFycmF5Jyk7XG59O1xuXG5FbnVtZXJhdG9yLnByb3RvdHlwZS5fZW51bWVyYXRlID0gZnVuY3Rpb24gKCkge1xuICB2YXIgbGVuZ3RoID0gdGhpcy5sZW5ndGg7XG4gIHZhciBfaW5wdXQgPSB0aGlzLl9pbnB1dDtcblxuICBmb3IgKHZhciBpID0gMDsgdGhpcy5fc3RhdGUgPT09IFBFTkRJTkcgJiYgaSA8IGxlbmd0aDsgaSsrKSB7XG4gICAgdGhpcy5fZWFjaEVudHJ5KF9pbnB1dFtpXSwgaSk7XG4gIH1cbn07XG5cbkVudW1lcmF0b3IucHJvdG90eXBlLl9lYWNoRW50cnkgPSBmdW5jdGlvbiAoZW50cnksIGkpIHtcbiAgdmFyIGMgPSB0aGlzLl9pbnN0YW5jZUNvbnN0cnVjdG9yO1xuICB2YXIgcmVzb2x2ZSQkID0gYy5yZXNvbHZlO1xuXG4gIGlmIChyZXNvbHZlJCQgPT09IHJlc29sdmUpIHtcbiAgICB2YXIgX3RoZW4gPSBnZXRUaGVuKGVudHJ5KTtcblxuICAgIGlmIChfdGhlbiA9PT0gdGhlbiAmJiBlbnRyeS5fc3RhdGUgIT09IFBFTkRJTkcpIHtcbiAgICAgIHRoaXMuX3NldHRsZWRBdChlbnRyeS5fc3RhdGUsIGksIGVudHJ5Ll9yZXN1bHQpO1xuICAgIH0gZWxzZSBpZiAodHlwZW9mIF90aGVuICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgICB0aGlzLl9yZW1haW5pbmctLTtcbiAgICAgIHRoaXMuX3Jlc3VsdFtpXSA9IGVudHJ5O1xuICAgIH0gZWxzZSBpZiAoYyA9PT0gUHJvbWlzZSkge1xuICAgICAgdmFyIHByb21pc2UgPSBuZXcgYyhub29wKTtcbiAgICAgIGhhbmRsZU1heWJlVGhlbmFibGUocHJvbWlzZSwgZW50cnksIF90aGVuKTtcbiAgICAgIHRoaXMuX3dpbGxTZXR0bGVBdChwcm9taXNlLCBpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5fd2lsbFNldHRsZUF0KG5ldyBjKGZ1bmN0aW9uIChyZXNvbHZlJCQpIHtcbiAgICAgICAgcmV0dXJuIHJlc29sdmUkJChlbnRyeSk7XG4gICAgICB9KSwgaSk7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIHRoaXMuX3dpbGxTZXR0bGVBdChyZXNvbHZlJCQoZW50cnkpLCBpKTtcbiAgfVxufTtcblxuRW51bWVyYXRvci5wcm90b3R5cGUuX3NldHRsZWRBdCA9IGZ1bmN0aW9uIChzdGF0ZSwgaSwgdmFsdWUpIHtcbiAgdmFyIHByb21pc2UgPSB0aGlzLnByb21pc2U7XG5cbiAgaWYgKHByb21pc2UuX3N0YXRlID09PSBQRU5ESU5HKSB7XG4gICAgdGhpcy5fcmVtYWluaW5nLS07XG5cbiAgICBpZiAoc3RhdGUgPT09IFJFSkVDVEVEKSB7XG4gICAgICBfcmVqZWN0KHByb21pc2UsIHZhbHVlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5fcmVzdWx0W2ldID0gdmFsdWU7XG4gICAgfVxuICB9XG5cbiAgaWYgKHRoaXMuX3JlbWFpbmluZyA9PT0gMCkge1xuICAgIGZ1bGZpbGwocHJvbWlzZSwgdGhpcy5fcmVzdWx0KTtcbiAgfVxufTtcblxuRW51bWVyYXRvci5wcm90b3R5cGUuX3dpbGxTZXR0bGVBdCA9IGZ1bmN0aW9uIChwcm9taXNlLCBpKSB7XG4gIHZhciBlbnVtZXJhdG9yID0gdGhpcztcblxuICBzdWJzY3JpYmUocHJvbWlzZSwgdW5kZWZpbmVkLCBmdW5jdGlvbiAodmFsdWUpIHtcbiAgICByZXR1cm4gZW51bWVyYXRvci5fc2V0dGxlZEF0KEZVTEZJTExFRCwgaSwgdmFsdWUpO1xuICB9LCBmdW5jdGlvbiAocmVhc29uKSB7XG4gICAgcmV0dXJuIGVudW1lcmF0b3IuX3NldHRsZWRBdChSRUpFQ1RFRCwgaSwgcmVhc29uKTtcbiAgfSk7XG59O1xuXG4vKipcbiAgYFByb21pc2UuYWxsYCBhY2NlcHRzIGFuIGFycmF5IG9mIHByb21pc2VzLCBhbmQgcmV0dXJucyBhIG5ldyBwcm9taXNlIHdoaWNoXG4gIGlzIGZ1bGZpbGxlZCB3aXRoIGFuIGFycmF5IG9mIGZ1bGZpbGxtZW50IHZhbHVlcyBmb3IgdGhlIHBhc3NlZCBwcm9taXNlcywgb3JcbiAgcmVqZWN0ZWQgd2l0aCB0aGUgcmVhc29uIG9mIHRoZSBmaXJzdCBwYXNzZWQgcHJvbWlzZSB0byBiZSByZWplY3RlZC4gSXQgY2FzdHMgYWxsXG4gIGVsZW1lbnRzIG9mIHRoZSBwYXNzZWQgaXRlcmFibGUgdG8gcHJvbWlzZXMgYXMgaXQgcnVucyB0aGlzIGFsZ29yaXRobS5cblxuICBFeGFtcGxlOlxuXG4gIGBgYGphdmFzY3JpcHRcbiAgbGV0IHByb21pc2UxID0gcmVzb2x2ZSgxKTtcbiAgbGV0IHByb21pc2UyID0gcmVzb2x2ZSgyKTtcbiAgbGV0IHByb21pc2UzID0gcmVzb2x2ZSgzKTtcbiAgbGV0IHByb21pc2VzID0gWyBwcm9taXNlMSwgcHJvbWlzZTIsIHByb21pc2UzIF07XG5cbiAgUHJvbWlzZS5hbGwocHJvbWlzZXMpLnRoZW4oZnVuY3Rpb24oYXJyYXkpe1xuICAgIC8vIFRoZSBhcnJheSBoZXJlIHdvdWxkIGJlIFsgMSwgMiwgMyBdO1xuICB9KTtcbiAgYGBgXG5cbiAgSWYgYW55IG9mIHRoZSBgcHJvbWlzZXNgIGdpdmVuIHRvIGBhbGxgIGFyZSByZWplY3RlZCwgdGhlIGZpcnN0IHByb21pc2VcbiAgdGhhdCBpcyByZWplY3RlZCB3aWxsIGJlIGdpdmVuIGFzIGFuIGFyZ3VtZW50IHRvIHRoZSByZXR1cm5lZCBwcm9taXNlcydzXG4gIHJlamVjdGlvbiBoYW5kbGVyLiBGb3IgZXhhbXBsZTpcblxuICBFeGFtcGxlOlxuXG4gIGBgYGphdmFzY3JpcHRcbiAgbGV0IHByb21pc2UxID0gcmVzb2x2ZSgxKTtcbiAgbGV0IHByb21pc2UyID0gcmVqZWN0KG5ldyBFcnJvcihcIjJcIikpO1xuICBsZXQgcHJvbWlzZTMgPSByZWplY3QobmV3IEVycm9yKFwiM1wiKSk7XG4gIGxldCBwcm9taXNlcyA9IFsgcHJvbWlzZTEsIHByb21pc2UyLCBwcm9taXNlMyBdO1xuXG4gIFByb21pc2UuYWxsKHByb21pc2VzKS50aGVuKGZ1bmN0aW9uKGFycmF5KXtcbiAgICAvLyBDb2RlIGhlcmUgbmV2ZXIgcnVucyBiZWNhdXNlIHRoZXJlIGFyZSByZWplY3RlZCBwcm9taXNlcyFcbiAgfSwgZnVuY3Rpb24oZXJyb3IpIHtcbiAgICAvLyBlcnJvci5tZXNzYWdlID09PSBcIjJcIlxuICB9KTtcbiAgYGBgXG5cbiAgQG1ldGhvZCBhbGxcbiAgQHN0YXRpY1xuICBAcGFyYW0ge0FycmF5fSBlbnRyaWVzIGFycmF5IG9mIHByb21pc2VzXG4gIEBwYXJhbSB7U3RyaW5nfSBsYWJlbCBvcHRpb25hbCBzdHJpbmcgZm9yIGxhYmVsaW5nIHRoZSBwcm9taXNlLlxuICBVc2VmdWwgZm9yIHRvb2xpbmcuXG4gIEByZXR1cm4ge1Byb21pc2V9IHByb21pc2UgdGhhdCBpcyBmdWxmaWxsZWQgd2hlbiBhbGwgYHByb21pc2VzYCBoYXZlIGJlZW5cbiAgZnVsZmlsbGVkLCBvciByZWplY3RlZCBpZiBhbnkgb2YgdGhlbSBiZWNvbWUgcmVqZWN0ZWQuXG4gIEBzdGF0aWNcbiovXG5mdW5jdGlvbiBhbGwoZW50cmllcykge1xuICByZXR1cm4gbmV3IEVudW1lcmF0b3IodGhpcywgZW50cmllcykucHJvbWlzZTtcbn1cblxuLyoqXG4gIGBQcm9taXNlLnJhY2VgIHJldHVybnMgYSBuZXcgcHJvbWlzZSB3aGljaCBpcyBzZXR0bGVkIGluIHRoZSBzYW1lIHdheSBhcyB0aGVcbiAgZmlyc3QgcGFzc2VkIHByb21pc2UgdG8gc2V0dGxlLlxuXG4gIEV4YW1wbGU6XG5cbiAgYGBgamF2YXNjcmlwdFxuICBsZXQgcHJvbWlzZTEgPSBuZXcgUHJvbWlzZShmdW5jdGlvbihyZXNvbHZlLCByZWplY3Qpe1xuICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKXtcbiAgICAgIHJlc29sdmUoJ3Byb21pc2UgMScpO1xuICAgIH0sIDIwMCk7XG4gIH0pO1xuXG4gIGxldCBwcm9taXNlMiA9IG5ldyBQcm9taXNlKGZ1bmN0aW9uKHJlc29sdmUsIHJlamVjdCl7XG4gICAgc2V0VGltZW91dChmdW5jdGlvbigpe1xuICAgICAgcmVzb2x2ZSgncHJvbWlzZSAyJyk7XG4gICAgfSwgMTAwKTtcbiAgfSk7XG5cbiAgUHJvbWlzZS5yYWNlKFtwcm9taXNlMSwgcHJvbWlzZTJdKS50aGVuKGZ1bmN0aW9uKHJlc3VsdCl7XG4gICAgLy8gcmVzdWx0ID09PSAncHJvbWlzZSAyJyBiZWNhdXNlIGl0IHdhcyByZXNvbHZlZCBiZWZvcmUgcHJvbWlzZTFcbiAgICAvLyB3YXMgcmVzb2x2ZWQuXG4gIH0pO1xuICBgYGBcblxuICBgUHJvbWlzZS5yYWNlYCBpcyBkZXRlcm1pbmlzdGljIGluIHRoYXQgb25seSB0aGUgc3RhdGUgb2YgdGhlIGZpcnN0XG4gIHNldHRsZWQgcHJvbWlzZSBtYXR0ZXJzLiBGb3IgZXhhbXBsZSwgZXZlbiBpZiBvdGhlciBwcm9taXNlcyBnaXZlbiB0byB0aGVcbiAgYHByb21pc2VzYCBhcnJheSBhcmd1bWVudCBhcmUgcmVzb2x2ZWQsIGJ1dCB0aGUgZmlyc3Qgc2V0dGxlZCBwcm9taXNlIGhhc1xuICBiZWNvbWUgcmVqZWN0ZWQgYmVmb3JlIHRoZSBvdGhlciBwcm9taXNlcyBiZWNhbWUgZnVsZmlsbGVkLCB0aGUgcmV0dXJuZWRcbiAgcHJvbWlzZSB3aWxsIGJlY29tZSByZWplY3RlZDpcblxuICBgYGBqYXZhc2NyaXB0XG4gIGxldCBwcm9taXNlMSA9IG5ldyBQcm9taXNlKGZ1bmN0aW9uKHJlc29sdmUsIHJlamVjdCl7XG4gICAgc2V0VGltZW91dChmdW5jdGlvbigpe1xuICAgICAgcmVzb2x2ZSgncHJvbWlzZSAxJyk7XG4gICAgfSwgMjAwKTtcbiAgfSk7XG5cbiAgbGV0IHByb21pc2UyID0gbmV3IFByb21pc2UoZnVuY3Rpb24ocmVzb2x2ZSwgcmVqZWN0KXtcbiAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7XG4gICAgICByZWplY3QobmV3IEVycm9yKCdwcm9taXNlIDInKSk7XG4gICAgfSwgMTAwKTtcbiAgfSk7XG5cbiAgUHJvbWlzZS5yYWNlKFtwcm9taXNlMSwgcHJvbWlzZTJdKS50aGVuKGZ1bmN0aW9uKHJlc3VsdCl7XG4gICAgLy8gQ29kZSBoZXJlIG5ldmVyIHJ1bnNcbiAgfSwgZnVuY3Rpb24ocmVhc29uKXtcbiAgICAvLyByZWFzb24ubWVzc2FnZSA9PT0gJ3Byb21pc2UgMicgYmVjYXVzZSBwcm9taXNlIDIgYmVjYW1lIHJlamVjdGVkIGJlZm9yZVxuICAgIC8vIHByb21pc2UgMSBiZWNhbWUgZnVsZmlsbGVkXG4gIH0pO1xuICBgYGBcblxuICBBbiBleGFtcGxlIHJlYWwtd29ybGQgdXNlIGNhc2UgaXMgaW1wbGVtZW50aW5nIHRpbWVvdXRzOlxuXG4gIGBgYGphdmFzY3JpcHRcbiAgUHJvbWlzZS5yYWNlKFthamF4KCdmb28uanNvbicpLCB0aW1lb3V0KDUwMDApXSlcbiAgYGBgXG5cbiAgQG1ldGhvZCByYWNlXG4gIEBzdGF0aWNcbiAgQHBhcmFtIHtBcnJheX0gcHJvbWlzZXMgYXJyYXkgb2YgcHJvbWlzZXMgdG8gb2JzZXJ2ZVxuICBVc2VmdWwgZm9yIHRvb2xpbmcuXG4gIEByZXR1cm4ge1Byb21pc2V9IGEgcHJvbWlzZSB3aGljaCBzZXR0bGVzIGluIHRoZSBzYW1lIHdheSBhcyB0aGUgZmlyc3QgcGFzc2VkXG4gIHByb21pc2UgdG8gc2V0dGxlLlxuKi9cbmZ1bmN0aW9uIHJhY2UoZW50cmllcykge1xuICAvKmpzaGludCB2YWxpZHRoaXM6dHJ1ZSAqL1xuICB2YXIgQ29uc3RydWN0b3IgPSB0aGlzO1xuXG4gIGlmICghaXNBcnJheShlbnRyaWVzKSkge1xuICAgIHJldHVybiBuZXcgQ29uc3RydWN0b3IoZnVuY3Rpb24gKF8sIHJlamVjdCkge1xuICAgICAgcmV0dXJuIHJlamVjdChuZXcgVHlwZUVycm9yKCdZb3UgbXVzdCBwYXNzIGFuIGFycmF5IHRvIHJhY2UuJykpO1xuICAgIH0pO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiBuZXcgQ29uc3RydWN0b3IoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgdmFyIGxlbmd0aCA9IGVudHJpZXMubGVuZ3RoO1xuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykge1xuICAgICAgICBDb25zdHJ1Y3Rvci5yZXNvbHZlKGVudHJpZXNbaV0pLnRoZW4ocmVzb2x2ZSwgcmVqZWN0KTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxufVxuXG4vKipcbiAgYFByb21pc2UucmVqZWN0YCByZXR1cm5zIGEgcHJvbWlzZSByZWplY3RlZCB3aXRoIHRoZSBwYXNzZWQgYHJlYXNvbmAuXG4gIEl0IGlzIHNob3J0aGFuZCBmb3IgdGhlIGZvbGxvd2luZzpcblxuICBgYGBqYXZhc2NyaXB0XG4gIGxldCBwcm9taXNlID0gbmV3IFByb21pc2UoZnVuY3Rpb24ocmVzb2x2ZSwgcmVqZWN0KXtcbiAgICByZWplY3QobmV3IEVycm9yKCdXSE9PUFMnKSk7XG4gIH0pO1xuXG4gIHByb21pc2UudGhlbihmdW5jdGlvbih2YWx1ZSl7XG4gICAgLy8gQ29kZSBoZXJlIGRvZXNuJ3QgcnVuIGJlY2F1c2UgdGhlIHByb21pc2UgaXMgcmVqZWN0ZWQhXG4gIH0sIGZ1bmN0aW9uKHJlYXNvbil7XG4gICAgLy8gcmVhc29uLm1lc3NhZ2UgPT09ICdXSE9PUFMnXG4gIH0pO1xuICBgYGBcblxuICBJbnN0ZWFkIG9mIHdyaXRpbmcgdGhlIGFib3ZlLCB5b3VyIGNvZGUgbm93IHNpbXBseSBiZWNvbWVzIHRoZSBmb2xsb3dpbmc6XG5cbiAgYGBgamF2YXNjcmlwdFxuICBsZXQgcHJvbWlzZSA9IFByb21pc2UucmVqZWN0KG5ldyBFcnJvcignV0hPT1BTJykpO1xuXG4gIHByb21pc2UudGhlbihmdW5jdGlvbih2YWx1ZSl7XG4gICAgLy8gQ29kZSBoZXJlIGRvZXNuJ3QgcnVuIGJlY2F1c2UgdGhlIHByb21pc2UgaXMgcmVqZWN0ZWQhXG4gIH0sIGZ1bmN0aW9uKHJlYXNvbil7XG4gICAgLy8gcmVhc29uLm1lc3NhZ2UgPT09ICdXSE9PUFMnXG4gIH0pO1xuICBgYGBcblxuICBAbWV0aG9kIHJlamVjdFxuICBAc3RhdGljXG4gIEBwYXJhbSB7QW55fSByZWFzb24gdmFsdWUgdGhhdCB0aGUgcmV0dXJuZWQgcHJvbWlzZSB3aWxsIGJlIHJlamVjdGVkIHdpdGguXG4gIFVzZWZ1bCBmb3IgdG9vbGluZy5cbiAgQHJldHVybiB7UHJvbWlzZX0gYSBwcm9taXNlIHJlamVjdGVkIHdpdGggdGhlIGdpdmVuIGByZWFzb25gLlxuKi9cbmZ1bmN0aW9uIHJlamVjdChyZWFzb24pIHtcbiAgLypqc2hpbnQgdmFsaWR0aGlzOnRydWUgKi9cbiAgdmFyIENvbnN0cnVjdG9yID0gdGhpcztcbiAgdmFyIHByb21pc2UgPSBuZXcgQ29uc3RydWN0b3Iobm9vcCk7XG4gIF9yZWplY3QocHJvbWlzZSwgcmVhc29uKTtcbiAgcmV0dXJuIHByb21pc2U7XG59XG5cbmZ1bmN0aW9uIG5lZWRzUmVzb2x2ZXIoKSB7XG4gIHRocm93IG5ldyBUeXBlRXJyb3IoJ1lvdSBtdXN0IHBhc3MgYSByZXNvbHZlciBmdW5jdGlvbiBhcyB0aGUgZmlyc3QgYXJndW1lbnQgdG8gdGhlIHByb21pc2UgY29uc3RydWN0b3InKTtcbn1cblxuZnVuY3Rpb24gbmVlZHNOZXcoKSB7XG4gIHRocm93IG5ldyBUeXBlRXJyb3IoXCJGYWlsZWQgdG8gY29uc3RydWN0ICdQcm9taXNlJzogUGxlYXNlIHVzZSB0aGUgJ25ldycgb3BlcmF0b3IsIHRoaXMgb2JqZWN0IGNvbnN0cnVjdG9yIGNhbm5vdCBiZSBjYWxsZWQgYXMgYSBmdW5jdGlvbi5cIik7XG59XG5cbi8qKlxuICBQcm9taXNlIG9iamVjdHMgcmVwcmVzZW50IHRoZSBldmVudHVhbCByZXN1bHQgb2YgYW4gYXN5bmNocm9ub3VzIG9wZXJhdGlvbi4gVGhlXG4gIHByaW1hcnkgd2F5IG9mIGludGVyYWN0aW5nIHdpdGggYSBwcm9taXNlIGlzIHRocm91Z2ggaXRzIGB0aGVuYCBtZXRob2QsIHdoaWNoXG4gIHJlZ2lzdGVycyBjYWxsYmFja3MgdG8gcmVjZWl2ZSBlaXRoZXIgYSBwcm9taXNlJ3MgZXZlbnR1YWwgdmFsdWUgb3IgdGhlIHJlYXNvblxuICB3aHkgdGhlIHByb21pc2UgY2Fubm90IGJlIGZ1bGZpbGxlZC5cblxuICBUZXJtaW5vbG9neVxuICAtLS0tLS0tLS0tLVxuXG4gIC0gYHByb21pc2VgIGlzIGFuIG9iamVjdCBvciBmdW5jdGlvbiB3aXRoIGEgYHRoZW5gIG1ldGhvZCB3aG9zZSBiZWhhdmlvciBjb25mb3JtcyB0byB0aGlzIHNwZWNpZmljYXRpb24uXG4gIC0gYHRoZW5hYmxlYCBpcyBhbiBvYmplY3Qgb3IgZnVuY3Rpb24gdGhhdCBkZWZpbmVzIGEgYHRoZW5gIG1ldGhvZC5cbiAgLSBgdmFsdWVgIGlzIGFueSBsZWdhbCBKYXZhU2NyaXB0IHZhbHVlIChpbmNsdWRpbmcgdW5kZWZpbmVkLCBhIHRoZW5hYmxlLCBvciBhIHByb21pc2UpLlxuICAtIGBleGNlcHRpb25gIGlzIGEgdmFsdWUgdGhhdCBpcyB0aHJvd24gdXNpbmcgdGhlIHRocm93IHN0YXRlbWVudC5cbiAgLSBgcmVhc29uYCBpcyBhIHZhbHVlIHRoYXQgaW5kaWNhdGVzIHdoeSBhIHByb21pc2Ugd2FzIHJlamVjdGVkLlxuICAtIGBzZXR0bGVkYCB0aGUgZmluYWwgcmVzdGluZyBzdGF0ZSBvZiBhIHByb21pc2UsIGZ1bGZpbGxlZCBvciByZWplY3RlZC5cblxuICBBIHByb21pc2UgY2FuIGJlIGluIG9uZSBvZiB0aHJlZSBzdGF0ZXM6IHBlbmRpbmcsIGZ1bGZpbGxlZCwgb3IgcmVqZWN0ZWQuXG5cbiAgUHJvbWlzZXMgdGhhdCBhcmUgZnVsZmlsbGVkIGhhdmUgYSBmdWxmaWxsbWVudCB2YWx1ZSBhbmQgYXJlIGluIHRoZSBmdWxmaWxsZWRcbiAgc3RhdGUuICBQcm9taXNlcyB0aGF0IGFyZSByZWplY3RlZCBoYXZlIGEgcmVqZWN0aW9uIHJlYXNvbiBhbmQgYXJlIGluIHRoZVxuICByZWplY3RlZCBzdGF0ZS4gIEEgZnVsZmlsbG1lbnQgdmFsdWUgaXMgbmV2ZXIgYSB0aGVuYWJsZS5cblxuICBQcm9taXNlcyBjYW4gYWxzbyBiZSBzYWlkIHRvICpyZXNvbHZlKiBhIHZhbHVlLiAgSWYgdGhpcyB2YWx1ZSBpcyBhbHNvIGFcbiAgcHJvbWlzZSwgdGhlbiB0aGUgb3JpZ2luYWwgcHJvbWlzZSdzIHNldHRsZWQgc3RhdGUgd2lsbCBtYXRjaCB0aGUgdmFsdWUnc1xuICBzZXR0bGVkIHN0YXRlLiAgU28gYSBwcm9taXNlIHRoYXQgKnJlc29sdmVzKiBhIHByb21pc2UgdGhhdCByZWplY3RzIHdpbGxcbiAgaXRzZWxmIHJlamVjdCwgYW5kIGEgcHJvbWlzZSB0aGF0ICpyZXNvbHZlcyogYSBwcm9taXNlIHRoYXQgZnVsZmlsbHMgd2lsbFxuICBpdHNlbGYgZnVsZmlsbC5cblxuXG4gIEJhc2ljIFVzYWdlOlxuICAtLS0tLS0tLS0tLS1cblxuICBgYGBqc1xuICBsZXQgcHJvbWlzZSA9IG5ldyBQcm9taXNlKGZ1bmN0aW9uKHJlc29sdmUsIHJlamVjdCkge1xuICAgIC8vIG9uIHN1Y2Nlc3NcbiAgICByZXNvbHZlKHZhbHVlKTtcblxuICAgIC8vIG9uIGZhaWx1cmVcbiAgICByZWplY3QocmVhc29uKTtcbiAgfSk7XG5cbiAgcHJvbWlzZS50aGVuKGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgLy8gb24gZnVsZmlsbG1lbnRcbiAgfSwgZnVuY3Rpb24ocmVhc29uKSB7XG4gICAgLy8gb24gcmVqZWN0aW9uXG4gIH0pO1xuICBgYGBcblxuICBBZHZhbmNlZCBVc2FnZTpcbiAgLS0tLS0tLS0tLS0tLS0tXG5cbiAgUHJvbWlzZXMgc2hpbmUgd2hlbiBhYnN0cmFjdGluZyBhd2F5IGFzeW5jaHJvbm91cyBpbnRlcmFjdGlvbnMgc3VjaCBhc1xuICBgWE1MSHR0cFJlcXVlc3Rgcy5cblxuICBgYGBqc1xuICBmdW5jdGlvbiBnZXRKU09OKHVybCkge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbihyZXNvbHZlLCByZWplY3Qpe1xuICAgICAgbGV0IHhociA9IG5ldyBYTUxIdHRwUmVxdWVzdCgpO1xuXG4gICAgICB4aHIub3BlbignR0VUJywgdXJsKTtcbiAgICAgIHhoci5vbnJlYWR5c3RhdGVjaGFuZ2UgPSBoYW5kbGVyO1xuICAgICAgeGhyLnJlc3BvbnNlVHlwZSA9ICdqc29uJztcbiAgICAgIHhoci5zZXRSZXF1ZXN0SGVhZGVyKCdBY2NlcHQnLCAnYXBwbGljYXRpb24vanNvbicpO1xuICAgICAgeGhyLnNlbmQoKTtcblxuICAgICAgZnVuY3Rpb24gaGFuZGxlcigpIHtcbiAgICAgICAgaWYgKHRoaXMucmVhZHlTdGF0ZSA9PT0gdGhpcy5ET05FKSB7XG4gICAgICAgICAgaWYgKHRoaXMuc3RhdHVzID09PSAyMDApIHtcbiAgICAgICAgICAgIHJlc29sdmUodGhpcy5yZXNwb25zZSk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJlamVjdChuZXcgRXJyb3IoJ2dldEpTT046IGAnICsgdXJsICsgJ2AgZmFpbGVkIHdpdGggc3RhdHVzOiBbJyArIHRoaXMuc3RhdHVzICsgJ10nKSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9O1xuICAgIH0pO1xuICB9XG5cbiAgZ2V0SlNPTignL3Bvc3RzLmpzb24nKS50aGVuKGZ1bmN0aW9uKGpzb24pIHtcbiAgICAvLyBvbiBmdWxmaWxsbWVudFxuICB9LCBmdW5jdGlvbihyZWFzb24pIHtcbiAgICAvLyBvbiByZWplY3Rpb25cbiAgfSk7XG4gIGBgYFxuXG4gIFVubGlrZSBjYWxsYmFja3MsIHByb21pc2VzIGFyZSBncmVhdCBjb21wb3NhYmxlIHByaW1pdGl2ZXMuXG5cbiAgYGBganNcbiAgUHJvbWlzZS5hbGwoW1xuICAgIGdldEpTT04oJy9wb3N0cycpLFxuICAgIGdldEpTT04oJy9jb21tZW50cycpXG4gIF0pLnRoZW4oZnVuY3Rpb24odmFsdWVzKXtcbiAgICB2YWx1ZXNbMF0gLy8gPT4gcG9zdHNKU09OXG4gICAgdmFsdWVzWzFdIC8vID0+IGNvbW1lbnRzSlNPTlxuXG4gICAgcmV0dXJuIHZhbHVlcztcbiAgfSk7XG4gIGBgYFxuXG4gIEBjbGFzcyBQcm9taXNlXG4gIEBwYXJhbSB7ZnVuY3Rpb259IHJlc29sdmVyXG4gIFVzZWZ1bCBmb3IgdG9vbGluZy5cbiAgQGNvbnN0cnVjdG9yXG4qL1xuZnVuY3Rpb24gUHJvbWlzZShyZXNvbHZlcikge1xuICB0aGlzW1BST01JU0VfSURdID0gbmV4dElkKCk7XG4gIHRoaXMuX3Jlc3VsdCA9IHRoaXMuX3N0YXRlID0gdW5kZWZpbmVkO1xuICB0aGlzLl9zdWJzY3JpYmVycyA9IFtdO1xuXG4gIGlmIChub29wICE9PSByZXNvbHZlcikge1xuICAgIHR5cGVvZiByZXNvbHZlciAhPT0gJ2Z1bmN0aW9uJyAmJiBuZWVkc1Jlc29sdmVyKCk7XG4gICAgdGhpcyBpbnN0YW5jZW9mIFByb21pc2UgPyBpbml0aWFsaXplUHJvbWlzZSh0aGlzLCByZXNvbHZlcikgOiBuZWVkc05ldygpO1xuICB9XG59XG5cblByb21pc2UuYWxsID0gYWxsO1xuUHJvbWlzZS5yYWNlID0gcmFjZTtcblByb21pc2UucmVzb2x2ZSA9IHJlc29sdmU7XG5Qcm9taXNlLnJlamVjdCA9IHJlamVjdDtcblByb21pc2UuX3NldFNjaGVkdWxlciA9IHNldFNjaGVkdWxlcjtcblByb21pc2UuX3NldEFzYXAgPSBzZXRBc2FwO1xuUHJvbWlzZS5fYXNhcCA9IGFzYXA7XG5cblByb21pc2UucHJvdG90eXBlID0ge1xuICBjb25zdHJ1Y3RvcjogUHJvbWlzZSxcblxuICAvKipcbiAgICBUaGUgcHJpbWFyeSB3YXkgb2YgaW50ZXJhY3Rpbmcgd2l0aCBhIHByb21pc2UgaXMgdGhyb3VnaCBpdHMgYHRoZW5gIG1ldGhvZCxcbiAgICB3aGljaCByZWdpc3RlcnMgY2FsbGJhY2tzIHRvIHJlY2VpdmUgZWl0aGVyIGEgcHJvbWlzZSdzIGV2ZW50dWFsIHZhbHVlIG9yIHRoZVxuICAgIHJlYXNvbiB3aHkgdGhlIHByb21pc2UgY2Fubm90IGJlIGZ1bGZpbGxlZC5cbiAgXG4gICAgYGBganNcbiAgICBmaW5kVXNlcigpLnRoZW4oZnVuY3Rpb24odXNlcil7XG4gICAgICAvLyB1c2VyIGlzIGF2YWlsYWJsZVxuICAgIH0sIGZ1bmN0aW9uKHJlYXNvbil7XG4gICAgICAvLyB1c2VyIGlzIHVuYXZhaWxhYmxlLCBhbmQgeW91IGFyZSBnaXZlbiB0aGUgcmVhc29uIHdoeVxuICAgIH0pO1xuICAgIGBgYFxuICBcbiAgICBDaGFpbmluZ1xuICAgIC0tLS0tLS0tXG4gIFxuICAgIFRoZSByZXR1cm4gdmFsdWUgb2YgYHRoZW5gIGlzIGl0c2VsZiBhIHByb21pc2UuICBUaGlzIHNlY29uZCwgJ2Rvd25zdHJlYW0nXG4gICAgcHJvbWlzZSBpcyByZXNvbHZlZCB3aXRoIHRoZSByZXR1cm4gdmFsdWUgb2YgdGhlIGZpcnN0IHByb21pc2UncyBmdWxmaWxsbWVudFxuICAgIG9yIHJlamVjdGlvbiBoYW5kbGVyLCBvciByZWplY3RlZCBpZiB0aGUgaGFuZGxlciB0aHJvd3MgYW4gZXhjZXB0aW9uLlxuICBcbiAgICBgYGBqc1xuICAgIGZpbmRVc2VyKCkudGhlbihmdW5jdGlvbiAodXNlcikge1xuICAgICAgcmV0dXJuIHVzZXIubmFtZTtcbiAgICB9LCBmdW5jdGlvbiAocmVhc29uKSB7XG4gICAgICByZXR1cm4gJ2RlZmF1bHQgbmFtZSc7XG4gICAgfSkudGhlbihmdW5jdGlvbiAodXNlck5hbWUpIHtcbiAgICAgIC8vIElmIGBmaW5kVXNlcmAgZnVsZmlsbGVkLCBgdXNlck5hbWVgIHdpbGwgYmUgdGhlIHVzZXIncyBuYW1lLCBvdGhlcndpc2UgaXRcbiAgICAgIC8vIHdpbGwgYmUgYCdkZWZhdWx0IG5hbWUnYFxuICAgIH0pO1xuICBcbiAgICBmaW5kVXNlcigpLnRoZW4oZnVuY3Rpb24gKHVzZXIpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignRm91bmQgdXNlciwgYnV0IHN0aWxsIHVuaGFwcHknKTtcbiAgICB9LCBmdW5jdGlvbiAocmVhc29uKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ2BmaW5kVXNlcmAgcmVqZWN0ZWQgYW5kIHdlJ3JlIHVuaGFwcHknKTtcbiAgICB9KS50aGVuKGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgICAgLy8gbmV2ZXIgcmVhY2hlZFxuICAgIH0sIGZ1bmN0aW9uIChyZWFzb24pIHtcbiAgICAgIC8vIGlmIGBmaW5kVXNlcmAgZnVsZmlsbGVkLCBgcmVhc29uYCB3aWxsIGJlICdGb3VuZCB1c2VyLCBidXQgc3RpbGwgdW5oYXBweScuXG4gICAgICAvLyBJZiBgZmluZFVzZXJgIHJlamVjdGVkLCBgcmVhc29uYCB3aWxsIGJlICdgZmluZFVzZXJgIHJlamVjdGVkIGFuZCB3ZSdyZSB1bmhhcHB5Jy5cbiAgICB9KTtcbiAgICBgYGBcbiAgICBJZiB0aGUgZG93bnN0cmVhbSBwcm9taXNlIGRvZXMgbm90IHNwZWNpZnkgYSByZWplY3Rpb24gaGFuZGxlciwgcmVqZWN0aW9uIHJlYXNvbnMgd2lsbCBiZSBwcm9wYWdhdGVkIGZ1cnRoZXIgZG93bnN0cmVhbS5cbiAgXG4gICAgYGBganNcbiAgICBmaW5kVXNlcigpLnRoZW4oZnVuY3Rpb24gKHVzZXIpIHtcbiAgICAgIHRocm93IG5ldyBQZWRhZ29naWNhbEV4Y2VwdGlvbignVXBzdHJlYW0gZXJyb3InKTtcbiAgICB9KS50aGVuKGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgICAgLy8gbmV2ZXIgcmVhY2hlZFxuICAgIH0pLnRoZW4oZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgICAvLyBuZXZlciByZWFjaGVkXG4gICAgfSwgZnVuY3Rpb24gKHJlYXNvbikge1xuICAgICAgLy8gVGhlIGBQZWRnYWdvY2lhbEV4Y2VwdGlvbmAgaXMgcHJvcGFnYXRlZCBhbGwgdGhlIHdheSBkb3duIHRvIGhlcmVcbiAgICB9KTtcbiAgICBgYGBcbiAgXG4gICAgQXNzaW1pbGF0aW9uXG4gICAgLS0tLS0tLS0tLS0tXG4gIFxuICAgIFNvbWV0aW1lcyB0aGUgdmFsdWUgeW91IHdhbnQgdG8gcHJvcGFnYXRlIHRvIGEgZG93bnN0cmVhbSBwcm9taXNlIGNhbiBvbmx5IGJlXG4gICAgcmV0cmlldmVkIGFzeW5jaHJvbm91c2x5LiBUaGlzIGNhbiBiZSBhY2hpZXZlZCBieSByZXR1cm5pbmcgYSBwcm9taXNlIGluIHRoZVxuICAgIGZ1bGZpbGxtZW50IG9yIHJlamVjdGlvbiBoYW5kbGVyLiBUaGUgZG93bnN0cmVhbSBwcm9taXNlIHdpbGwgdGhlbiBiZSBwZW5kaW5nXG4gICAgdW50aWwgdGhlIHJldHVybmVkIHByb21pc2UgaXMgc2V0dGxlZC4gVGhpcyBpcyBjYWxsZWQgKmFzc2ltaWxhdGlvbiouXG4gIFxuICAgIGBgYGpzXG4gICAgZmluZFVzZXIoKS50aGVuKGZ1bmN0aW9uICh1c2VyKSB7XG4gICAgICByZXR1cm4gZmluZENvbW1lbnRzQnlBdXRob3IodXNlcik7XG4gICAgfSkudGhlbihmdW5jdGlvbiAoY29tbWVudHMpIHtcbiAgICAgIC8vIFRoZSB1c2VyJ3MgY29tbWVudHMgYXJlIG5vdyBhdmFpbGFibGVcbiAgICB9KTtcbiAgICBgYGBcbiAgXG4gICAgSWYgdGhlIGFzc2ltbGlhdGVkIHByb21pc2UgcmVqZWN0cywgdGhlbiB0aGUgZG93bnN0cmVhbSBwcm9taXNlIHdpbGwgYWxzbyByZWplY3QuXG4gIFxuICAgIGBgYGpzXG4gICAgZmluZFVzZXIoKS50aGVuKGZ1bmN0aW9uICh1c2VyKSB7XG4gICAgICByZXR1cm4gZmluZENvbW1lbnRzQnlBdXRob3IodXNlcik7XG4gICAgfSkudGhlbihmdW5jdGlvbiAoY29tbWVudHMpIHtcbiAgICAgIC8vIElmIGBmaW5kQ29tbWVudHNCeUF1dGhvcmAgZnVsZmlsbHMsIHdlJ2xsIGhhdmUgdGhlIHZhbHVlIGhlcmVcbiAgICB9LCBmdW5jdGlvbiAocmVhc29uKSB7XG4gICAgICAvLyBJZiBgZmluZENvbW1lbnRzQnlBdXRob3JgIHJlamVjdHMsIHdlJ2xsIGhhdmUgdGhlIHJlYXNvbiBoZXJlXG4gICAgfSk7XG4gICAgYGBgXG4gIFxuICAgIFNpbXBsZSBFeGFtcGxlXG4gICAgLS0tLS0tLS0tLS0tLS1cbiAgXG4gICAgU3luY2hyb25vdXMgRXhhbXBsZVxuICBcbiAgICBgYGBqYXZhc2NyaXB0XG4gICAgbGV0IHJlc3VsdDtcbiAgXG4gICAgdHJ5IHtcbiAgICAgIHJlc3VsdCA9IGZpbmRSZXN1bHQoKTtcbiAgICAgIC8vIHN1Y2Nlc3NcbiAgICB9IGNhdGNoKHJlYXNvbikge1xuICAgICAgLy8gZmFpbHVyZVxuICAgIH1cbiAgICBgYGBcbiAgXG4gICAgRXJyYmFjayBFeGFtcGxlXG4gIFxuICAgIGBgYGpzXG4gICAgZmluZFJlc3VsdChmdW5jdGlvbihyZXN1bHQsIGVycil7XG4gICAgICBpZiAoZXJyKSB7XG4gICAgICAgIC8vIGZhaWx1cmVcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIHN1Y2Nlc3NcbiAgICAgIH1cbiAgICB9KTtcbiAgICBgYGBcbiAgXG4gICAgUHJvbWlzZSBFeGFtcGxlO1xuICBcbiAgICBgYGBqYXZhc2NyaXB0XG4gICAgZmluZFJlc3VsdCgpLnRoZW4oZnVuY3Rpb24ocmVzdWx0KXtcbiAgICAgIC8vIHN1Y2Nlc3NcbiAgICB9LCBmdW5jdGlvbihyZWFzb24pe1xuICAgICAgLy8gZmFpbHVyZVxuICAgIH0pO1xuICAgIGBgYFxuICBcbiAgICBBZHZhbmNlZCBFeGFtcGxlXG4gICAgLS0tLS0tLS0tLS0tLS1cbiAgXG4gICAgU3luY2hyb25vdXMgRXhhbXBsZVxuICBcbiAgICBgYGBqYXZhc2NyaXB0XG4gICAgbGV0IGF1dGhvciwgYm9va3M7XG4gIFxuICAgIHRyeSB7XG4gICAgICBhdXRob3IgPSBmaW5kQXV0aG9yKCk7XG4gICAgICBib29rcyAgPSBmaW5kQm9va3NCeUF1dGhvcihhdXRob3IpO1xuICAgICAgLy8gc3VjY2Vzc1xuICAgIH0gY2F0Y2gocmVhc29uKSB7XG4gICAgICAvLyBmYWlsdXJlXG4gICAgfVxuICAgIGBgYFxuICBcbiAgICBFcnJiYWNrIEV4YW1wbGVcbiAgXG4gICAgYGBganNcbiAgXG4gICAgZnVuY3Rpb24gZm91bmRCb29rcyhib29rcykge1xuICBcbiAgICB9XG4gIFxuICAgIGZ1bmN0aW9uIGZhaWx1cmUocmVhc29uKSB7XG4gIFxuICAgIH1cbiAgXG4gICAgZmluZEF1dGhvcihmdW5jdGlvbihhdXRob3IsIGVycil7XG4gICAgICBpZiAoZXJyKSB7XG4gICAgICAgIGZhaWx1cmUoZXJyKTtcbiAgICAgICAgLy8gZmFpbHVyZVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICBmaW5kQm9vb2tzQnlBdXRob3IoYXV0aG9yLCBmdW5jdGlvbihib29rcywgZXJyKSB7XG4gICAgICAgICAgICBpZiAoZXJyKSB7XG4gICAgICAgICAgICAgIGZhaWx1cmUoZXJyKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgZm91bmRCb29rcyhib29rcyk7XG4gICAgICAgICAgICAgIH0gY2F0Y2gocmVhc29uKSB7XG4gICAgICAgICAgICAgICAgZmFpbHVyZShyZWFzb24pO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSk7XG4gICAgICAgIH0gY2F0Y2goZXJyb3IpIHtcbiAgICAgICAgICBmYWlsdXJlKGVycik7XG4gICAgICAgIH1cbiAgICAgICAgLy8gc3VjY2Vzc1xuICAgICAgfVxuICAgIH0pO1xuICAgIGBgYFxuICBcbiAgICBQcm9taXNlIEV4YW1wbGU7XG4gIFxuICAgIGBgYGphdmFzY3JpcHRcbiAgICBmaW5kQXV0aG9yKCkuXG4gICAgICB0aGVuKGZpbmRCb29rc0J5QXV0aG9yKS5cbiAgICAgIHRoZW4oZnVuY3Rpb24oYm9va3Mpe1xuICAgICAgICAvLyBmb3VuZCBib29rc1xuICAgIH0pLmNhdGNoKGZ1bmN0aW9uKHJlYXNvbil7XG4gICAgICAvLyBzb21ldGhpbmcgd2VudCB3cm9uZ1xuICAgIH0pO1xuICAgIGBgYFxuICBcbiAgICBAbWV0aG9kIHRoZW5cbiAgICBAcGFyYW0ge0Z1bmN0aW9ufSBvbkZ1bGZpbGxlZFxuICAgIEBwYXJhbSB7RnVuY3Rpb259IG9uUmVqZWN0ZWRcbiAgICBVc2VmdWwgZm9yIHRvb2xpbmcuXG4gICAgQHJldHVybiB7UHJvbWlzZX1cbiAgKi9cbiAgdGhlbjogdGhlbixcblxuICAvKipcbiAgICBgY2F0Y2hgIGlzIHNpbXBseSBzdWdhciBmb3IgYHRoZW4odW5kZWZpbmVkLCBvblJlamVjdGlvbilgIHdoaWNoIG1ha2VzIGl0IHRoZSBzYW1lXG4gICAgYXMgdGhlIGNhdGNoIGJsb2NrIG9mIGEgdHJ5L2NhdGNoIHN0YXRlbWVudC5cbiAgXG4gICAgYGBganNcbiAgICBmdW5jdGlvbiBmaW5kQXV0aG9yKCl7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ2NvdWxkbid0IGZpbmQgdGhhdCBhdXRob3InKTtcbiAgICB9XG4gIFxuICAgIC8vIHN5bmNocm9ub3VzXG4gICAgdHJ5IHtcbiAgICAgIGZpbmRBdXRob3IoKTtcbiAgICB9IGNhdGNoKHJlYXNvbikge1xuICAgICAgLy8gc29tZXRoaW5nIHdlbnQgd3JvbmdcbiAgICB9XG4gIFxuICAgIC8vIGFzeW5jIHdpdGggcHJvbWlzZXNcbiAgICBmaW5kQXV0aG9yKCkuY2F0Y2goZnVuY3Rpb24ocmVhc29uKXtcbiAgICAgIC8vIHNvbWV0aGluZyB3ZW50IHdyb25nXG4gICAgfSk7XG4gICAgYGBgXG4gIFxuICAgIEBtZXRob2QgY2F0Y2hcbiAgICBAcGFyYW0ge0Z1bmN0aW9ufSBvblJlamVjdGlvblxuICAgIFVzZWZ1bCBmb3IgdG9vbGluZy5cbiAgICBAcmV0dXJuIHtQcm9taXNlfVxuICAqL1xuICAnY2F0Y2gnOiBmdW5jdGlvbiBfY2F0Y2gob25SZWplY3Rpb24pIHtcbiAgICByZXR1cm4gdGhpcy50aGVuKG51bGwsIG9uUmVqZWN0aW9uKTtcbiAgfVxufTtcblxuZnVuY3Rpb24gcG9seWZpbGwoKSB7XG4gICAgdmFyIGxvY2FsID0gdW5kZWZpbmVkO1xuXG4gICAgaWYgKHR5cGVvZiBnbG9iYWwgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIGxvY2FsID0gZ2xvYmFsO1xuICAgIH0gZWxzZSBpZiAodHlwZW9mIHNlbGYgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIGxvY2FsID0gc2VsZjtcbiAgICB9IGVsc2Uge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgbG9jYWwgPSBGdW5jdGlvbigncmV0dXJuIHRoaXMnKSgpO1xuICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ3BvbHlmaWxsIGZhaWxlZCBiZWNhdXNlIGdsb2JhbCBvYmplY3QgaXMgdW5hdmFpbGFibGUgaW4gdGhpcyBlbnZpcm9ubWVudCcpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgdmFyIFAgPSBsb2NhbC5Qcm9taXNlO1xuXG4gICAgaWYgKFApIHtcbiAgICAgICAgdmFyIHByb21pc2VUb1N0cmluZyA9IG51bGw7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBwcm9taXNlVG9TdHJpbmcgPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoUC5yZXNvbHZlKCkpO1xuICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgICAvLyBzaWxlbnRseSBpZ25vcmVkXG4gICAgICAgIH1cblxuICAgICAgICBpZiAocHJvbWlzZVRvU3RyaW5nID09PSAnW29iamVjdCBQcm9taXNlXScgJiYgIVAuY2FzdCkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgbG9jYWwuUHJvbWlzZSA9IFByb21pc2U7XG59XG5cbi8vIFN0cmFuZ2UgY29tcGF0Li5cblByb21pc2UucG9seWZpbGwgPSBwb2x5ZmlsbDtcblByb21pc2UuUHJvbWlzZSA9IFByb21pc2U7XG5cbnJldHVybiBQcm9taXNlO1xuXG59KSkpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZXM2LXByb21pc2UubWFwIiwiLy8gc2hpbSBmb3IgdXNpbmcgcHJvY2VzcyBpbiBicm93c2VyXG52YXIgcHJvY2VzcyA9IG1vZHVsZS5leHBvcnRzID0ge307XG5cbi8vIGNhY2hlZCBmcm9tIHdoYXRldmVyIGdsb2JhbCBpcyBwcmVzZW50IHNvIHRoYXQgdGVzdCBydW5uZXJzIHRoYXQgc3R1YiBpdFxuLy8gZG9uJ3QgYnJlYWsgdGhpbmdzLiAgQnV0IHdlIG5lZWQgdG8gd3JhcCBpdCBpbiBhIHRyeSBjYXRjaCBpbiBjYXNlIGl0IGlzXG4vLyB3cmFwcGVkIGluIHN0cmljdCBtb2RlIGNvZGUgd2hpY2ggZG9lc24ndCBkZWZpbmUgYW55IGdsb2JhbHMuICBJdCdzIGluc2lkZSBhXG4vLyBmdW5jdGlvbiBiZWNhdXNlIHRyeS9jYXRjaGVzIGRlb3B0aW1pemUgaW4gY2VydGFpbiBlbmdpbmVzLlxuXG52YXIgY2FjaGVkU2V0VGltZW91dDtcbnZhciBjYWNoZWRDbGVhclRpbWVvdXQ7XG5cbmZ1bmN0aW9uIGRlZmF1bHRTZXRUaW1vdXQoKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdzZXRUaW1lb3V0IGhhcyBub3QgYmVlbiBkZWZpbmVkJyk7XG59XG5mdW5jdGlvbiBkZWZhdWx0Q2xlYXJUaW1lb3V0ICgpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ2NsZWFyVGltZW91dCBoYXMgbm90IGJlZW4gZGVmaW5lZCcpO1xufVxuKGZ1bmN0aW9uICgpIHtcbiAgICB0cnkge1xuICAgICAgICBpZiAodHlwZW9mIHNldFRpbWVvdXQgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgIGNhY2hlZFNldFRpbWVvdXQgPSBzZXRUaW1lb3V0O1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgY2FjaGVkU2V0VGltZW91dCA9IGRlZmF1bHRTZXRUaW1vdXQ7XG4gICAgICAgIH1cbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIGNhY2hlZFNldFRpbWVvdXQgPSBkZWZhdWx0U2V0VGltb3V0O1xuICAgIH1cbiAgICB0cnkge1xuICAgICAgICBpZiAodHlwZW9mIGNsZWFyVGltZW91dCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgY2FjaGVkQ2xlYXJUaW1lb3V0ID0gY2xlYXJUaW1lb3V0O1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgY2FjaGVkQ2xlYXJUaW1lb3V0ID0gZGVmYXVsdENsZWFyVGltZW91dDtcbiAgICAgICAgfVxuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgY2FjaGVkQ2xlYXJUaW1lb3V0ID0gZGVmYXVsdENsZWFyVGltZW91dDtcbiAgICB9XG59ICgpKVxuZnVuY3Rpb24gcnVuVGltZW91dChmdW4pIHtcbiAgICBpZiAoY2FjaGVkU2V0VGltZW91dCA9PT0gc2V0VGltZW91dCkge1xuICAgICAgICAvL25vcm1hbCBlbnZpcm9tZW50cyBpbiBzYW5lIHNpdHVhdGlvbnNcbiAgICAgICAgcmV0dXJuIHNldFRpbWVvdXQoZnVuLCAwKTtcbiAgICB9XG4gICAgLy8gaWYgc2V0VGltZW91dCB3YXNuJ3QgYXZhaWxhYmxlIGJ1dCB3YXMgbGF0dGVyIGRlZmluZWRcbiAgICBpZiAoKGNhY2hlZFNldFRpbWVvdXQgPT09IGRlZmF1bHRTZXRUaW1vdXQgfHwgIWNhY2hlZFNldFRpbWVvdXQpICYmIHNldFRpbWVvdXQpIHtcbiAgICAgICAgY2FjaGVkU2V0VGltZW91dCA9IHNldFRpbWVvdXQ7XG4gICAgICAgIHJldHVybiBzZXRUaW1lb3V0KGZ1biwgMCk7XG4gICAgfVxuICAgIHRyeSB7XG4gICAgICAgIC8vIHdoZW4gd2hlbiBzb21lYm9keSBoYXMgc2NyZXdlZCB3aXRoIHNldFRpbWVvdXQgYnV0IG5vIEkuRS4gbWFkZG5lc3NcbiAgICAgICAgcmV0dXJuIGNhY2hlZFNldFRpbWVvdXQoZnVuLCAwKTtcbiAgICB9IGNhdGNoKGUpe1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgLy8gV2hlbiB3ZSBhcmUgaW4gSS5FLiBidXQgdGhlIHNjcmlwdCBoYXMgYmVlbiBldmFsZWQgc28gSS5FLiBkb2Vzbid0IHRydXN0IHRoZSBnbG9iYWwgb2JqZWN0IHdoZW4gY2FsbGVkIG5vcm1hbGx5XG4gICAgICAgICAgICByZXR1cm4gY2FjaGVkU2V0VGltZW91dC5jYWxsKG51bGwsIGZ1biwgMCk7XG4gICAgICAgIH0gY2F0Y2goZSl7XG4gICAgICAgICAgICAvLyBzYW1lIGFzIGFib3ZlIGJ1dCB3aGVuIGl0J3MgYSB2ZXJzaW9uIG9mIEkuRS4gdGhhdCBtdXN0IGhhdmUgdGhlIGdsb2JhbCBvYmplY3QgZm9yICd0aGlzJywgaG9wZnVsbHkgb3VyIGNvbnRleHQgY29ycmVjdCBvdGhlcndpc2UgaXQgd2lsbCB0aHJvdyBhIGdsb2JhbCBlcnJvclxuICAgICAgICAgICAgcmV0dXJuIGNhY2hlZFNldFRpbWVvdXQuY2FsbCh0aGlzLCBmdW4sIDApO1xuICAgICAgICB9XG4gICAgfVxuXG5cbn1cbmZ1bmN0aW9uIHJ1bkNsZWFyVGltZW91dChtYXJrZXIpIHtcbiAgICBpZiAoY2FjaGVkQ2xlYXJUaW1lb3V0ID09PSBjbGVhclRpbWVvdXQpIHtcbiAgICAgICAgLy9ub3JtYWwgZW52aXJvbWVudHMgaW4gc2FuZSBzaXR1YXRpb25zXG4gICAgICAgIHJldHVybiBjbGVhclRpbWVvdXQobWFya2VyKTtcbiAgICB9XG4gICAgLy8gaWYgY2xlYXJUaW1lb3V0IHdhc24ndCBhdmFpbGFibGUgYnV0IHdhcyBsYXR0ZXIgZGVmaW5lZFxuICAgIGlmICgoY2FjaGVkQ2xlYXJUaW1lb3V0ID09PSBkZWZhdWx0Q2xlYXJUaW1lb3V0IHx8ICFjYWNoZWRDbGVhclRpbWVvdXQpICYmIGNsZWFyVGltZW91dCkge1xuICAgICAgICBjYWNoZWRDbGVhclRpbWVvdXQgPSBjbGVhclRpbWVvdXQ7XG4gICAgICAgIHJldHVybiBjbGVhclRpbWVvdXQobWFya2VyKTtcbiAgICB9XG4gICAgdHJ5IHtcbiAgICAgICAgLy8gd2hlbiB3aGVuIHNvbWVib2R5IGhhcyBzY3Jld2VkIHdpdGggc2V0VGltZW91dCBidXQgbm8gSS5FLiBtYWRkbmVzc1xuICAgICAgICByZXR1cm4gY2FjaGVkQ2xlYXJUaW1lb3V0KG1hcmtlcik7XG4gICAgfSBjYXRjaCAoZSl7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICAvLyBXaGVuIHdlIGFyZSBpbiBJLkUuIGJ1dCB0aGUgc2NyaXB0IGhhcyBiZWVuIGV2YWxlZCBzbyBJLkUuIGRvZXNuJ3QgIHRydXN0IHRoZSBnbG9iYWwgb2JqZWN0IHdoZW4gY2FsbGVkIG5vcm1hbGx5XG4gICAgICAgICAgICByZXR1cm4gY2FjaGVkQ2xlYXJUaW1lb3V0LmNhbGwobnVsbCwgbWFya2VyKTtcbiAgICAgICAgfSBjYXRjaCAoZSl7XG4gICAgICAgICAgICAvLyBzYW1lIGFzIGFib3ZlIGJ1dCB3aGVuIGl0J3MgYSB2ZXJzaW9uIG9mIEkuRS4gdGhhdCBtdXN0IGhhdmUgdGhlIGdsb2JhbCBvYmplY3QgZm9yICd0aGlzJywgaG9wZnVsbHkgb3VyIGNvbnRleHQgY29ycmVjdCBvdGhlcndpc2UgaXQgd2lsbCB0aHJvdyBhIGdsb2JhbCBlcnJvci5cbiAgICAgICAgICAgIC8vIFNvbWUgdmVyc2lvbnMgb2YgSS5FLiBoYXZlIGRpZmZlcmVudCBydWxlcyBmb3IgY2xlYXJUaW1lb3V0IHZzIHNldFRpbWVvdXRcbiAgICAgICAgICAgIHJldHVybiBjYWNoZWRDbGVhclRpbWVvdXQuY2FsbCh0aGlzLCBtYXJrZXIpO1xuICAgICAgICB9XG4gICAgfVxuXG5cblxufVxudmFyIHF1ZXVlID0gW107XG52YXIgZHJhaW5pbmcgPSBmYWxzZTtcbnZhciBjdXJyZW50UXVldWU7XG52YXIgcXVldWVJbmRleCA9IC0xO1xuXG5mdW5jdGlvbiBjbGVhblVwTmV4dFRpY2soKSB7XG4gICAgaWYgKCFkcmFpbmluZyB8fCAhY3VycmVudFF1ZXVlKSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgZHJhaW5pbmcgPSBmYWxzZTtcbiAgICBpZiAoY3VycmVudFF1ZXVlLmxlbmd0aCkge1xuICAgICAgICBxdWV1ZSA9IGN1cnJlbnRRdWV1ZS5jb25jYXQocXVldWUpO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIHF1ZXVlSW5kZXggPSAtMTtcbiAgICB9XG4gICAgaWYgKHF1ZXVlLmxlbmd0aCkge1xuICAgICAgICBkcmFpblF1ZXVlKCk7XG4gICAgfVxufVxuXG5mdW5jdGlvbiBkcmFpblF1ZXVlKCkge1xuICAgIGlmIChkcmFpbmluZykge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIHZhciB0aW1lb3V0ID0gcnVuVGltZW91dChjbGVhblVwTmV4dFRpY2spO1xuICAgIGRyYWluaW5nID0gdHJ1ZTtcblxuICAgIHZhciBsZW4gPSBxdWV1ZS5sZW5ndGg7XG4gICAgd2hpbGUobGVuKSB7XG4gICAgICAgIGN1cnJlbnRRdWV1ZSA9IHF1ZXVlO1xuICAgICAgICBxdWV1ZSA9IFtdO1xuICAgICAgICB3aGlsZSAoKytxdWV1ZUluZGV4IDwgbGVuKSB7XG4gICAgICAgICAgICBpZiAoY3VycmVudFF1ZXVlKSB7XG4gICAgICAgICAgICAgICAgY3VycmVudFF1ZXVlW3F1ZXVlSW5kZXhdLnJ1bigpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHF1ZXVlSW5kZXggPSAtMTtcbiAgICAgICAgbGVuID0gcXVldWUubGVuZ3RoO1xuICAgIH1cbiAgICBjdXJyZW50UXVldWUgPSBudWxsO1xuICAgIGRyYWluaW5nID0gZmFsc2U7XG4gICAgcnVuQ2xlYXJUaW1lb3V0KHRpbWVvdXQpO1xufVxuXG5wcm9jZXNzLm5leHRUaWNrID0gZnVuY3Rpb24gKGZ1bikge1xuICAgIHZhciBhcmdzID0gbmV3IEFycmF5KGFyZ3VtZW50cy5sZW5ndGggLSAxKTtcbiAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA+IDEpIHtcbiAgICAgICAgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGFyZ3NbaSAtIDFdID0gYXJndW1lbnRzW2ldO1xuICAgICAgICB9XG4gICAgfVxuICAgIHF1ZXVlLnB1c2gobmV3IEl0ZW0oZnVuLCBhcmdzKSk7XG4gICAgaWYgKHF1ZXVlLmxlbmd0aCA9PT0gMSAmJiAhZHJhaW5pbmcpIHtcbiAgICAgICAgcnVuVGltZW91dChkcmFpblF1ZXVlKTtcbiAgICB9XG59O1xuXG4vLyB2OCBsaWtlcyBwcmVkaWN0aWJsZSBvYmplY3RzXG5mdW5jdGlvbiBJdGVtKGZ1biwgYXJyYXkpIHtcbiAgICB0aGlzLmZ1biA9IGZ1bjtcbiAgICB0aGlzLmFycmF5ID0gYXJyYXk7XG59XG5JdGVtLnByb3RvdHlwZS5ydW4gPSBmdW5jdGlvbiAoKSB7XG4gICAgdGhpcy5mdW4uYXBwbHkobnVsbCwgdGhpcy5hcnJheSk7XG59O1xucHJvY2Vzcy50aXRsZSA9ICdicm93c2VyJztcbnByb2Nlc3MuYnJvd3NlciA9IHRydWU7XG5wcm9jZXNzLmVudiA9IHt9O1xucHJvY2Vzcy5hcmd2ID0gW107XG5wcm9jZXNzLnZlcnNpb24gPSAnJzsgLy8gZW1wdHkgc3RyaW5nIHRvIGF2b2lkIHJlZ2V4cCBpc3N1ZXNcbnByb2Nlc3MudmVyc2lvbnMgPSB7fTtcblxuZnVuY3Rpb24gbm9vcCgpIHt9XG5cbnByb2Nlc3Mub24gPSBub29wO1xucHJvY2Vzcy5hZGRMaXN0ZW5lciA9IG5vb3A7XG5wcm9jZXNzLm9uY2UgPSBub29wO1xucHJvY2Vzcy5vZmYgPSBub29wO1xucHJvY2Vzcy5yZW1vdmVMaXN0ZW5lciA9IG5vb3A7XG5wcm9jZXNzLnJlbW92ZUFsbExpc3RlbmVycyA9IG5vb3A7XG5wcm9jZXNzLmVtaXQgPSBub29wO1xuXG5wcm9jZXNzLmJpbmRpbmcgPSBmdW5jdGlvbiAobmFtZSkge1xuICAgIHRocm93IG5ldyBFcnJvcigncHJvY2Vzcy5iaW5kaW5nIGlzIG5vdCBzdXBwb3J0ZWQnKTtcbn07XG5cbnByb2Nlc3MuY3dkID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gJy8nIH07XG5wcm9jZXNzLmNoZGlyID0gZnVuY3Rpb24gKGRpcikge1xuICAgIHRocm93IG5ldyBFcnJvcigncHJvY2Vzcy5jaGRpciBpcyBub3Qgc3VwcG9ydGVkJyk7XG59O1xucHJvY2Vzcy51bWFzayA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gMDsgfTtcbiIsImV4cG9ydCBjb25zdCBFVkVOVFMgPSB7XHJcbiAgU0lHTklOOiAnU0lHTklOJyxcclxuICBTSUdOT1VUOiAnU0lHTk9VVCcsXHJcbiAgU0lHTlVQOiAnU0lHTlVQJ1xyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IFVSTFMgPSB7XHJcbiAgdG9rZW46ICcvdG9rZW4nLFxyXG4gIHNpZ251cDogJy8xL3VzZXIvc2lnbnVwJyxcclxuICByZXF1ZXN0UmVzZXRQYXNzd29yZDogJy8xL3VzZXIvcmVxdWVzdFJlc2V0UGFzc3dvcmQnLFxyXG4gIHJlc2V0UGFzc3dvcmQ6ICcvMS91c2VyL3Jlc2V0UGFzc3dvcmQnLFxyXG4gIGNoYW5nZVBhc3N3b3JkOiAnLzEvdXNlci9jaGFuZ2VQYXNzd29yZCcsXHJcbiAgb2JqZWN0czogJy8xL29iamVjdHMnLFxyXG4gIG9iamVjdHNBY3Rpb246ICcvMS9vYmplY3RzL2FjdGlvbidcclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCBTT0NJQUxfUFJPVklERVJTID0ge1xyXG4gIGdpdGh1Yjoge25hbWU6ICdnaXRodWInLCBsYWJlbDogJ0dpdGh1YicsIHVybDogJ3d3dy5naXRodWIuY29tJywgY3NzOiB7YmFja2dyb3VuZENvbG9yOiAnIzQ0NCd9LCBpZDogMX0sXHJcbiAgZ29vZ2xlOiB7bmFtZTogJ2dvb2dsZScsIGxhYmVsOiAnR29vZ2xlJywgdXJsOiAnd3d3Lmdvb2dsZS5jb20nLCBjc3M6IHtiYWNrZ3JvdW5kQ29sb3I6ICcjZGQ0YjM5J30sIGlkOiAyfSxcclxuICBmYWNlYm9vazoge25hbWU6ICdmYWNlYm9vaycsIGxhYmVsOiAnRmFjZWJvb2snLCB1cmw6ICd3d3cuZmFjZWJvb2suY29tJywgY3NzOiB7YmFja2dyb3VuZENvbG9yOiAnIzNiNTk5OCd9LCBpZDogM30sXHJcbiAgdHdpdHRlcjoge25hbWU6ICd0d2l0dGVyJywgbGFiZWw6ICdUd2l0dGVyJywgdXJsOiAnd3d3LnR3aXR0ZXIuY29tJywgY3NzOiB7YmFja2dyb3VuZENvbG9yOiAnIzU1YWNlZSd9LCBpZDogNH1cclxufTtcclxuIiwiZXhwb3J0IGRlZmF1bHQge1xyXG4gIGFwcE5hbWU6IG51bGwsXHJcbiAgYW5vbnltb3VzVG9rZW46IG51bGwsXHJcbiAgc2lnblVwVG9rZW46IG51bGwsXHJcbiAgYXBpVXJsOiAnaHR0cHM6Ly9hcGkuYmFja2FuZC5jb20nLFxyXG4gIHN0b3JhZ2VQcmVmaXg6ICdCQUNLQU5EXycsXHJcbiAgc3RvcmFnZVR5cGU6ICdsb2NhbCcsXHJcbiAgbWFuYWdlUmVmcmVzaFRva2VuOiB0cnVlLFxyXG4gIHJ1blNpZ25pbkFmdGVyU2lnbnVwOiB0cnVlLFxyXG4gIHJ1blNvY2tldDogdHJ1ZSxcclxuICBzb2NrZXRVcmw6ICdodHRwczovL3NvY2tldC5iYWNrYW5kLmNvbScsXHJcbiAgaXNNb2JpbGU6IGZhbHNlLFxyXG59O1xyXG4iLCJleHBvcnQgY29uc3QgZmlsdGVyID0ge1xyXG4gIGNyZWF0ZTogKGZpZWxkTmFtZSwgb3BlcmF0b3IsIHZhbHVlKSA9PiB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBmaWVsZE5hbWUsXHJcbiAgICAgIG9wZXJhdG9yLFxyXG4gICAgICB2YWx1ZVxyXG4gICAgfVxyXG4gIH0sXHJcbiAgb3BlcmF0b3JzOiB7XHJcbiAgICBudW1lcmljOiB7IGVxdWFsczogXCJlcXVhbHNcIiwgbm90RXF1YWxzOiBcIm5vdEVxdWFsc1wiLCBncmVhdGVyVGhhbjogXCJncmVhdGVyVGhhblwiLCBncmVhdGVyVGhhbk9yRXF1YWxzVG86IFwiZ3JlYXRlclRoYW5PckVxdWFsc1RvXCIsIGxlc3NUaGFuOiBcImxlc3NUaGFuXCIsIGxlc3NUaGFuT3JFcXVhbHNUbzogXCJsZXNzVGhhbk9yRXF1YWxzVG9cIiwgZW1wdHk6IFwiZW1wdHlcIiwgbm90RW1wdHk6IFwibm90RW1wdHlcIiB9LFxyXG4gICAgZGF0ZTogeyBlcXVhbHM6IFwiZXF1YWxzXCIsIG5vdEVxdWFsczogXCJub3RFcXVhbHNcIiwgZ3JlYXRlclRoYW46IFwiZ3JlYXRlclRoYW5cIiwgZ3JlYXRlclRoYW5PckVxdWFsc1RvOiBcImdyZWF0ZXJUaGFuT3JFcXVhbHNUb1wiLCBsZXNzVGhhbjogXCJsZXNzVGhhblwiLCBsZXNzVGhhbk9yRXF1YWxzVG86IFwibGVzc1RoYW5PckVxdWFsc1RvXCIsIGVtcHR5OiBcImVtcHR5XCIsIG5vdEVtcHR5OiBcIm5vdEVtcHR5XCIgfSxcclxuICAgIHRleHQ6IHsgZXF1YWxzOiBcImVxdWFsc1wiLCBub3RFcXVhbHM6IFwibm90RXF1YWxzXCIsIHN0YXJ0c1dpdGg6IFwic3RhcnRzV2l0aFwiLCBlbmRzV2l0aDogXCJlbmRzV2l0aFwiLCBjb250YWluczogXCJjb250YWluc1wiLCBub3RDb250YWluczogXCJub3RDb250YWluc1wiLCBlbXB0eTogXCJlbXB0eVwiLCBub3RFbXB0eTogXCJub3RFbXB0eVwiIH0sXHJcbiAgICBib29sZWFuOiB7IGVxdWFsczogXCJlcXVhbHNcIiB9LFxyXG4gICAgcmVsYXRpb246IHsgaW46IFwiaW5cIiB9XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgY29uc3Qgc29ydCA9IHtcclxuICBjcmVhdGU6IChmaWVsZE5hbWUsIG9yZGVyKSA9PiB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBmaWVsZE5hbWUsXHJcbiAgICAgIG9yZGVyXHJcbiAgICB9XHJcbiAgfSxcclxuICBvcmRlcnM6IHsgYXNjOiBcImFzY1wiLCBkZXNjOiBcImRlc2NcIiB9XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBleGNsdWRlID0ge1xyXG4gIG9wdGlvbnM6IHsgbWV0YWRhdGE6IFwibWV0YWRhdGFcIiwgdG90YWxSb3dzOiBcInRvdGFsUm93c1wiLCBhbGw6IFwibWV0YWRhdGEmdG90YWxSb3dzXCIgfVxyXG59XHJcbiIsIi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxyXG4gKiBiYWNrYW5kIEphdmFTY3JpcHQgTGlicmFyeVxyXG4gKiBBdXRob3JzOiBiYWNrYW5kXHJcbiAqIExpY2Vuc2U6IE1JVCAoaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHApXHJcbiAqIENvbXBpbGVkIEF0OiAyNi8xMS8yMDE2XHJcbiAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cclxuaW1wb3J0IGRlZmF1bHRzIGZyb20gJy4vZGVmYXVsdHMnXHJcbmltcG9ydCAqIGFzIGNvbnN0YW50cyBmcm9tICcuL2NvbnN0YW50cydcclxuaW1wb3J0ICogYXMgaGVscGVycyBmcm9tICcuL2hlbHBlcnMnXHJcbmltcG9ydCBTdG9yYWdlIGZyb20gJy4vdXRpbHMvc3RvcmFnZSdcclxuaW1wb3J0IEh0dHAgZnJvbSAnLi91dGlscy9odHRwJ1xyXG5pbXBvcnQgU29ja2V0IGZyb20gJy4vdXRpbHMvc29ja2V0J1xyXG5pbXBvcnQgKiBhcyBhdXRoIGZyb20gJy4vc2VydmljZXMvYXV0aCdcclxuaW1wb3J0ICogYXMgY3J1ZCBmcm9tICcuL3NlcnZpY2VzL2NydWQnXHJcbmltcG9ydCAqIGFzIGZpbGVzIGZyb20gJy4vc2VydmljZXMvZmlsZXMnXHJcblxyXG4oKCkgPT4ge1xyXG4gICd1c2Ugc3RyaWN0JztcclxuICB3aW5kb3dbJ2JhY2thbmQnXSA9IHt9O1xyXG4gIHdpbmRvd1snYmFja2FuZCddLmluaXRpYXRlID0gKGNvbmZpZyA9IHt9KSA9PiB7XHJcblxyXG4gICAgLy8gY29tYmluZSBkZWZhdWx0cyB3aXRoIHVzZXIgY29uZmlnXHJcbiAgICBPYmplY3QuYXNzaWduKGRlZmF1bHRzLCBjb25maWcpO1xuXG4gICAgLy8gdmVyaWZ5IG5ldyBkZWZhdWx0c1xyXG4gICAgaWYgKCFkZWZhdWx0cy5hcHBOYW1lKVxyXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ2FwcE5hbWUgaXMgbWlzc2luZycpO1xyXG4gICAgaWYgKCFkZWZhdWx0cy5hbm9ueW1vdXNUb2tlbilcclxuICAgICAgdGhyb3cgbmV3IEVycm9yKCdhbm9ueW1vdXNUb2tlbiBpcyBtaXNzaW5nJyk7XHJcbiAgICBpZiAoIWRlZmF1bHRzLnNpZ25VcFRva2VuKVxyXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ3NpZ25VcFRva2VuIGlzIG1pc3NpbmcnKTtcclxuXHJcbiAgICAvLyBpbml0IGdsb2JhbHNcclxuICAgIGxldCBzdG9yYWdlID0gbmV3IFN0b3JhZ2UoZGVmYXVsdHMuc3RvcmFnZVR5cGUsIGRlZmF1bHRzLnN0b3JhZ2VQcmVmaXgpO1xyXG4gICAgbGV0IGh0dHAgPSBIdHRwKHtcclxuICAgICAgYmFzZVVSTDogZGVmYXVsdHMuYXBpVXJsXHJcbiAgICB9KTtcclxuICAgIGxldCBzY29wZSA9IHtcclxuICAgICAgc3RvcmFnZSxcclxuICAgICAgaHR0cCxcclxuICAgIH1cclxuICAgIGxldCBzb2NrZXQgPSBudWxsO1xyXG4gICAgaWYgKGRlZmF1bHRzLnJ1blNvY2tldCkge1xyXG4gICAgICBzb2NrZXQgPSBuZXcgU29ja2V0KGRlZmF1bHRzLnNvY2tldFVybCk7XHJcbiAgICAgIHNjb3BlLnNvY2tldCA9IHNvY2tldDtcclxuICAgIH1cclxuXHJcbiAgICAvLyBiaW5kIGdsb2JhbHMgdG8gYWxsIHNlcnZpY2UgZnVuY3Rpb25zXHJcbiAgICBsZXQgc2VydmljZSA9IE9iamVjdC5hc3NpZ24oe30sIGF1dGgsIGNydWQsIGZpbGVzKTtcclxuICAgIGZvciAobGV0IGZuIGluIHNlcnZpY2UpIHtcclxuICAgICAgc2VydmljZVtmbl0gPSBzZXJ2aWNlW2ZuXS5iaW5kKHNjb3BlKTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBzZXQgaW50ZXJjZXB0b3IgZm9yIGF1dGhIZWFkZXJzICYgcmVmcmVzaFRva2VuXHJcbiAgICBodHRwLmNvbmZpZy5pbnRlcmNlcHRvcnMgPSB7XHJcbiAgICAgIHJlcXVlc3Q6IGZ1bmN0aW9uKGNvbmZpZykge1xyXG4gICAgICAgIGlmIChjb25maWcudXJsLmluZGV4T2YoY29uc3RhbnRzLlVSTFMudG9rZW4pID09PSAgLTEgJiYgc3RvcmFnZS5nZXQoJ3VzZXInKSkge1xyXG4gICAgICAgICAgY29uZmlnLmhlYWRlcnMgPSBPYmplY3QuYXNzaWduKHt9LCBjb25maWcuaGVhZGVycywgc3RvcmFnZS5nZXQoJ3VzZXInKS50b2tlbilcclxuICAgICAgICB9XHJcbiAgICAgIH0sXHJcbiAgICAgIHJlc3BvbnNlRXJyb3I6IGZ1bmN0aW9uIChlcnJvciwgY29uZmlnLCByZXNvbHZlLCByZWplY3QsIHNjYiwgZWNiKSB7XHJcbiAgICAgICAgaWYgKGNvbmZpZy51cmwuaW5kZXhPZihjb25zdGFudHMuVVJMUy50b2tlbikgPT09ICAtMVxyXG4gICAgICAgICAmJiBkZWZhdWx0cy5tYW5hZ2VSZWZyZXNoVG9rZW5cclxuICAgICAgICAgJiYgY29uZmlnLmhlYWRlcnMgJiYgKGNvbmZpZy5oZWFkZXJzLkFub255bW91c1Rva2VuIHx8IGNvbmZpZy5oZWFkZXJzLkF1dGhvcml6YXRpb24pXHJcbiAgICAgICAgICYmIGVycm9yLnN0YXR1cyA9PT0gNDAxXHJcbiAgICAgICAgICYmIGVycm9yLmRhdGEgJiYgZXJyb3IuZGF0YS5NZXNzYWdlID09PSAnaW52YWxpZCBvciBleHBpcmVkIHRva2VuJykge1xyXG4gICAgICAgICAgIGF1dGguX19oYW5kbGVSZWZyZXNoVG9rZW5fXy5jYWxsKHNjb3BlLCBlcnJvcilcclxuICAgICAgICAgICAudGhlbihyZXNwb25zZSA9PiB7XHJcbiAgICAgICAgICAgICB0aGlzLnJlcXVlc3QoY29uZmlnLCBzY2IsIGVjYik7XHJcbiAgICAgICAgICAgfSlcclxuICAgICAgICAgICAuY2F0Y2goZXJyb3IgPT4ge1xyXG4gICAgICAgICAgICAgZWNiICYmIGVjYihlcnJvcik7XHJcbiAgICAgICAgICAgICByZWplY3QoZXJyb3IpO1xyXG4gICAgICAgICAgIH0pXHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLy8gZXhwb3NlIGJhY2thbmQgbmFtZXNwYWNlIHRvIHdpbmRvd1xyXG4gICAgd2luZG93WydiYWNrYW5kJ10gPSB7XHJcbiAgICAgIHNlcnZpY2UsXHJcbiAgICAgIGNvbnN0YW50cyxcclxuICAgICAgaGVscGVycyxcclxuICAgIH07XHJcbiAgICBpZihkZWZhdWx0cy5ydW5Tb2NrZXQpIHtcclxuICAgICAgc3RvcmFnZS5nZXQoJ3VzZXInKSAmJiBzdG9yYWdlLmdldCgndXNlcicpLnRva2VuLkF1dGhvcml6YXRpb24gJiYgc29ja2V0LmNvbm5lY3Qoc3RvcmFnZS5nZXQoJ3VzZXInKS50b2tlbi5BdXRob3JpemF0aW9uLCBkZWZhdWx0cy5hbm9ueW1vdXNUb2tlbiwgZGVmYXVsdHMuYXBwTmFtZSlcclxuICAgICAgd2luZG93WydiYWNrYW5kJ10uc29ja2V0ID0gc29ja2V0O1xyXG4gICAgfVxyXG5cclxuICB9XHJcbn0pKCk7XHJcbiIsImltcG9ydCB7IFByb21pc2UgfSBmcm9tICdlczYtcHJvbWlzZSdcclxuaW1wb3J0IHsgVVJMUywgRVZFTlRTLCBTT0NJQUxfUFJPVklERVJTIH0gZnJvbSAnLi8uLi9jb25zdGFudHMnXHJcbmltcG9ydCBkZWZhdWx0cyBmcm9tICcuLy4uL2RlZmF1bHRzJ1xuXHJcbmV4cG9ydCBmdW5jdGlvbiBfX2luaXRpYXRlX18gKCkge1xyXG4gIHRoaXMuc3RvcmFnZS5nZXQoJ3VzZXInKSAmJiBfX3NldEF1dGhfXy5jYWxsKHRoaXMsIHRoaXMuc3RvcmFnZS5nZXQoJ3VzZXInKSk7XHJcbn1cclxuZnVuY3Rpb24gX19nZW5lcmF0ZUZha2VSZXNwb25zZV9fIChzdGF0dXMgPSAwLCBzdGF0dXNUZXh0ID0gJycsIGhlYWRlcnMgPSBbXSwgZGF0YSA9ICcnKSB7XHJcbiAgcmV0dXJuIHtcclxuICAgIHN0YXR1cyxcclxuICAgIHN0YXR1c1RleHQsXHJcbiAgICBoZWFkZXJzLFxyXG4gICAgZGF0YVxyXG4gIH1cclxufVxyXG5mdW5jdGlvbiBfX2Rpc3BhdGNoRXZlbnRfXyAobmFtZSkge1xyXG4gIGxldCBldmVudDtcclxuICBpZiAoZG9jdW1lbnQuY3JlYXRlRXZlbnQpIHtcclxuICAgIGV2ZW50ID0gZG9jdW1lbnQuY3JlYXRlRXZlbnQoJ0V2ZW50Jyk7XHJcbiAgICBldmVudC5pbml0RXZlbnQobmFtZSwgdHJ1ZSwgdHJ1ZSk7XHJcbiAgICBldmVudC5ldmVudE5hbWUgPSBuYW1lO1xyXG4gICAgd2luZG93LmRpc3BhdGNoRXZlbnQoZXZlbnQpO1xyXG4gIH0gZWxzZSB7XHJcbiAgICBldmVudCA9IGRvY3VtZW50LmNyZWF0ZUV2ZW50T2JqZWN0KCk7XHJcbiAgICBldmVudC5ldmVudFR5cGUgPSBuYW1lO1xyXG4gICAgZXZlbnQuZXZlbnROYW1lID0gbmFtZTtcclxuICAgIHdpbmRvdy5maXJlRXZlbnQoJ29uJyArIGV2ZW50LmV2ZW50VHlwZSwgZXZlbnQpO1xyXG4gIH1cclxufVxyXG5mdW5jdGlvbiBfX2NsZWFyQXV0aF9fICgpIHtcclxuICAvLyB0aGlzLnN0b3JhZ2UucmVtb3ZlKCd1c2VyJyk7XHJcbiAgLy8gZGVsZXRlIHRoaXMuaHR0cC5jb25maWcuaGVhZGVyc1snQW5vbnltb3VzVG9rZW4nXTtcclxuICAvLyBkZWxldGUgdGhpcy5odHRwLmNvbmZpZy5oZWFkZXJzWydBdXRob3JpemF0aW9uJ107XHJcbn1cclxuZnVuY3Rpb24gX19zZXRBdXRoX18gKGRhdGEpIHtcclxuICB0aGlzLnN0b3JhZ2Uuc2V0KCd1c2VyJywgZGF0YSk7XHJcbiAgLy8gdGhpcy5odHRwLmNvbmZpZy5oZWFkZXJzID1cclxuICAvLyAgIE9iamVjdC5hc3NpZ24odGhpcy5odHRwLmNvbmZpZy5oZWFkZXJzLCB0aGlzLnN0b3JhZ2UuZ2V0KCd1c2VyJykudG9rZW4pXHJcbn1cclxuZXhwb3J0IGZ1bmN0aW9uIF9faGFuZGxlUmVmcmVzaFRva2VuX18gKGVycm9yKSB7XHJcbiAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcclxuICAgIGxldCB1c2VyID0gdGhpcy5zdG9yYWdlLmdldCgndXNlcicpO1xyXG4gICAgaWYgKCF1c2VyIHx8ICF1c2VyLmRldGFpbHMucmVmcmVzaF90b2tlbikge1xyXG4gICAgICByZWplY3QoX19nZW5lcmF0ZUZha2VSZXNwb25zZV9fKDAsICcnLCBbXSwgJ05vIGNhY2hlZCB1c2VyIG9yIHJlZnJlc2hUb2tlbiBmb3VuZC4gYXV0aGVudGljYXRpb24gaXMgcmVxdWlyZWQuJykpO1xyXG4gICAgfVxyXG4gICAgZWxzZSB7XHJcbiAgICAgIF9fc2lnbmluV2l0aFRva2VuX18uY2FsbCh0aGlzLCB7XHJcbiAgICAgICAgdXNlcm5hbWU6IHVzZXIuZGV0YWlscy51c2VybmFtZSxcclxuICAgICAgICByZWZyZXNoVG9rZW46IHVzZXIuZGV0YWlscy5yZWZyZXNoX3Rva2VuLFxyXG4gICAgICB9KVxyXG4gICAgICAudGhlbihyZXNwb25zZSA9PiB7XHJcbiAgICAgICAgcmVzb2x2ZShyZXNwb25zZSk7XHJcbiAgICAgIH0pXHJcbiAgICAgIC5jYXRjaChlcnJvciA9PiB7XHJcbiAgICAgICAgcmVqZWN0KGVycm9yKTtcclxuICAgICAgfSk7XHJcbiAgICB9XHJcbiAgfSlcclxufTtcclxuZXhwb3J0IGZ1bmN0aW9uIHVzZUFub255bW91c0F1dGggKHNjYikge1xyXG4gIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XHJcbiAgICBfX2NsZWFyQXV0aF9fLmNhbGwodGhpcyk7XHJcbiAgICBfX3NldEF1dGhfXy5jYWxsKHRoaXMsIHtcclxuICAgICAgdG9rZW46IHtcclxuICAgICAgICBBbm9ueW1vdXNUb2tlbjogZGVmYXVsdHMuYW5vbnltb3VzVG9rZW5cclxuICAgICAgfSxcclxuICAgICAgZGV0YWlsczoge1xyXG4gICAgICAgIHVzZXJuYW1lOiAnYW5vbnltb3VzJyxcclxuICAgICAgICBuYW1lOiAnYW5vbnltb3VzIHVzZXInXHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gICAgc2NiICYmIHNjYihfX2dlbmVyYXRlRmFrZVJlc3BvbnNlX18oMjAwLCAnT0snLCBbXSwgdGhpcy5zdG9yYWdlLmdldCgndXNlcicpKSk7XHJcbiAgICByZXNvbHZlKF9fZ2VuZXJhdGVGYWtlUmVzcG9uc2VfXygyMDAsICdPSycsIFtdLCB0aGlzLnN0b3JhZ2UuZ2V0KCd1c2VyJykpKTtcclxuICB9KTtcclxufVxyXG5leHBvcnQgZnVuY3Rpb24gc2lnbmluICh1c2VybmFtZSwgcGFzc3dvcmQsIHNjYiwgZWNiKSB7XHJcbiAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcclxuICAgIF9fY2xlYXJBdXRoX18uY2FsbCh0aGlzKTtcclxuICAgIHRoaXMuaHR0cCh7XHJcbiAgICAgIHVybDogVVJMUy50b2tlbixcclxuICAgICAgbWV0aG9kOiAnUE9TVCcsXHJcbiAgICAgIGhlYWRlcnM6IHtcclxuICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCdcclxuICAgICAgfSxcclxuICAgICAgZGF0YTogYHVzZXJuYW1lPSR7dXNlcm5hbWV9JnBhc3N3b3JkPSR7cGFzc3dvcmR9JmFwcE5hbWU9JHtkZWZhdWx0cy5hcHBOYW1lfSZncmFudF90eXBlPXBhc3N3b3JkYFxyXG4gICAgfSlcclxuICAgIC50aGVuKHJlc3BvbnNlID0+IHtcclxuICAgICAgX19zZXRBdXRoX18uY2FsbCh0aGlzLCB7XHJcbiAgICAgICAgdG9rZW46IHtcclxuICAgICAgICAgIEF1dGhvcml6YXRpb246IGBCZWFyZXIgJHtyZXNwb25zZS5kYXRhLmFjY2Vzc190b2tlbn1gXHJcbiAgICAgICAgfSxcclxuICAgICAgICBkZXRhaWxzOiByZXNwb25zZS5kYXRhXHJcbiAgICAgIH0pO1xyXG4gICAgICBfX2Rpc3BhdGNoRXZlbnRfXyhFVkVOVFMuU0lHTklOKTtcclxuICAgICAgaWYgKGRlZmF1bHRzLnJ1blNvY2tldCkge1xyXG4gICAgICAgIHRoaXMuc29ja2V0LmNvbm5lY3QodGhpcy5zdG9yYWdlLmdldCgndXNlcicpLnRva2VuLkF1dGhvcml6YXRpb24sIGRlZmF1bHRzLmFub255bW91c1Rva2VuLCBkZWZhdWx0cy5hcHBOYW1lKTtcclxuICAgICAgfVxyXG4gICAgICBzY2IgJiYgc2NiKHJlc3BvbnNlKTtcclxuICAgICAgcmVzb2x2ZShyZXNwb25zZSk7XHJcbiAgICB9KVxyXG4gICAgLmNhdGNoKGVycm9yID0+IHtcclxuICAgICAgZWNiICYmIGVjYihlcnJvcik7XHJcbiAgICAgIHJlamVjdChlcnJvcik7XHJcbiAgICB9KTtcclxuICB9KTtcclxufVxyXG5leHBvcnQgZnVuY3Rpb24gc2lnbnVwIChlbWFpbCwgcGFzc3dvcmQsIGNvbmZpcm1QYXNzd29yZCwgZmlyc3ROYW1lLCBsYXN0TmFtZSwgc2NiLCBlY2IpIHtcclxuICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xyXG4gICAgX19jbGVhckF1dGhfXy5jYWxsKHRoaXMpO1xyXG4gICAgdGhpcy5odHRwKHtcclxuICAgICAgdXJsOiBVUkxTLnNpZ251cCxcclxuICAgICAgbWV0aG9kOiAnUE9TVCcsXHJcbiAgICAgIGhlYWRlcnM6IHtcclxuICAgICAgICAnU2lnblVwVG9rZW4nOiBkZWZhdWx0cy5zaWduVXBUb2tlblxyXG4gICAgICB9LFxyXG4gICAgICBkYXRhOiB7XHJcbiAgICAgICAgZmlyc3ROYW1lLFxyXG4gICAgICAgIGxhc3ROYW1lLFxyXG4gICAgICAgIGVtYWlsLFxyXG4gICAgICAgIHBhc3N3b3JkLFxyXG4gICAgICAgIGNvbmZpcm1QYXNzd29yZFxyXG4gICAgICB9XHJcbiAgICB9LCBzY2IgLCBlY2IpXHJcbiAgICAudGhlbihyZXNwb25zZSA9PiB7XHJcbiAgICAgIF9fZGlzcGF0Y2hFdmVudF9fKEVWRU5UUy5TSUdOVVApO1xyXG4gICAgICBpZihkZWZhdWx0cy5ydW5TaWduaW5BZnRlclNpZ251cCkge1xyXG4gICAgICAgIHJldHVybiBzaWduaW4uY2FsbCh0aGlzLCByZXNwb25zZS5kYXRhLnVzZXJuYW1lLCBwYXNzd29yZCk7XHJcbiAgICAgIH1cclxuICAgICAgZWxzZSB7XHJcbiAgICAgICAgc2NiICYmIHNjYihyZXNwb25zZSk7XHJcbiAgICAgICAgcmVzb2x2ZShyZXNwb25zZSk7XHJcbiAgICAgIH1cclxuICAgIH0pXHJcbiAgICAudGhlbihyZXNwb25zZSA9PiB7XHJcbiAgICAgIHNjYiAmJiBzY2IocmVzcG9uc2UpO1xyXG4gICAgICByZXNvbHZlKHJlc3BvbnNlKTtcclxuICAgIH0pXHJcbiAgICAuY2F0Y2goZXJyb3IgPT4ge1xyXG4gICAgICBlY2IgJiYgZWNiKGVycm9yKTtcclxuICAgICAgcmVqZWN0KGVycm9yKTtcclxuICAgIH0pO1xyXG4gIH0pO1xyXG59XHJcbmZ1bmN0aW9uIF9fZ2V0U29jaWFsVXJsX18gKHByb3ZpZGVyTmFtZSwgaXNTaWdudXAsIGlzQXV0b1NpZ25VcCkge1xyXG4gIGxldCBwcm92aWRlciA9IFNPQ0lBTF9QUk9WSURFUlNbcHJvdmlkZXJOYW1lXTtcclxuICBsZXQgYWN0aW9uID0gaXNTaWdudXAgPyAndXAnIDogJ2luJztcclxuICBsZXQgYXV0b1NpZ25VcFBhcmFtID0gKCFpc1NpZ251cCAmJiBpc0F1dG9TaWduVXApID8gXCImc2lnbnVwSWZOb3RTaWduZWRJbj10cnVlXCIgOiAnJztcclxuICByZXR1cm4gYC91c2VyL3NvY2lhbFNpZ24ke2FjdGlvbn0/cHJvdmlkZXI9JHtwcm92aWRlci5sYWJlbH0ke2F1dG9TaWduVXBQYXJhbX0mcmVzcG9uc2VfdHlwZT10b2tlbiZjbGllbnRfaWQ9c2VsZiZyZWRpcmVjdF91cmk9JHtwcm92aWRlci51cmx9JnN0YXRlPWA7XHJcbn1cclxuZnVuY3Rpb24gX19jaGVja1NvY2lhbEF1dGhXaW5kb3dGb3JEYXRhX18gKHNvY2lhbEF1dGhXaW5kb3cpIHtcclxuICBsZXQgdGltZXIgPSBzZXRJbnRlcnZhbCgoKSA9PiB7XHJcbiAgICBpZihzb2NpYWxBdXRoV2luZG93LmNsb3NlZCkgeyBjbGVhckludGVydmFsKHRpbWVyKTsgfVxyXG4gICAgbGV0IGxvY2F0aW9uQ29weSA9IE9iamVjdC5hc3NpZ24oe30sIHNvY2lhbEF1dGhXaW5kb3cubG9jYXRpb24pO1xyXG4gICAgbGV0IGRhdGFNYXRjaCA9IC9cXD8oZGF0YXxlcnJvcik9KC4rKS8uZXhlYyhsb2NhdGlvbkNvcHkuaHJlZik7XHJcbiAgICBpZiAoZGF0YU1hdGNoICYmIGRhdGFNYXRjaFsxXSAmJiBkYXRhTWF0Y2hbMl0pIHtcclxuICAgICAgIGNsZWFySW50ZXJ2YWwodGltZXIpO1xyXG4gICAgICAgbGV0IGRhdGEgPSBkYXRhTWF0Y2hbMV0gPT09ICdkYXRhJyA/XHJcbiAgICAgICAgX19nZW5lcmF0ZUZha2VSZXNwb25zZV9fKDIwMCwgJ09LJywgW10sIEpTT04ucGFyc2UoZGVjb2RlVVJJQ29tcG9uZW50KGRhdGFNYXRjaFsyXS5yZXBsYWNlKC8jLiovLCAnJykpKSkgOlxyXG4gICAgICAgIF9fZ2VuZXJhdGVGYWtlUmVzcG9uc2VfXygwLCAnJywgW10sIEpTT04ucGFyc2UoZGVjb2RlVVJJQ29tcG9uZW50KGRhdGFNYXRjaFsyXS5yZXBsYWNlKC8jLiovLCAnJykpKSlcclxuICAgICAgICBzb2NpYWxBdXRoV2luZG93Lm9wZW5lci5wb3N0TWVzc2FnZShKU09OLnN0cmluZ2lmeShkYXRhKSwgbG9jYXRpb25Db3B5Lm9yaWdpbik7XHJcbiAgICB9XHJcbiAgfSwgMzMzKTtcclxufVxyXG5mdW5jdGlvbiBfX3NvY2lhbEF1dGhfXyAocHJvdmlkZXIsIGlzU2lnblVwLCBzcGVjLCBlbWFpbCwgc2NiLCBlY2IpIHtcclxuICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xyXG4gICAgaWYgKCFTT0NJQUxfUFJPVklERVJTW3Byb3ZpZGVyXSkge1xyXG4gICAgICBlY2IgJiYgZWNiKF9fZ2VuZXJhdGVGYWtlUmVzcG9uc2VfXygwLCAnJywgW10sICdVbmtub3duIFNvY2lhbCBQcm92aWRlcicpKTtcclxuICAgICAgcmVqZWN0KF9fZ2VuZXJhdGVGYWtlUmVzcG9uc2VfXygwLCAnJywgW10sICdVbmtub3duIFNvY2lhbCBQcm92aWRlcicpKTtcclxuICAgIH1cclxuICAgIGxldCB3aW5kb3dVcmwgPSAgYCR7ZGVmYXVsdHMuYXBpVXJsfS8xLyR7X19nZXRTb2NpYWxVcmxfXyhwcm92aWRlciwgaXNTaWduVXAsIHRydWUpfSZhcHBuYW1lPSR7ZGVmYXVsdHMuYXBwTmFtZX0ke2VtYWlsID8gJyZlbWFpbD0nK2VtYWlsIDogJyd9JnJldHVybkFkZHJlc3M9YFxyXG4gICAgbGV0IHNvY2lhbEF1dGhXaW5kb3cgPSB3aW5kb3cub3BlbignJywgJycsIHNwZWMpO1xyXG4gICAgc29jaWFsQXV0aFdpbmRvdy5sb2NhdGlvbiA9IHdpbmRvd1VybDtcclxuICAgIHNvY2lhbEF1dGhXaW5kb3cuZm9jdXMoKTtcclxuICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdtZXNzYWdlJywgZSA9PiB7XHJcbiAgICAgIGxldCBvcmlnaW4gPSBlLm9yaWdpbiB8fCBlLm9yaWdpbmFsRXZlbnQub3JpZ2luO1xyXG4gICAgICBpZiAob3JpZ2luICE9PSBsb2NhdGlvbi5vcmlnaW4pIHtcclxuICAgICAgICBlY2IgJiYgZWNiKHRoaXMuX2dlbmVyYXRlRmFrZVJlc3BvbnNlKDAsICcnLCBbXSwgJ1Vua25vd24gT3JpZ2luIE1lc3NhZ2UnKSk7XHJcbiAgICAgICAgcmVqZWN0KHRoaXMuX2dlbmVyYXRlRmFrZVJlc3BvbnNlKDAsICcnLCBbXSwgJ1Vua25vd24gT3JpZ2luIE1lc3NhZ2UnKSk7XHJcbiAgICAgIH1cclxuICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ21lc3NhZ2UnLCBudWxsLCBmYWxzZSk7XHJcbiAgICAgIHNvY2lhbEF1dGhXaW5kb3cuY2xvc2UoKTtcclxuICAgICAgLy8gc2V0VGltZW91dChzb2NpYWxBdXRoV2luZG93ID0gbnVsbCwgMTAwMCk7XHJcblxyXG4gICAgICBsZXQgcmVzID0gSlNPTi5wYXJzZShlLmRhdGEpXHJcbiAgICAgIGlmIChyZXMuc3RhdHVzICE9IDIwMCkge1xyXG4gICAgICAgIGVjYiAmJiBlY2IocmVzKTtcclxuICAgICAgICByZWplY3QocmVzKTtcclxuICAgICAgfVxyXG4gICAgICBlbHNlIHtcclxuICAgICAgICBzY2IgJiYgc2NiKHJlcyk7XHJcbiAgICAgICAgcmVzb2x2ZShyZXMpO1xyXG4gICAgICB9XHJcbiAgICB9LCBmYWxzZSk7XHJcbiAgICBfX2NoZWNrU29jaWFsQXV0aFdpbmRvd0ZvckRhdGFfXyhzb2NpYWxBdXRoV2luZG93KTtcclxuICB9KTtcclxufVxyXG5leHBvcnQgZnVuY3Rpb24gc29jaWFsU2lnbmluIChwcm92aWRlciwgc2NiLCBlY2IsIHNwZWMgPSAnbGVmdD0xLCB0b3A9MSwgd2lkdGg9NjAwLCBoZWlnaHQ9NjAwJykge1xyXG4gIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XHJcbiAgICBfX2NsZWFyQXV0aF9fLmNhbGwodGhpcyk7XHJcbiAgICBfX3NvY2lhbEF1dGhfXyhwcm92aWRlciwgZmFsc2UsIHNwZWMsIG51bGwsIHNjYiwgZWNiKVxyXG4gICAgICAudGhlbihyZXNwb25zZSA9PiB7XHJcbiAgICAgICAgX19kaXNwYXRjaEV2ZW50X18oRVZFTlRTLlNJR05VUCk7XHJcbiAgICAgICAgcmV0dXJuIF9fc2lnbmluV2l0aFRva2VuX18uY2FsbCh0aGlzLCB7XHJcbiAgICAgICAgICBhY2Nlc3NUb2tlbjogcmVzcG9uc2UuZGF0YS5hY2Nlc3NfdG9rZW5cclxuICAgICAgICB9KTtcclxuICAgICAgfSlcclxuICAgICAgLnRoZW4ocmVzcG9uc2UgPT4ge1xyXG4gICAgICAgIHNjYiAmJiBzY2IocmVzcG9uc2UpO1xyXG4gICAgICAgIHJlc29sdmUocmVzcG9uc2UpO1xyXG4gICAgICB9KVxyXG4gICAgICAuY2F0Y2goZXJyb3IgPT4ge1xyXG4gICAgICAgIGVjYiAmJiBlY2IoZXJyb3IpO1xyXG4gICAgICAgIHJlamVjdChlcnJvcik7XHJcbiAgICAgIH0pO1xyXG4gIH0pO1xyXG59O1xyXG5leHBvcnQgZnVuY3Rpb24gc29jaWFsU2lnbnVwIChwcm92aWRlciwgZW1haWwsIHNjYiwgZWNiLCBzcGVjID0gJ2xlZnQ9MSwgdG9wPTEsIHdpZHRoPTYwMCwgaGVpZ2h0PTYwMCcpIHtcclxuICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xyXG4gICAgX19jbGVhckF1dGhfXy5jYWxsKHRoaXMpO1xyXG4gICAgX3NvY2lhbEF1dGgocHJvdmlkZXIsIHRydWUsIHNwZWMsIGVtYWlsLCBzY2IsIGVjYilcclxuICAgICAgLnRoZW4ocmVzcG9uc2UgPT4ge1xyXG4gICAgICAgIF9fZGlzcGF0Y2hFdmVudF9fKEVWRU5UUy5TSUdOVVApO1xyXG4gICAgICAgIGlmKGRlZmF1bHRzLnJ1blNpZ25pbkFmdGVyU2lnbnVwKSB7XHJcbiAgICAgICAgICByZXR1cm4gX19zaWduaW5XaXRoVG9rZW5fXy5jYWxsKHRoaXMsIHtcclxuICAgICAgICAgICAgYWNjZXNzVG9rZW46IHJlc3BvbnNlLmRhdGEuYWNjZXNzX3Rva2VuXHJcbiAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICBzY2IgJiYgc2NiKHJlc3BvbnNlKTtcclxuICAgICAgICAgIHJlc29sdmUocmVzcG9uc2UpO1xyXG4gICAgICAgIH1cclxuICAgICAgfSlcclxuICAgICAgLnRoZW4ocmVzcG9uc2UgPT4ge1xyXG4gICAgICAgIHNjYiAmJiBzY2IocmVzcG9uc2UpO1xyXG4gICAgICAgIHJlc29sdmUocmVzcG9uc2UpO1xyXG4gICAgICB9KVxyXG4gICAgICAuY2F0Y2goZXJyb3IgPT4ge1xyXG4gICAgICAgIGVjYiAmJiBlY2IoZXJyb3IpO1xyXG4gICAgICAgIHJlamVjdChlcnJvcik7XHJcbiAgICAgIH0pO1xyXG4gIH0pO1xyXG5cclxufVxyXG5mdW5jdGlvbiBfX3NpZ25pbldpdGhUb2tlbl9fICh0b2tlbkRhdGEpIHtcclxuICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xyXG4gICAgX19jbGVhckF1dGhfXy5jYWxsKHRoaXMpO1xyXG4gICAgbGV0IGRhdGEgPSBbXTtcclxuICAgIGZvciAobGV0IG9iaiBpbiB0b2tlbkRhdGEpIHtcclxuICAgICAgICBkYXRhLnB1c2goZW5jb2RlVVJJQ29tcG9uZW50KG9iaikgKyAnPScgKyBlbmNvZGVVUklDb21wb25lbnQodG9rZW5EYXRhW29ial0pKTtcclxuICAgIH1cclxuICAgIGRhdGEgPSBkYXRhLmpvaW4oXCImXCIpO1xyXG5cclxuICAgIHRoaXMuaHR0cCh7XHJcbiAgICAgIHVybDogVVJMUy50b2tlbixcclxuICAgICAgbWV0aG9kOiAnUE9TVCcsXHJcbiAgICAgIGhlYWRlcnM6IHtcclxuICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCdcclxuICAgICAgfSxcclxuICAgICAgZGF0YTogYCR7ZGF0YX0mYXBwTmFtZT0ke2RlZmF1bHRzLmFwcE5hbWV9JmdyYW50X3R5cGU9cGFzc3dvcmRgXHJcbiAgICB9KVxyXG4gICAgLnRoZW4ocmVzcG9uc2UgPT4ge1xyXG4gICAgICBfX3NldEF1dGhfXy5jYWxsKHRoaXMsIHtcclxuICAgICAgICB0b2tlbjoge1xyXG4gICAgICAgICAgQXV0aG9yaXphdGlvbjogYEJlYXJlciAke3Jlc3BvbnNlLmRhdGEuYWNjZXNzX3Rva2VufWBcclxuICAgICAgICB9LFxyXG4gICAgICAgIGRldGFpbHM6IHJlc3BvbnNlLmRhdGFcclxuICAgICAgfSk7XHJcbiAgICAgIF9fZGlzcGF0Y2hFdmVudF9fKEVWRU5UUy5TSUdOSU4pO1xyXG4gICAgICBpZiAoZGVmYXVsdHMucnVuU29ja2V0KSB7XHJcbiAgICAgICAgdGhpcy5zb2NrZXQuY29ubmVjdCh0aGlzLnN0b3JhZ2UuZ2V0KCd1c2VyJykudG9rZW4uQXV0aG9yaXphdGlvbiwgZGVmYXVsdHMuYW5vbnltb3VzVG9rZW4sIGRlZmF1bHRzLmFwcE5hbWUpO1xyXG4gICAgICB9XHJcbiAgICAgIHJlc29sdmUocmVzcG9uc2UpO1xyXG4gICAgfSlcclxuICAgIC5jYXRjaChlcnJvciA9PiB7XHJcbiAgICAgIHJlamVjdChlcnJvcik7XHJcbiAgICB9KTtcclxuICB9KTtcclxufVxyXG5leHBvcnQgZnVuY3Rpb24gcmVxdWVzdFJlc2V0UGFzc3dvcmQgKHVzZXJuYW1lLCBzY2IsIGVjYikge1xyXG4gIHJldHVybiB0aGlzLmh0dHAoe1xyXG4gICAgdXJsOiBVUkxTLnJlcXVlc3RSZXNldFBhc3N3b3JkLFxyXG4gICAgbWV0aG9kOiAnUE9TVCcsXHJcbiAgICBkYXRhOiB7XHJcbiAgICAgICAgYXBwTmFtZTogZGVmYXVsdHMuYXBwTmFtZSxcclxuICAgICAgICB1c2VybmFtZVxyXG4gICAgfVxyXG4gIH0sIHNjYiwgZWNiKVxyXG59XHJcbmV4cG9ydCBmdW5jdGlvbiByZXNldFBhc3N3b3JkIChuZXdQYXNzd29yZCwgcmVzZXRUb2tlbiwgc2NiLCBlY2IpIHtcclxuICByZXR1cm4gdGhpcy5odHRwKHtcclxuICAgIHVybDogVVJMUy5yZXNldFBhc3N3b3JkLFxyXG4gICAgbWV0aG9kOiAnUE9TVCcsXHJcbiAgICBkYXRhOiB7XHJcbiAgICAgICAgbmV3UGFzc3dvcmQsXHJcbiAgICAgICAgcmVzZXRUb2tlblxyXG4gICAgfVxyXG4gIH0sIHNjYiwgZWNiKVxyXG59XHJcbmV4cG9ydCBmdW5jdGlvbiBjaGFuZ2VQYXNzd29yZCAob2xkUGFzc3dvcmQsIG5ld1Bhc3N3b3JkLCBzY2IsIGVjYikge1xyXG4gIHJldHVybiB0aGlzLmh0dHAoe1xyXG4gICAgdXJsOiBVUkxTLmNoYW5nZVBhc3N3b3JkLFxyXG4gICAgbWV0aG9kOiAnUE9TVCcsXHJcbiAgICBkYXRhOiB7XHJcbiAgICAgICAgb2xkUGFzc3dvcmQsXHJcbiAgICAgICAgbmV3UGFzc3dvcmRcclxuICAgIH1cclxuICB9LCBzY2IsIGVjYilcclxufVxyXG5leHBvcnQgZnVuY3Rpb24gc2lnbm91dCAoc2NiKSB7XHJcbiAgX19jbGVhckF1dGhfXy5jYWxsKHRoaXMpO1xyXG4gIF9fZGlzcGF0Y2hFdmVudF9fKEVWRU5UUy5TSUdOT1VUKTtcclxufVxyXG5leHBvcnQgZnVuY3Rpb24gZ2V0VXNlckRldGFpbHMoKSB7XHJcbiAgcmV0dXJuIHRoaXMuc3RvcmFnZS5nZXQoJ3VzZXInKS5kZXRhaWxzO1xyXG59XHJcbiIsImltcG9ydCB7IFByb21pc2UgfSBmcm9tICdlczYtcHJvbWlzZSdcclxuaW1wb3J0IHsgVVJMUywgRVZFTlRTLCBTT0NJQUxfUFJPVklERVJTIH0gZnJvbSAnLi8uLi9jb25zdGFudHMnXHJcblxyXG5mdW5jdGlvbiBfX2VuY29kZVBhcmFtZXRlcnNfXyAoYWxsb3dlZFBhcmFtcywgcGFyYW1zKSB7XHJcbiAgbGV0IHVyaSA9ICc/JztcclxuICBmb3IgKGxldCBwYXJhbSBpbiBwYXJhbXMpIHtcclxuICAgIGlmIChhbGxvd2VkUGFyYW1zLmluZGV4T2YocGFyYW0pICE9IC0xKSB7XHJcbiAgICAgIHVyaSA9IHVyaS5jb25jYXQoYCR7cGFyYW19PSR7ZW5jb2RlVVJJKEpTT04uc3RyaW5naWZ5KHBhcmFtc1twYXJhbV0pKX1gKVxyXG4gICAgfVxyXG4gIH1cclxuICByZXR1cm4gdXJpO1xyXG59XHJcbmV4cG9ydCBmdW5jdGlvbiBnZXRMaXN0IChvYmplY3QsIHBhcmFtcywgc2NiLCBlY2IpIHtcclxuICBjb25zdCBhbGxvd2VkUGFyYW1zID0gWydwYWdlU2l6ZScsJ3BhZ2VOdW1iZXInLCdmaWx0ZXInLCdzb3J0Jywnc2VhcmNoJywnZXhjbHVkZScsJ2RlZXAnLCdyZWxhdGVkT2JqZWN0cyddO1xyXG4gIHJldHVybiB0aGlzLmh0dHAoe1xyXG4gICAgdXJsOiBgJHtVUkxTLm9iamVjdHN9LyR7b2JqZWN0fSR7X19lbmNvZGVQYXJhbWV0ZXJzX18oYWxsb3dlZFBhcmFtcywgcGFyYW1zKX1gLFxyXG4gICAgbWV0aG9kOiAnR0VUJyxcclxuICB9LCBzY2IsIGVjYilcclxufVxyXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlIChvYmplY3QsIGRhdGEsIHBhcmFtcywgc2NiLCBlY2IpIHtcclxuICBjb25zdCBhbGxvd2VkUGFyYW1zID0gWydyZXR1cm5PYmplY3QnLCdkZWVwJ107XHJcbiAgcmV0dXJuIHRoaXMuaHR0cCh7XHJcbiAgICB1cmw6IGAke1VSTFMub2JqZWN0c30vJHtvYmplY3R9JHtfX2VuY29kZVBhcmFtZXRlcnNfXyhhbGxvd2VkUGFyYW1zLCBwYXJhbXMpfWAsXHJcbiAgICBtZXRob2Q6ICdQT1NUJyxcclxuICAgIGRhdGEsXHJcbiAgfSwgc2NiLCBlY2IpXHJcbn1cclxuZXhwb3J0IGZ1bmN0aW9uIGdldE9uZSAob2JqZWN0LCBpZCwgcGFyYW1zLCBzY2IsIGVjYikge1xyXG4gIGNvbnN0IGFsbG93ZWRQYXJhbXMgPSBbJ2RlZXAnLCdleGNsdWRlJywnbGV2ZWwnXTtcclxuICByZXR1cm4gdGhpcy5odHRwKHtcclxuICAgIHVybDogYCR7VVJMUy5vYmplY3RzfS8ke29iamVjdH0vJHtpZH0ke19fZW5jb2RlUGFyYW1ldGVyc19fKGFsbG93ZWRQYXJhbXMsIHBhcmFtcyl9YCxcclxuICAgIG1ldGhvZDogJ0dFVCcsXHJcbiAgfSwgc2NiLCBlY2IpXHJcbn1cclxuZXhwb3J0IGZ1bmN0aW9uIHVwZGF0ZSAob2JqZWN0LCBpZCwgZGF0YSwgcGFyYW1zLCBzY2IsIGVjYikge1xyXG4gIGNvbnN0IGFsbG93ZWRQYXJhbXMgPSBbJ3JldHVybk9iamVjdCcsJ2RlZXAnXTtcclxuICByZXR1cm4gdGhpcy5odHRwKHtcclxuICAgIHVybDogYCR7VVJMUy5vYmplY3RzfS8ke29iamVjdH0vJHtpZH0ke19fZW5jb2RlUGFyYW1ldGVyc19fKGFsbG93ZWRQYXJhbXMsIHBhcmFtcyl9YCxcclxuICAgIG1ldGhvZDogJ1BVVCcsXHJcbiAgICBkYXRhLFxyXG4gIH0sIHNjYiwgZWNiKVxyXG59XHJcbmV4cG9ydCBmdW5jdGlvbiByZW1vdmUgKG9iamVjdCwgaWQsIHNjYiwgZWNiKSB7XHJcbiAgcmV0dXJuIHRoaXMuaHR0cCh7XHJcbiAgICB1cmw6IGAke1VSTFMub2JqZWN0c30vJHtvYmplY3R9LyR7aWR9YCxcclxuICAgIG1ldGhvZDogJ0RFTEVURScsXHJcbiAgfSwgc2NiLCBlY2IpXHJcbn1cclxuIiwiaW1wb3J0IHsgUHJvbWlzZSB9IGZyb20gJ2VzNi1wcm9taXNlJ1xuaW1wb3J0IHsgVVJMUywgRVZFTlRTLCBTT0NJQUxfUFJPVklERVJTIH0gZnJvbSAnLi8uLi9jb25zdGFudHMnXG5cbmV4cG9ydCBmdW5jdGlvbiB1cGxvYWRGaWxlKG9iamVjdE5hbWUsIGZpbGVBY3Rpb25OYW1lLCBmaWxlbmFtZSwgZmlsZWRhdGEsIHNjYiwgZWNiKSB7XHJcbiAgcmV0dXJuIHRoaXMuaHR0cCh7XHJcbiAgICB1cmw6IGAke1VSTFMub2JqZWN0c0FjdGlvbn0vJHtvYmplY3ROYW1lfT9uYW1lPSR7ZmlsZUFjdGlvbk5hbWV9YCxcclxuICAgIG1ldGhvZDogJ1BPU1QnLFxyXG4gICAgZGF0YToge1xyXG4gICAgICAgIGZpbGVuYW1lLFxyXG4gICAgICAgIGZpbGVkYXRhOiBmaWxlZGF0YS5zdWJzdHIoZmlsZWRhdGEuaW5kZXhPZignLCcpICsgMSwgZmlsZWRhdGEubGVuZ3RoKVxyXG4gICAgICB9XHJcbiAgfSwgc2NiLCBlY2IpXHJcbn1cclxuZXhwb3J0IGZ1bmN0aW9uIGRlbGV0ZUZpbGUob2JqZWN0TmFtZSwgZmlsZUFjdGlvbk5hbWUsIGZpbGVuYW1lLCBzY2IsIGVjYikge1xyXG4gIHJldHVybiB0aGlzLmh0dHAoe1xyXG4gICAgdXJsOiBgJHtVUkxTLm9iamVjdHNBY3Rpb259LyR7b2JqZWN0TmFtZX0/bmFtZT0ke2ZpbGVBY3Rpb25OYW1lfWAsXHJcbiAgICBtZXRob2Q6ICdERUxFVEUnLFxyXG4gICAgZGF0YToge1xyXG4gICAgICAgIGZpbGVuYW1lLFxyXG4gICAgICB9XHJcbiAgfSwgc2NiLCBlY2IpXHJcbn1cbiIsImltcG9ydCB7IFByb21pc2UgfSBmcm9tICdlczYtcHJvbWlzZSdcclxuXHJcbmNsYXNzIEh0dHAge1xyXG4gIGNvbnN0cnVjdG9yIChjb25maWcgPSB7fSkge1xyXG4gICAgaWYgKCF3aW5kb3cuWE1MSHR0cFJlcXVlc3QpXHJcbiAgICAgIHRocm93IG5ldyBFcnJvcignWE1MSHR0cFJlcXVlc3QgaXMgbm90IHN1cHBvcnRlZCBieSB0aGUgYnJvd3NlcicpO1xyXG5cclxuICAgIHRoaXMuY29uZmlnID0gT2JqZWN0LmFzc2lnbih7dXJsOiAnLycsIG1ldGhvZDogJ0dFVCcsIGhlYWRlcnM6IHt9fSwgY29uZmlnKVxyXG4gIH1cclxuICBfZ2V0SGVhZGVycyAoaGVhZGVycykge1xyXG4gICAgcmV0dXJuIGhlYWRlcnMuc3BsaXQoJ1xcclxcbicpLmZpbHRlcihoZWFkZXIgPT4gaGVhZGVyKS5tYXAoaGVhZGVyID0+IHtcclxuICAgICAgbGV0IGpoZWFkZXIgPSB7fVxyXG4gICAgICBsZXQgcGFydHMgPSBoZWFkZXIuc3BsaXQoJzonKTtcclxuICAgICAgamhlYWRlcltwYXJ0c1swXV0gPSBwYXJ0c1sxXVxyXG4gICAgICByZXR1cm4gamhlYWRlcjtcclxuICAgIH0pO1xyXG4gIH1cclxuICBfZ2V0RGF0YSAodHlwZSwgZGF0YSkge1xyXG4gICAgaWYgKCF0eXBlKSB7XHJcbiAgICAgIHJldHVybiBkYXRhO1xyXG4gICAgfVxyXG4gICAgZWxzZSBpZiAodHlwZS5pbmRleE9mKCdqc29uJykgPT09IC0xKSB7XHJcbiAgICAgIHJldHVybiBkYXRhO1xyXG4gICAgfVxyXG4gICAgZWxzZSB7XHJcbiAgICAgIHJldHVybiBKU09OLnBhcnNlKGRhdGEpO1xyXG4gICAgfVxyXG4gIH1cclxuICBfY3JlYXRlUmVzcG9uc2UgKHJlcSkge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgc3RhdHVzOiByZXEuc3RhdHVzLFxyXG4gICAgICBzdGF0dXNUZXh0OiByZXEuc3RhdHVzVGV4dCxcclxuICAgICAgaGVhZGVyczogdGhpcy5fZ2V0SGVhZGVycyhyZXEuZ2V0QWxsUmVzcG9uc2VIZWFkZXJzKCkpLFxyXG4gICAgICBkYXRhOiB0aGlzLl9nZXREYXRhKHJlcS5nZXRSZXNwb25zZUhlYWRlcihcIkNvbnRlbnQtVHlwZVwiKSwgcmVxLnJlc3BvbnNlVGV4dClcclxuICAgIH1cclxuICB9XHJcbiAgX3NldEhlYWRlcnMgKHJlcSwgaGVhZGVycykge1xyXG4gICAgZm9yIChsZXQgaGVhZGVyIGluIGhlYWRlcnMpIHtcclxuICAgICAgcmVxLnNldFJlcXVlc3RIZWFkZXIoaGVhZGVyLCBoZWFkZXJzW2hlYWRlcl0pO1xyXG4gICAgfVxyXG4gIH1cclxuICBfc2V0RGF0YSAocmVxLCBkYXRhKSB7XHJcbiAgICBpZiAoIWRhdGEpIHtcclxuICAgICAgcmVxLnNlbmQoKTtcclxuICAgIH1cclxuICAgIGVsc2UgaWYgKHR5cGVvZiBkYXRhICE9ICdvYmplY3QnKSB7XHJcbiAgICAgIHJlcS5zZW5kKGRhdGEpO1xyXG4gICAgfVxyXG4gICAgZWxzZSB7XHJcbiAgICAgIHJlcS5zZXRSZXF1ZXN0SGVhZGVyKFwiQ29udGVudC1UeXBlXCIsIFwiYXBwbGljYXRpb24vanNvbjtjaGFyc2V0PVVURi04XCIpO1xyXG4gICAgICByZXEuc2VuZChKU09OLnN0cmluZ2lmeShkYXRhKSk7XHJcbiAgICB9XHJcbiAgfVxyXG4gIHJlcXVlc3QgKGNmZywgc2NiICwgZWNiKSB7XHJcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xyXG4gICAgICBsZXQgcmVxID0gbmV3IFhNTEh0dHBSZXF1ZXN0KCk7XHJcbiAgICAgIGxldCBjb25maWcgPSBPYmplY3QuYXNzaWduKHt9LCB0aGlzLmNvbmZpZywgY2ZnKTtcclxuICAgICAgY29uZmlnLmludGVyY2VwdG9ycy5yZXF1ZXN0ICYmIGNvbmZpZy5pbnRlcmNlcHRvcnMucmVxdWVzdChjb25maWcpO1xyXG5cclxuICAgICAgcmVxLm9wZW4oY29uZmlnLm1ldGhvZCwgYCR7Y29uZmlnLmJhc2VVUkwgPyBjb25maWcuYmFzZVVSTCsnLycgOiAnJ30ke2NvbmZpZy51cmx9YCwgdHJ1ZSk7XHJcbiAgICAgIHJlcS5vbnJlYWR5c3RhdGVjaGFuZ2UgPSAoKSA9PiB7XHJcbiAgICAgICAgaWYgKHJlcS5yZWFkeVN0YXRlID09IFhNTEh0dHBSZXF1ZXN0LkRPTkUpIHtcclxuICAgICAgICAgIGxldCByZXMgPSB0aGlzLl9jcmVhdGVSZXNwb25zZShyZXEpO1xyXG4gICAgICAgICAgaWYocmVzLnN0YXR1cyA9PT0gMjAwKXtcclxuICAgICAgICAgICAgY29uZmlnLmludGVyY2VwdG9ycy5yZXNwb25zZSAmJiBjb25maWcuaW50ZXJjZXB0b3JzLnJlc3BvbnNlLmNhbGwodGhpcywgcmVzLCBjb25maWcsIHJlc29sdmUsIHJlamVjdCwgc2NiLCBlY2IpO1xyXG4gICAgICAgICAgICBzY2IgJiYgc2NiKHJlcyk7XHJcbiAgICAgICAgICAgIHJlc29sdmUocmVzKTtcclxuICAgICAgICAgIH1cclxuICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICBjb25maWcuaW50ZXJjZXB0b3JzLnJlc3BvbnNlRXJyb3IgJiYgY29uZmlnLmludGVyY2VwdG9ycy5yZXNwb25zZUVycm9yLmNhbGwodGhpcywgcmVzLCBjb25maWcsIHJlc29sdmUsIHJlamVjdCwgc2NiLCBlY2IpO1xyXG4gICAgICAgICAgICBlY2IgJiYgZWNiKHJlcyk7XHJcbiAgICAgICAgICAgIHJlamVjdChyZXMpO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgICB0aGlzLl9zZXRIZWFkZXJzKHJlcSwgY29uZmlnLmhlYWRlcnMpO1xyXG4gICAgICB0aGlzLl9zZXREYXRhKHJlcSwgY29uZmlnLmRhdGEpO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxufVxyXG5cclxuZnVuY3Rpb24gY3JlYXRlSW5zdGFuY2UoY29uZmlnID0ge30pIHtcclxuICB2YXIgY29udGV4dCA9IG5ldyBIdHRwKGNvbmZpZyk7XHJcbiAgdmFyIGluc3RhbmNlID0gKC4uLmFyZ3MpID0+IEh0dHAucHJvdG90eXBlLnJlcXVlc3QuYXBwbHkoY29udGV4dCwgYXJncyk7XHJcbiAgaW5zdGFuY2UuY29uZmlnID0gY29udGV4dC5jb25maWc7XHJcbiAgcmV0dXJuIGluc3RhbmNlO1xyXG59XHJcbmV4cG9ydCBkZWZhdWx0IGNyZWF0ZUluc3RhbmNlO1xyXG5cclxuLy8gdmFyIGNvbnRleHQgPSBuZXcgSHR0cChjb25maWcpO1xyXG4vLyB2YXIgaW5zdGFuY2UgPSAoLi4uYXJncykgPT4gaHR0cENsaWVudC5wcm90b3R5cGUucmVxdWVzdC5hcHBseShjb250ZXh0LCBhcmdzKTtcclxuLy8gaW5zdGFuY2UuY29uZmlnID0gY29udGV4dC5jb25maWc7XHJcbi8vIGV4cG9ydCBkZWZhdWx0IGluc3RhbmNlO1xyXG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBTb2NrZXQge1xyXG4gIGNvbnN0cnVjdG9yICh1cmwpIHtcclxuICAgIGlmICghd2luZG93LmlvKVxyXG4gICAgICBjb25zb2xlLndhcm4oJ1NvY2tldElPIGlzIG5vdCBpbmNsdWRlZCcpO1xyXG4gICAgdGhpcy51cmwgPSB1cmw7XHJcbiAgICB0aGlzLnNvY2tldCA9IGlvLmNvbm5lY3QodGhpcy51cmwsIHsnZm9yY2VOZXcnOnRydWUgfSk7XHJcbiAgICB0aGlzLm9uQXJyID0gW107XHJcbiAgfVxyXG4gIG9uIChldmVudE5hbWUsIGNhbGxiYWNrKSB7XHJcbiAgICB0aGlzLm9uQXJyLnB1c2goe2V2ZW50TmFtZSwgY2FsbGJhY2t9KTtcclxuICB9XHJcbiAgY29ubmVjdCAodG9rZW4sIGFub255bW91c1Rva2VuLCBhcHBOYW1lKSB7XHJcbiAgICB0aGlzLnNvY2tldCA9IGlvLmNvbm5lY3QodGhpcy51cmwsIHsnZm9yY2VOZXcnOnRydWUgfSk7XHJcblxyXG4gICAgdGhpcy5zb2NrZXQub24oJ2Nvbm5lY3QnLCAoKSA9PiB7XHJcbiAgICAgIGNvbnNvbGUuaW5mbyhgdHJ5aW5nIHRvIGVzdGFibGlzaCBhIHNvY2tldCBjb25uZWN0aW9uIHRvICR7YXBwTmFtZX0gLi4uYCk7XHJcbiAgICAgIHRoaXMuc29ja2V0LmVtaXQoXCJsb2dpblwiLCB0b2tlbiwgYW5vbnltb3VzVG9rZW4sIGFwcE5hbWUpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgdGhpcy5zb2NrZXQub24oJ2F1dGhvcml6ZWQnLCAoKSA9PiB7XHJcbiAgICAgIGNvbnNvbGUuaW5mbyhgc29ja2V0IGNvbm5lY3RlZGApO1xyXG4gICAgICB0aGlzLm9uQXJyLmZvckVhY2goZm4gPT4ge1xyXG4gICAgICAgIHRoaXMuc29ja2V0Lm9uKGZuLmV2ZW50TmFtZSwgZGF0YSA9PiB7XHJcbiAgICAgICAgICBmbi5jYWxsYmFjayhkYXRhKTtcclxuICAgICAgICB9KTtcclxuICAgICAgfSk7XHJcbiAgICB9KTtcclxuXHJcbiAgICB0aGlzLnNvY2tldC5vbignbm90QXV0aG9yaXplZCcsICgpID0+IHtcclxuICAgICAgc2V0VGltZW91dCgoKSA9PiB0aGlzLmRpc2Nvbm5lY3QoKSwgMTAwMCk7XHJcbiAgICB9KTtcclxuXHJcbiAgICB0aGlzLnNvY2tldC5vbignZGlzY29ubmVjdCcsICgpID0+IHtcclxuICAgICAgY29uc29sZS5pbmZvKGBzb2NrZXQgZGlzY29ubmVjdGApO1xyXG4gICAgfSk7XHJcblxyXG4gICAgdGhpcy5zb2NrZXQub24oJ3JlY29ubmVjdGluZycsICgpID0+IHtcclxuICAgICAgY29uc29sZS5pbmZvKGBzb2NrZXQgcmVjb25uZWN0aW5nYCk7XHJcbiAgICB9KTtcclxuXHJcbiAgICB0aGlzLnNvY2tldC5vbignZXJyb3InLCAoZXJyb3IpID0+IHtcclxuICAgICAgY29uc29sZS53YXJuKGBlcnJvcjogJHtlcnJvcn1gKTtcclxuICAgIH0pO1xyXG4gIH1cclxuICBkaXNjb25uZWN0ICgpIHtcclxuICAgIGlmICh0aGlzLnNvY2tldCkge1xyXG4gICAgICB0aGlzLnNvY2tldC5jbG9zZSgpO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBTdG9yYWdlIHtcclxuICBjb25zdHJ1Y3RvciAodHlwZSwgcHJlZml4ID0gJycpIHtcclxuICAgIGlmICghd2luZG93W3R5cGUgKyAnU3RvcmFnZSddKVxyXG4gICAgICB0aHJvdyBuZXcgRXJyb3IodHlwZSArICdTdG9yYWdlIGlzIG5vdCBzdXBwb3J0ZWQgYnkgdGhlIGJyb3dzZXInKTtcclxuICAgIHRoaXMucHJlZml4ID0gcHJlZml4O1xyXG4gICAgdGhpcy5kZWxpbWl0ZXIgPSAnX19fX19fX19fXyc7XHJcbiAgICB0aGlzLnN0b3JhZ2UgPSB3aW5kb3dbdHlwZSArICdTdG9yYWdlJ107XHJcbiAgfVxyXG4gIGdldCAoa2V5KSB7XHJcbiAgICBsZXQgaXRlbSA9IHRoaXMuc3RvcmFnZS5nZXRJdGVtKGAke3RoaXMucHJlZml4fSR7a2V5fWApO1xyXG4gICAgaWYgKCFpdGVtKSB7XHJcbiAgICAgIHJldHVybiBpdGVtXHJcbiAgICB9XHJcbiAgICBlbHNlIHtcbiAgICAgIGxldCBbdHlwZSwgdmFsXSA9IGl0ZW0uc3BsaXQodGhpcy5kZWxpbWl0ZXIpO1xuICAgICAgaWYgKHR5cGUgIT0gJ0pTT04nKSB7XG4gICAgICAgIHJldHVybiB2YWw7XG4gICAgICB9XG4gICAgICBlbHNlIHtcbiAgICAgICAgcmV0dXJuIEpTT04ucGFyc2UodmFsKTtcbiAgICAgIH1cbiAgICB9XHJcbiAgfVxyXG4gIHNldCAoa2V5LCB2YWwpIHtcclxuICAgIGlmICh0eXBlb2YgdmFsICE9ICdvYmplY3QnKSB7XHJcbiAgICAgIHRoaXMuc3RvcmFnZS5zZXRJdGVtKGAke3RoaXMucHJlZml4fSR7a2V5fWAsIGBTVFJJTkcke3RoaXMuZGVsaW1pdGVyfSR7dmFsfWApO1xyXG4gICAgfVxyXG4gICAgZWxzZSB7XHJcbiAgICAgIHRoaXMuc3RvcmFnZS5zZXRJdGVtKGAke3RoaXMucHJlZml4fSR7a2V5fWAsIGBKU09OJHt0aGlzLmRlbGltaXRlcn0ke0pTT04uc3RyaW5naWZ5KHZhbCl9YCk7XHJcbiAgICB9XHJcbiAgfVxyXG4gIHJlbW92ZSAoa2V5KSB7XHJcbiAgICB0aGlzLnN0b3JhZ2UucmVtb3ZlSXRlbShgJHt0aGlzLnByZWZpeH0ke2tleX1gKTtcclxuICB9XHJcbiAgY2xlYXIoKSB7XHJcbiAgICBmb3IodmFyIGkgPTA7IGkgPCB0aGlzLnN0b3JhZ2UubGVuZ3RoOyBpKyspe1xyXG4gICAgICAgaWYodGhpcy5zdG9yYWdlLmdldEl0ZW0odGhpcy5zdG9yYWdlLmtleShpKSkuaW5kZXhPZih0aGlzLnByZWZpeCkgIT0gLTEpXHJcbiAgICAgICAgdGhpcy5yZW1vdmUodGhpcy5zdG9yYWdlLmtleShpKSlcclxuICAgIH1cclxuICB9XHJcbn1cclxuIl19\n"]}