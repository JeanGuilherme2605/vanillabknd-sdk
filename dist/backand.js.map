{"version":3,"sources":["backand.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","process","global","factory","define","amd","ES6Promise","this","objectOrFunction","x","isFunction","setScheduler","scheduleFn","customSchedulerFn","setAsap","asapFn","asap","useNextTick","nextTick","flush","useVertxTimer","vertxNext","useSetTimeout","useMutationObserver","iterations","observer","BrowserMutationObserver","node","document","createTextNode","observe","characterData","data","useMessageChannel","channel","MessageChannel","port1","onmessage","port2","postMessage","globalSetTimeout","setTimeout","len","callback","queue","arg","undefined","attemptVertx","vertx","runOnLoop","runOnContext","then","onFulfillment","onRejection","_arguments","arguments","parent","child","constructor","noop","PROMISE_ID","makePromise","_state","invokeCallback","_result","subscribe","resolve","object","Constructor","promise","_resolve","selfFulfillment","TypeError","cannotReturnOwn","getThen","error","GET_THEN_ERROR","tryThen","value","fulfillmentHandler","rejectionHandler","handleForeignThenable","thenable","sealed","fulfill","reason","_reject","_label","handleOwnThenable","FULFILLED","REJECTED","handleMaybeThenable","maybeThenable","then$$","publishRejection","_onerror","publish","PENDING","_subscribers","subscribers","settled","detail","ErrorObject","tryCatch","TRY_CATCH_ERROR","hasCallback","succeeded","failed","initializePromise","resolver","nextId","id","Enumerator","input","_instanceConstructor","isArray","_input","_remaining","Array","_enumerate","validationError","all","entries","race","reject","_","needsResolver","needsNew","Promise","polyfill","local","self","Function","P","promiseToString","Object","prototype","toString","cast","_isArray","scheduleFlush","browserWindow","window","browserGlobal","MutationObserver","WebKitMutationObserver","isNode","isWorker","Uint8ClampedArray","importScripts","Math","random","substring","_eachEntry","entry","c","resolve$$","_then","_settledAt","_willSettleAt","state","enumerator","_setScheduler","_setAsap","_asap","catch","_process","2","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","runClearTimeout","marker","cachedClearTimeout","clearTimeout","cleanUpNextTick","draining","currentQueue","concat","queueIndex","drainQueue","timeout","run","Item","array","args","push","apply","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","binding","name","cwd","chdir","dir","umask","3","defineProperty","EVENTS","SIGNIN","SIGNOUT","SIGNUP","URLS","token","signup","requestResetPassword","resetPassword","changePassword","objects","objectsAction","SOCIAL_PROVIDERS","github","label","url","css","backgroundColor","google","facebook","twitter","4","default","appName","anonymousToken","signUpToken","apiUrl","storagePrefix","storageType","manageRefreshToken","runSigninAfterSignup","runSocket","socketUrl","isMobile","5","filter","create","fieldName","operator","operators","numeric","equals","notEquals","greaterThan","greaterThanOrEqualsTo","lessThan","lessThanOrEqualsTo","empty","notEmpty","date","text","startsWith","endsWith","contains","notContains","boolean","relation","in","sort","order","orders","asc","desc","exclude","options","metadata","totalRows","6","_interopRequireWildcard","obj","__esModule","newObj","key","hasOwnProperty","_interopRequireDefault","_extends","assign","target","source","_defaults","_defaults2","_constants","constants","_helpers","helpers","_storage","_storage2","_http","_http2","_socket","_socket2","_auth","auth","_crud","crud","_files","files","initiate","config","storage","http","baseURL","socket","scope","service","fn","bind","__initiate__","get","Authorization","connect","./constants","./defaults","./helpers","./services/auth","./services/crud","./services/files","./utils/http","./utils/socket","./utils/storage","7","__setAuth__","__generateFakeResponse__","status","statusText","headers","__dispatchEvent__","event","createEvent","initEvent","eventName","dispatchEvent","createEventObject","eventType","fireEvent","__clearAuth__","remove","set","useAnonymousAuth","scb","_this","AnonymousToken","details","username","signin","password","ecb","_this2","method","Content-Type","response","access_token","email","confirmPassword","firstName","lastName","_this3","SignUpToken","__signinWithToken__","accessToken","__getSocialUrl__","providerName","isSignup","isAutoSignUp","provider","action","autoSignUpParam","__checkSocialAuthWindowForData__","socialAuthWindow","timer","setInterval","closed","clearInterval","locationCopy","location","dataMatch","exec","href","JSON","parse","decodeURIComponent","replace","opener","stringify","origin","__socialAuth__","isSignUp","spec","_this4","windowUrl","open","focus","addEventListener","originalEvent","_generateFakeResponse","removeEventListener","close","res","socialSignin","_this5","socialSignup","_this6","_socialAuth","tokenData","_this7","encodeURIComponent","join","newPassword","resetToken","oldPassword","signout","getUserDetails","./../constants","./../defaults","8","__encodeParameters__","allowedParams","params","uri","param","indexOf","encodeURI","getList","getOne","update","9","uploadFile","objectName","fileActionName","filename","filedata","substr","deleteFile","10","_classCallCheck","instance","createInstance","context","Http","_len","_key","request","_typeof","Symbol","iterator","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","protoProps","staticProps","_es6Promise","XMLHttpRequest","split","header","map","jheader","parts","type","req","_getHeaders","getAllResponseHeaders","_getData","getResponseHeader","responseText","setRequestHeader","send","cfg","onreadystatechange","readyState","DONE","_createResponse","_setHeaders","_setData","es6-promise","11","Socket","io","console","warn","forceNew","info","disconnect","slice","_arguments2","12","_slicedToArray","sliceIterator","arr","_arr","_n","_d","_e","_s","_i","next","done","err","Storage","prefix","delimiter","item","getItem","_item$split","_item$split2","val","setItem","removeItem"],"mappings":"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","file":"backand.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n(function (process,global){\n/*!\n * @overview es6-promise - a tiny implementation of Promises/A+.\n * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)\n * @license   Licensed under MIT license\n *            See https://raw.githubusercontent.com/stefanpenner/es6-promise/master/LICENSE\n * @version   4.0.5\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global.ES6Promise = factory());\n}(this, (function () { 'use strict';\n\nfunction objectOrFunction(x) {\n  return typeof x === 'function' || typeof x === 'object' && x !== null;\n}\n\nfunction isFunction(x) {\n  return typeof x === 'function';\n}\n\nvar _isArray = undefined;\nif (!Array.isArray) {\n  _isArray = function (x) {\n    return Object.prototype.toString.call(x) === '[object Array]';\n  };\n} else {\n  _isArray = Array.isArray;\n}\n\nvar isArray = _isArray;\n\nvar len = 0;\nvar vertxNext = undefined;\nvar customSchedulerFn = undefined;\n\nvar asap = function asap(callback, arg) {\n  queue[len] = callback;\n  queue[len + 1] = arg;\n  len += 2;\n  if (len === 2) {\n    // If len is 2, that means that we need to schedule an async flush.\n    // If additional callbacks are queued before the queue is flushed, they\n    // will be processed by this flush that we are scheduling.\n    if (customSchedulerFn) {\n      customSchedulerFn(flush);\n    } else {\n      scheduleFlush();\n    }\n  }\n};\n\nfunction setScheduler(scheduleFn) {\n  customSchedulerFn = scheduleFn;\n}\n\nfunction setAsap(asapFn) {\n  asap = asapFn;\n}\n\nvar browserWindow = typeof window !== 'undefined' ? window : undefined;\nvar browserGlobal = browserWindow || {};\nvar BrowserMutationObserver = browserGlobal.MutationObserver || browserGlobal.WebKitMutationObserver;\nvar isNode = typeof self === 'undefined' && typeof process !== 'undefined' && ({}).toString.call(process) === '[object process]';\n\n// test for web worker but not in IE10\nvar isWorker = typeof Uint8ClampedArray !== 'undefined' && typeof importScripts !== 'undefined' && typeof MessageChannel !== 'undefined';\n\n// node\nfunction useNextTick() {\n  // node version 0.10.x displays a deprecation warning when nextTick is used recursively\n  // see https://github.com/cujojs/when/issues/410 for details\n  return function () {\n    return process.nextTick(flush);\n  };\n}\n\n// vertx\nfunction useVertxTimer() {\n  if (typeof vertxNext !== 'undefined') {\n    return function () {\n      vertxNext(flush);\n    };\n  }\n\n  return useSetTimeout();\n}\n\nfunction useMutationObserver() {\n  var iterations = 0;\n  var observer = new BrowserMutationObserver(flush);\n  var node = document.createTextNode('');\n  observer.observe(node, { characterData: true });\n\n  return function () {\n    node.data = iterations = ++iterations % 2;\n  };\n}\n\n// web worker\nfunction useMessageChannel() {\n  var channel = new MessageChannel();\n  channel.port1.onmessage = flush;\n  return function () {\n    return channel.port2.postMessage(0);\n  };\n}\n\nfunction useSetTimeout() {\n  // Store setTimeout reference so es6-promise will be unaffected by\n  // other code modifying setTimeout (like sinon.useFakeTimers())\n  var globalSetTimeout = setTimeout;\n  return function () {\n    return globalSetTimeout(flush, 1);\n  };\n}\n\nvar queue = new Array(1000);\nfunction flush() {\n  for (var i = 0; i < len; i += 2) {\n    var callback = queue[i];\n    var arg = queue[i + 1];\n\n    callback(arg);\n\n    queue[i] = undefined;\n    queue[i + 1] = undefined;\n  }\n\n  len = 0;\n}\n\nfunction attemptVertx() {\n  try {\n    var r = require;\n    var vertx = r('vertx');\n    vertxNext = vertx.runOnLoop || vertx.runOnContext;\n    return useVertxTimer();\n  } catch (e) {\n    return useSetTimeout();\n  }\n}\n\nvar scheduleFlush = undefined;\n// Decide what async method to use to triggering processing of queued callbacks:\nif (isNode) {\n  scheduleFlush = useNextTick();\n} else if (BrowserMutationObserver) {\n  scheduleFlush = useMutationObserver();\n} else if (isWorker) {\n  scheduleFlush = useMessageChannel();\n} else if (browserWindow === undefined && typeof require === 'function') {\n  scheduleFlush = attemptVertx();\n} else {\n  scheduleFlush = useSetTimeout();\n}\n\nfunction then(onFulfillment, onRejection) {\n  var _arguments = arguments;\n\n  var parent = this;\n\n  var child = new this.constructor(noop);\n\n  if (child[PROMISE_ID] === undefined) {\n    makePromise(child);\n  }\n\n  var _state = parent._state;\n\n  if (_state) {\n    (function () {\n      var callback = _arguments[_state - 1];\n      asap(function () {\n        return invokeCallback(_state, child, callback, parent._result);\n      });\n    })();\n  } else {\n    subscribe(parent, child, onFulfillment, onRejection);\n  }\n\n  return child;\n}\n\n/**\n  `Promise.resolve` returns a promise that will become resolved with the\n  passed `value`. It is shorthand for the following:\n\n  ```javascript\n  let promise = new Promise(function(resolve, reject){\n    resolve(1);\n  });\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  let promise = Promise.resolve(1);\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  @method resolve\n  @static\n  @param {Any} value value that the returned promise will be resolved with\n  Useful for tooling.\n  @return {Promise} a promise that will become fulfilled with the given\n  `value`\n*/\nfunction resolve(object) {\n  /*jshint validthis:true */\n  var Constructor = this;\n\n  if (object && typeof object === 'object' && object.constructor === Constructor) {\n    return object;\n  }\n\n  var promise = new Constructor(noop);\n  _resolve(promise, object);\n  return promise;\n}\n\nvar PROMISE_ID = Math.random().toString(36).substring(16);\n\nfunction noop() {}\n\nvar PENDING = void 0;\nvar FULFILLED = 1;\nvar REJECTED = 2;\n\nvar GET_THEN_ERROR = new ErrorObject();\n\nfunction selfFulfillment() {\n  return new TypeError(\"You cannot resolve a promise with itself\");\n}\n\nfunction cannotReturnOwn() {\n  return new TypeError('A promises callback cannot return that same promise.');\n}\n\nfunction getThen(promise) {\n  try {\n    return promise.then;\n  } catch (error) {\n    GET_THEN_ERROR.error = error;\n    return GET_THEN_ERROR;\n  }\n}\n\nfunction tryThen(then, value, fulfillmentHandler, rejectionHandler) {\n  try {\n    then.call(value, fulfillmentHandler, rejectionHandler);\n  } catch (e) {\n    return e;\n  }\n}\n\nfunction handleForeignThenable(promise, thenable, then) {\n  asap(function (promise) {\n    var sealed = false;\n    var error = tryThen(then, thenable, function (value) {\n      if (sealed) {\n        return;\n      }\n      sealed = true;\n      if (thenable !== value) {\n        _resolve(promise, value);\n      } else {\n        fulfill(promise, value);\n      }\n    }, function (reason) {\n      if (sealed) {\n        return;\n      }\n      sealed = true;\n\n      _reject(promise, reason);\n    }, 'Settle: ' + (promise._label || ' unknown promise'));\n\n    if (!sealed && error) {\n      sealed = true;\n      _reject(promise, error);\n    }\n  }, promise);\n}\n\nfunction handleOwnThenable(promise, thenable) {\n  if (thenable._state === FULFILLED) {\n    fulfill(promise, thenable._result);\n  } else if (thenable._state === REJECTED) {\n    _reject(promise, thenable._result);\n  } else {\n    subscribe(thenable, undefined, function (value) {\n      return _resolve(promise, value);\n    }, function (reason) {\n      return _reject(promise, reason);\n    });\n  }\n}\n\nfunction handleMaybeThenable(promise, maybeThenable, then$$) {\n  if (maybeThenable.constructor === promise.constructor && then$$ === then && maybeThenable.constructor.resolve === resolve) {\n    handleOwnThenable(promise, maybeThenable);\n  } else {\n    if (then$$ === GET_THEN_ERROR) {\n      _reject(promise, GET_THEN_ERROR.error);\n    } else if (then$$ === undefined) {\n      fulfill(promise, maybeThenable);\n    } else if (isFunction(then$$)) {\n      handleForeignThenable(promise, maybeThenable, then$$);\n    } else {\n      fulfill(promise, maybeThenable);\n    }\n  }\n}\n\nfunction _resolve(promise, value) {\n  if (promise === value) {\n    _reject(promise, selfFulfillment());\n  } else if (objectOrFunction(value)) {\n    handleMaybeThenable(promise, value, getThen(value));\n  } else {\n    fulfill(promise, value);\n  }\n}\n\nfunction publishRejection(promise) {\n  if (promise._onerror) {\n    promise._onerror(promise._result);\n  }\n\n  publish(promise);\n}\n\nfunction fulfill(promise, value) {\n  if (promise._state !== PENDING) {\n    return;\n  }\n\n  promise._result = value;\n  promise._state = FULFILLED;\n\n  if (promise._subscribers.length !== 0) {\n    asap(publish, promise);\n  }\n}\n\nfunction _reject(promise, reason) {\n  if (promise._state !== PENDING) {\n    return;\n  }\n  promise._state = REJECTED;\n  promise._result = reason;\n\n  asap(publishRejection, promise);\n}\n\nfunction subscribe(parent, child, onFulfillment, onRejection) {\n  var _subscribers = parent._subscribers;\n  var length = _subscribers.length;\n\n  parent._onerror = null;\n\n  _subscribers[length] = child;\n  _subscribers[length + FULFILLED] = onFulfillment;\n  _subscribers[length + REJECTED] = onRejection;\n\n  if (length === 0 && parent._state) {\n    asap(publish, parent);\n  }\n}\n\nfunction publish(promise) {\n  var subscribers = promise._subscribers;\n  var settled = promise._state;\n\n  if (subscribers.length === 0) {\n    return;\n  }\n\n  var child = undefined,\n      callback = undefined,\n      detail = promise._result;\n\n  for (var i = 0; i < subscribers.length; i += 3) {\n    child = subscribers[i];\n    callback = subscribers[i + settled];\n\n    if (child) {\n      invokeCallback(settled, child, callback, detail);\n    } else {\n      callback(detail);\n    }\n  }\n\n  promise._subscribers.length = 0;\n}\n\nfunction ErrorObject() {\n  this.error = null;\n}\n\nvar TRY_CATCH_ERROR = new ErrorObject();\n\nfunction tryCatch(callback, detail) {\n  try {\n    return callback(detail);\n  } catch (e) {\n    TRY_CATCH_ERROR.error = e;\n    return TRY_CATCH_ERROR;\n  }\n}\n\nfunction invokeCallback(settled, promise, callback, detail) {\n  var hasCallback = isFunction(callback),\n      value = undefined,\n      error = undefined,\n      succeeded = undefined,\n      failed = undefined;\n\n  if (hasCallback) {\n    value = tryCatch(callback, detail);\n\n    if (value === TRY_CATCH_ERROR) {\n      failed = true;\n      error = value.error;\n      value = null;\n    } else {\n      succeeded = true;\n    }\n\n    if (promise === value) {\n      _reject(promise, cannotReturnOwn());\n      return;\n    }\n  } else {\n    value = detail;\n    succeeded = true;\n  }\n\n  if (promise._state !== PENDING) {\n    // noop\n  } else if (hasCallback && succeeded) {\n      _resolve(promise, value);\n    } else if (failed) {\n      _reject(promise, error);\n    } else if (settled === FULFILLED) {\n      fulfill(promise, value);\n    } else if (settled === REJECTED) {\n      _reject(promise, value);\n    }\n}\n\nfunction initializePromise(promise, resolver) {\n  try {\n    resolver(function resolvePromise(value) {\n      _resolve(promise, value);\n    }, function rejectPromise(reason) {\n      _reject(promise, reason);\n    });\n  } catch (e) {\n    _reject(promise, e);\n  }\n}\n\nvar id = 0;\nfunction nextId() {\n  return id++;\n}\n\nfunction makePromise(promise) {\n  promise[PROMISE_ID] = id++;\n  promise._state = undefined;\n  promise._result = undefined;\n  promise._subscribers = [];\n}\n\nfunction Enumerator(Constructor, input) {\n  this._instanceConstructor = Constructor;\n  this.promise = new Constructor(noop);\n\n  if (!this.promise[PROMISE_ID]) {\n    makePromise(this.promise);\n  }\n\n  if (isArray(input)) {\n    this._input = input;\n    this.length = input.length;\n    this._remaining = input.length;\n\n    this._result = new Array(this.length);\n\n    if (this.length === 0) {\n      fulfill(this.promise, this._result);\n    } else {\n      this.length = this.length || 0;\n      this._enumerate();\n      if (this._remaining === 0) {\n        fulfill(this.promise, this._result);\n      }\n    }\n  } else {\n    _reject(this.promise, validationError());\n  }\n}\n\nfunction validationError() {\n  return new Error('Array Methods must be provided an Array');\n};\n\nEnumerator.prototype._enumerate = function () {\n  var length = this.length;\n  var _input = this._input;\n\n  for (var i = 0; this._state === PENDING && i < length; i++) {\n    this._eachEntry(_input[i], i);\n  }\n};\n\nEnumerator.prototype._eachEntry = function (entry, i) {\n  var c = this._instanceConstructor;\n  var resolve$$ = c.resolve;\n\n  if (resolve$$ === resolve) {\n    var _then = getThen(entry);\n\n    if (_then === then && entry._state !== PENDING) {\n      this._settledAt(entry._state, i, entry._result);\n    } else if (typeof _then !== 'function') {\n      this._remaining--;\n      this._result[i] = entry;\n    } else if (c === Promise) {\n      var promise = new c(noop);\n      handleMaybeThenable(promise, entry, _then);\n      this._willSettleAt(promise, i);\n    } else {\n      this._willSettleAt(new c(function (resolve$$) {\n        return resolve$$(entry);\n      }), i);\n    }\n  } else {\n    this._willSettleAt(resolve$$(entry), i);\n  }\n};\n\nEnumerator.prototype._settledAt = function (state, i, value) {\n  var promise = this.promise;\n\n  if (promise._state === PENDING) {\n    this._remaining--;\n\n    if (state === REJECTED) {\n      _reject(promise, value);\n    } else {\n      this._result[i] = value;\n    }\n  }\n\n  if (this._remaining === 0) {\n    fulfill(promise, this._result);\n  }\n};\n\nEnumerator.prototype._willSettleAt = function (promise, i) {\n  var enumerator = this;\n\n  subscribe(promise, undefined, function (value) {\n    return enumerator._settledAt(FULFILLED, i, value);\n  }, function (reason) {\n    return enumerator._settledAt(REJECTED, i, reason);\n  });\n};\n\n/**\n  `Promise.all` accepts an array of promises, and returns a new promise which\n  is fulfilled with an array of fulfillment values for the passed promises, or\n  rejected with the reason of the first passed promise to be rejected. It casts all\n  elements of the passed iterable to promises as it runs this algorithm.\n\n  Example:\n\n  ```javascript\n  let promise1 = resolve(1);\n  let promise2 = resolve(2);\n  let promise3 = resolve(3);\n  let promises = [ promise1, promise2, promise3 ];\n\n  Promise.all(promises).then(function(array){\n    // The array here would be [ 1, 2, 3 ];\n  });\n  ```\n\n  If any of the `promises` given to `all` are rejected, the first promise\n  that is rejected will be given as an argument to the returned promises's\n  rejection handler. For example:\n\n  Example:\n\n  ```javascript\n  let promise1 = resolve(1);\n  let promise2 = reject(new Error(\"2\"));\n  let promise3 = reject(new Error(\"3\"));\n  let promises = [ promise1, promise2, promise3 ];\n\n  Promise.all(promises).then(function(array){\n    // Code here never runs because there are rejected promises!\n  }, function(error) {\n    // error.message === \"2\"\n  });\n  ```\n\n  @method all\n  @static\n  @param {Array} entries array of promises\n  @param {String} label optional string for labeling the promise.\n  Useful for tooling.\n  @return {Promise} promise that is fulfilled when all `promises` have been\n  fulfilled, or rejected if any of them become rejected.\n  @static\n*/\nfunction all(entries) {\n  return new Enumerator(this, entries).promise;\n}\n\n/**\n  `Promise.race` returns a new promise which is settled in the same way as the\n  first passed promise to settle.\n\n  Example:\n\n  ```javascript\n  let promise1 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 2');\n    }, 100);\n  });\n\n  Promise.race([promise1, promise2]).then(function(result){\n    // result === 'promise 2' because it was resolved before promise1\n    // was resolved.\n  });\n  ```\n\n  `Promise.race` is deterministic in that only the state of the first\n  settled promise matters. For example, even if other promises given to the\n  `promises` array argument are resolved, but the first settled promise has\n  become rejected before the other promises became fulfilled, the returned\n  promise will become rejected:\n\n  ```javascript\n  let promise1 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      reject(new Error('promise 2'));\n    }, 100);\n  });\n\n  Promise.race([promise1, promise2]).then(function(result){\n    // Code here never runs\n  }, function(reason){\n    // reason.message === 'promise 2' because promise 2 became rejected before\n    // promise 1 became fulfilled\n  });\n  ```\n\n  An example real-world use case is implementing timeouts:\n\n  ```javascript\n  Promise.race([ajax('foo.json'), timeout(5000)])\n  ```\n\n  @method race\n  @static\n  @param {Array} promises array of promises to observe\n  Useful for tooling.\n  @return {Promise} a promise which settles in the same way as the first passed\n  promise to settle.\n*/\nfunction race(entries) {\n  /*jshint validthis:true */\n  var Constructor = this;\n\n  if (!isArray(entries)) {\n    return new Constructor(function (_, reject) {\n      return reject(new TypeError('You must pass an array to race.'));\n    });\n  } else {\n    return new Constructor(function (resolve, reject) {\n      var length = entries.length;\n      for (var i = 0; i < length; i++) {\n        Constructor.resolve(entries[i]).then(resolve, reject);\n      }\n    });\n  }\n}\n\n/**\n  `Promise.reject` returns a promise rejected with the passed `reason`.\n  It is shorthand for the following:\n\n  ```javascript\n  let promise = new Promise(function(resolve, reject){\n    reject(new Error('WHOOPS'));\n  });\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  let promise = Promise.reject(new Error('WHOOPS'));\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  @method reject\n  @static\n  @param {Any} reason value that the returned promise will be rejected with.\n  Useful for tooling.\n  @return {Promise} a promise rejected with the given `reason`.\n*/\nfunction reject(reason) {\n  /*jshint validthis:true */\n  var Constructor = this;\n  var promise = new Constructor(noop);\n  _reject(promise, reason);\n  return promise;\n}\n\nfunction needsResolver() {\n  throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');\n}\n\nfunction needsNew() {\n  throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\");\n}\n\n/**\n  Promise objects represent the eventual result of an asynchronous operation. The\n  primary way of interacting with a promise is through its `then` method, which\n  registers callbacks to receive either a promise's eventual value or the reason\n  why the promise cannot be fulfilled.\n\n  Terminology\n  -----------\n\n  - `promise` is an object or function with a `then` method whose behavior conforms to this specification.\n  - `thenable` is an object or function that defines a `then` method.\n  - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).\n  - `exception` is a value that is thrown using the throw statement.\n  - `reason` is a value that indicates why a promise was rejected.\n  - `settled` the final resting state of a promise, fulfilled or rejected.\n\n  A promise can be in one of three states: pending, fulfilled, or rejected.\n\n  Promises that are fulfilled have a fulfillment value and are in the fulfilled\n  state.  Promises that are rejected have a rejection reason and are in the\n  rejected state.  A fulfillment value is never a thenable.\n\n  Promises can also be said to *resolve* a value.  If this value is also a\n  promise, then the original promise's settled state will match the value's\n  settled state.  So a promise that *resolves* a promise that rejects will\n  itself reject, and a promise that *resolves* a promise that fulfills will\n  itself fulfill.\n\n\n  Basic Usage:\n  ------------\n\n  ```js\n  let promise = new Promise(function(resolve, reject) {\n    // on success\n    resolve(value);\n\n    // on failure\n    reject(reason);\n  });\n\n  promise.then(function(value) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Advanced Usage:\n  ---------------\n\n  Promises shine when abstracting away asynchronous interactions such as\n  `XMLHttpRequest`s.\n\n  ```js\n  function getJSON(url) {\n    return new Promise(function(resolve, reject){\n      let xhr = new XMLHttpRequest();\n\n      xhr.open('GET', url);\n      xhr.onreadystatechange = handler;\n      xhr.responseType = 'json';\n      xhr.setRequestHeader('Accept', 'application/json');\n      xhr.send();\n\n      function handler() {\n        if (this.readyState === this.DONE) {\n          if (this.status === 200) {\n            resolve(this.response);\n          } else {\n            reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));\n          }\n        }\n      };\n    });\n  }\n\n  getJSON('/posts.json').then(function(json) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Unlike callbacks, promises are great composable primitives.\n\n  ```js\n  Promise.all([\n    getJSON('/posts'),\n    getJSON('/comments')\n  ]).then(function(values){\n    values[0] // => postsJSON\n    values[1] // => commentsJSON\n\n    return values;\n  });\n  ```\n\n  @class Promise\n  @param {function} resolver\n  Useful for tooling.\n  @constructor\n*/\nfunction Promise(resolver) {\n  this[PROMISE_ID] = nextId();\n  this._result = this._state = undefined;\n  this._subscribers = [];\n\n  if (noop !== resolver) {\n    typeof resolver !== 'function' && needsResolver();\n    this instanceof Promise ? initializePromise(this, resolver) : needsNew();\n  }\n}\n\nPromise.all = all;\nPromise.race = race;\nPromise.resolve = resolve;\nPromise.reject = reject;\nPromise._setScheduler = setScheduler;\nPromise._setAsap = setAsap;\nPromise._asap = asap;\n\nPromise.prototype = {\n  constructor: Promise,\n\n  /**\n    The primary way of interacting with a promise is through its `then` method,\n    which registers callbacks to receive either a promise's eventual value or the\n    reason why the promise cannot be fulfilled.\n  \n    ```js\n    findUser().then(function(user){\n      // user is available\n    }, function(reason){\n      // user is unavailable, and you are given the reason why\n    });\n    ```\n  \n    Chaining\n    --------\n  \n    The return value of `then` is itself a promise.  This second, 'downstream'\n    promise is resolved with the return value of the first promise's fulfillment\n    or rejection handler, or rejected if the handler throws an exception.\n  \n    ```js\n    findUser().then(function (user) {\n      return user.name;\n    }, function (reason) {\n      return 'default name';\n    }).then(function (userName) {\n      // If `findUser` fulfilled, `userName` will be the user's name, otherwise it\n      // will be `'default name'`\n    });\n  \n    findUser().then(function (user) {\n      throw new Error('Found user, but still unhappy');\n    }, function (reason) {\n      throw new Error('`findUser` rejected and we're unhappy');\n    }).then(function (value) {\n      // never reached\n    }, function (reason) {\n      // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.\n      // If `findUser` rejected, `reason` will be '`findUser` rejected and we're unhappy'.\n    });\n    ```\n    If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.\n  \n    ```js\n    findUser().then(function (user) {\n      throw new PedagogicalException('Upstream error');\n    }).then(function (value) {\n      // never reached\n    }).then(function (value) {\n      // never reached\n    }, function (reason) {\n      // The `PedgagocialException` is propagated all the way down to here\n    });\n    ```\n  \n    Assimilation\n    ------------\n  \n    Sometimes the value you want to propagate to a downstream promise can only be\n    retrieved asynchronously. This can be achieved by returning a promise in the\n    fulfillment or rejection handler. The downstream promise will then be pending\n    until the returned promise is settled. This is called *assimilation*.\n  \n    ```js\n    findUser().then(function (user) {\n      return findCommentsByAuthor(user);\n    }).then(function (comments) {\n      // The user's comments are now available\n    });\n    ```\n  \n    If the assimliated promise rejects, then the downstream promise will also reject.\n  \n    ```js\n    findUser().then(function (user) {\n      return findCommentsByAuthor(user);\n    }).then(function (comments) {\n      // If `findCommentsByAuthor` fulfills, we'll have the value here\n    }, function (reason) {\n      // If `findCommentsByAuthor` rejects, we'll have the reason here\n    });\n    ```\n  \n    Simple Example\n    --------------\n  \n    Synchronous Example\n  \n    ```javascript\n    let result;\n  \n    try {\n      result = findResult();\n      // success\n    } catch(reason) {\n      // failure\n    }\n    ```\n  \n    Errback Example\n  \n    ```js\n    findResult(function(result, err){\n      if (err) {\n        // failure\n      } else {\n        // success\n      }\n    });\n    ```\n  \n    Promise Example;\n  \n    ```javascript\n    findResult().then(function(result){\n      // success\n    }, function(reason){\n      // failure\n    });\n    ```\n  \n    Advanced Example\n    --------------\n  \n    Synchronous Example\n  \n    ```javascript\n    let author, books;\n  \n    try {\n      author = findAuthor();\n      books  = findBooksByAuthor(author);\n      // success\n    } catch(reason) {\n      // failure\n    }\n    ```\n  \n    Errback Example\n  \n    ```js\n  \n    function foundBooks(books) {\n  \n    }\n  \n    function failure(reason) {\n  \n    }\n  \n    findAuthor(function(author, err){\n      if (err) {\n        failure(err);\n        // failure\n      } else {\n        try {\n          findBoooksByAuthor(author, function(books, err) {\n            if (err) {\n              failure(err);\n            } else {\n              try {\n                foundBooks(books);\n              } catch(reason) {\n                failure(reason);\n              }\n            }\n          });\n        } catch(error) {\n          failure(err);\n        }\n        // success\n      }\n    });\n    ```\n  \n    Promise Example;\n  \n    ```javascript\n    findAuthor().\n      then(findBooksByAuthor).\n      then(function(books){\n        // found books\n    }).catch(function(reason){\n      // something went wrong\n    });\n    ```\n  \n    @method then\n    @param {Function} onFulfilled\n    @param {Function} onRejected\n    Useful for tooling.\n    @return {Promise}\n  */\n  then: then,\n\n  /**\n    `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same\n    as the catch block of a try/catch statement.\n  \n    ```js\n    function findAuthor(){\n      throw new Error('couldn't find that author');\n    }\n  \n    // synchronous\n    try {\n      findAuthor();\n    } catch(reason) {\n      // something went wrong\n    }\n  \n    // async with promises\n    findAuthor().catch(function(reason){\n      // something went wrong\n    });\n    ```\n  \n    @method catch\n    @param {Function} onRejection\n    Useful for tooling.\n    @return {Promise}\n  */\n  'catch': function _catch(onRejection) {\n    return this.then(null, onRejection);\n  }\n};\n\nfunction polyfill() {\n    var local = undefined;\n\n    if (typeof global !== 'undefined') {\n        local = global;\n    } else if (typeof self !== 'undefined') {\n        local = self;\n    } else {\n        try {\n            local = Function('return this')();\n        } catch (e) {\n            throw new Error('polyfill failed because global object is unavailable in this environment');\n        }\n    }\n\n    var P = local.Promise;\n\n    if (P) {\n        var promiseToString = null;\n        try {\n            promiseToString = Object.prototype.toString.call(P.resolve());\n        } catch (e) {\n            // silently ignored\n        }\n\n        if (promiseToString === '[object Promise]' && !P.cast) {\n            return;\n        }\n    }\n\n    local.Promise = Promise;\n}\n\n// Strange compat..\nPromise.polyfill = polyfill;\nPromise.Promise = Promise;\n\nreturn Promise;\n\n})));\n\n}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"_process\":2}],2:[function(require,module,exports){\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n},{}],3:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar EVENTS = exports.EVENTS = {\n  SIGNIN: 'SIGNIN',\n  SIGNOUT: 'SIGNOUT',\n  SIGNUP: 'SIGNUP'\n};\n\nvar URLS = exports.URLS = {\n  token: '/token',\n  signup: '/1/user/signup',\n  requestResetPassword: '/1/user/requestResetPassword',\n  resetPassword: '/1/user/resetPassword',\n  changePassword: '/1/user/changePassword',\n  objects: '/1/objects',\n  objectsAction: '/1/objects/action'\n};\n\nvar SOCIAL_PROVIDERS = exports.SOCIAL_PROVIDERS = {\n  github: { name: 'github', label: 'Github', url: 'www.github.com', css: { backgroundColor: '#444' }, id: 1 },\n  google: { name: 'google', label: 'Google', url: 'www.google.com', css: { backgroundColor: '#dd4b39' }, id: 2 },\n  facebook: { name: 'facebook', label: 'Facebook', url: 'www.facebook.com', css: { backgroundColor: '#3b5998' }, id: 3 },\n  twitter: { name: 'twitter', label: 'Twitter', url: 'www.twitter.com', css: { backgroundColor: '#55acee' }, id: 4 }\n};\n\n},{}],4:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  appName: null,\n  anonymousToken: null,\n  signUpToken: null,\n  apiUrl: 'https://api.backand.com',\n  storagePrefix: 'BACKAND_',\n  storageType: 'local',\n  manageRefreshToken: true,\n  runSigninAfterSignup: true,\n  runSocket: true,\n  socketUrl: 'https://socket.backand.com',\n  isMobile: false\n};\n\n},{}],5:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar filter = exports.filter = {\n  create: function create(fieldName, operator, value) {\n    return {\n      fieldName: fieldName,\n      operator: operator,\n      value: value\n    };\n  },\n  operators: {\n    numeric: { equals: \"equals\", notEquals: \"notEquals\", greaterThan: \"greaterThan\", greaterThanOrEqualsTo: \"greaterThanOrEqualsTo\", lessThan: \"lessThan\", lessThanOrEqualsTo: \"lessThanOrEqualsTo\", empty: \"empty\", notEmpty: \"notEmpty\" },\n    date: { equals: \"equals\", notEquals: \"notEquals\", greaterThan: \"greaterThan\", greaterThanOrEqualsTo: \"greaterThanOrEqualsTo\", lessThan: \"lessThan\", lessThanOrEqualsTo: \"lessThanOrEqualsTo\", empty: \"empty\", notEmpty: \"notEmpty\" },\n    text: { equals: \"equals\", notEquals: \"notEquals\", startsWith: \"startsWith\", endsWith: \"endsWith\", contains: \"contains\", notContains: \"notContains\", empty: \"empty\", notEmpty: \"notEmpty\" },\n    boolean: { equals: \"equals\" },\n    relation: { in: \"in\" }\n  }\n};\n\nvar sort = exports.sort = {\n  create: function create(fieldName, order) {\n    return {\n      fieldName: fieldName,\n      order: order\n    };\n  },\n  orders: { asc: \"asc\", desc: \"desc\" }\n};\n\nvar exclude = exports.exclude = {\n  options: { metadata: \"metadata\", totalRows: \"totalRows\", all: \"metadata&totalRows\" }\n};\n\n},{}],6:[function(require,module,exports){\n'use strict';\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /***********************************************\r\n                                                                                                                                                                                                                                                                   * backand JavaScript Library\r\n                                                                                                                                                                                                                                                                   * Authors: backand\r\n                                                                                                                                                                                                                                                                   * License: MIT (http://www.opensource.org/licenses/mit-license.php)\r\n                                                                                                                                                                                                                                                                   * Compiled At: 26/11/2016\r\n                                                                                                                                                                                                                                                                   ***********************************************/\n\n\nvar _defaults = require('./defaults');\n\nvar _defaults2 = _interopRequireDefault(_defaults);\n\nvar _constants = require('./constants');\n\nvar constants = _interopRequireWildcard(_constants);\n\nvar _helpers = require('./helpers');\n\nvar helpers = _interopRequireWildcard(_helpers);\n\nvar _storage = require('./utils/storage');\n\nvar _storage2 = _interopRequireDefault(_storage);\n\nvar _http = require('./utils/http');\n\nvar _http2 = _interopRequireDefault(_http);\n\nvar _socket = require('./utils/socket');\n\nvar _socket2 = _interopRequireDefault(_socket);\n\nvar _auth = require('./services/auth');\n\nvar auth = _interopRequireWildcard(_auth);\n\nvar _crud = require('./services/crud');\n\nvar crud = _interopRequireWildcard(_crud);\n\nvar _files = require('./services/files');\n\nvar files = _interopRequireWildcard(_files);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n(function () {\n  'use strict';\n\n  window['backand'] = {};\n  window['backand'].initiate = function () {\n    var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _extends(_defaults2.default, config);\n    if (!_defaults2.default.appName) throw new Error('appName is missing');\n    if (!_defaults2.default.anonymousToken) throw new Error('anonymousToken is missing');\n    if (!_defaults2.default.signUpToken) throw new Error('signUpToken is missing');\n\n    var storage = new _storage2.default(_defaults2.default.storageType, _defaults2.default.storagePrefix);\n    var http = (0, _http2.default)({\n      baseURL: _defaults2.default.apiUrl\n    });\n    var socket = null;\n\n    var scope = {\n      storage: storage,\n      http: http\n    };\n\n    if (_defaults2.default.runSocket) {\n      socket = new _socket2.default(_defaults2.default.socketUrl);\n      scope.socket = socket;\n    }\n\n    var service = _extends({}, auth, crud, files);\n    for (var fn in service) {\n      // console.log(fn);\n      service[fn] = service[fn].bind(scope);\n    }\n    service.__initiate__();\n\n    window['backand'] = {\n      service: service,\n      constants: constants,\n      helpers: helpers\n    };\n    if (_defaults2.default.runSocket) {\n      storage.get('user') && storage.get('user').token.Authorization && socket.connect(storage.get('user').token.Authorization, _defaults2.default.anonymousToken, _defaults2.default.appName);\n      window['backand'].socket = socket;\n    }\n  };\n})();\n\n},{\"./constants\":3,\"./defaults\":4,\"./helpers\":5,\"./services/auth\":7,\"./services/crud\":8,\"./services/files\":9,\"./utils/http\":10,\"./utils/socket\":11,\"./utils/storage\":12}],7:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.__initiate__ = __initiate__;\nexports.useAnonymousAuth = useAnonymousAuth;\nexports.signin = signin;\nexports.signup = signup;\nexports.socialSignin = socialSignin;\nexports.socialSignup = socialSignup;\nexports.requestResetPassword = requestResetPassword;\nexports.resetPassword = resetPassword;\nexports.changePassword = changePassword;\nexports.signout = signout;\nexports.getUserDetails = getUserDetails;\n\nvar _constants = require('./../constants');\n\nvar _defaults = require('./../defaults');\n\nvar _defaults2 = _interopRequireDefault(_defaults);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction __initiate__() {\n  this.storage.get('user') && __setAuth__.call(this, this.storage.get('user'));\n}\nfunction __generateFakeResponse__() {\n  var status = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  var statusText = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  var headers = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  var data = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '';\n\n  return {\n    status: status,\n    statusText: statusText,\n    headers: headers,\n    data: data\n  };\n}\nfunction __dispatchEvent__(name) {\n  var event = void 0;\n  if (document.createEvent) {\n    event = document.createEvent('Event');\n    event.initEvent(name, true, true);\n    event.eventName = name;\n    window.dispatchEvent(event);\n  } else {\n    event = document.createEventObject();\n    event.eventType = name;\n    event.eventName = name;\n    window.fireEvent('on' + event.eventType, event);\n  }\n}\nfunction __clearAuth__() {\n  this.storage.remove('user');\n  delete this.http.config.headers['AnonymousToken'];\n  delete this.http.config.headers['Authorization'];\n}\nfunction __setAuth__(data) {\n  this.storage.set('user', data);\n  this.http.config.headers = _extends(this.http.config.headers, this.storage.get('user').token);\n}\n// function _handleRefreshToken () {\n//   BKStorage.token.clear();\n//\n//   var user = BKStorage.user.get();\n//   var refreshToken;\n//   if (!user || !(refreshToken = BKStorage.user.get().refresh_token)) {\n//       return;\n//   }\n//\n//   var tokenData = {\n//       grant_type: 'password',\n//       refreshToken: refreshToken,\n//       username: username,\n//       appName: config.appName\n//   };\n//   return authenticate(tokenData);\n// };\nfunction useAnonymousAuth(scb) {\n  var _this = this;\n\n  return new Promise(function (resolve, reject) {\n    __clearAuth__.call(_this);\n    __setAuth__.call(_this, {\n      token: {\n        AnonymousToken: _defaults2.default.anonymousToken\n      },\n      details: {\n        username: 'anonymous',\n        name: 'anonymous user'\n      }\n    });\n    scb && scb(__generateFakeResponse__(200, 'OK', [], _this.storage.get('user')));\n    resolve(__generateFakeResponse__(200, 'OK', [], _this.storage.get('user')));\n  });\n}\nfunction signin(username, password, scb, ecb) {\n  var _this2 = this;\n\n  return new Promise(function (resolve, reject) {\n    __clearAuth__.call(_this2);\n    _this2.http({\n      url: _constants.URLS.token,\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      data: 'username=' + username + '&password=' + password + '&appName=' + _defaults2.default.appName + '&grant_type=password'\n    }).then(function (response) {\n      __setAuth__.call(_this2, {\n        token: {\n          Authorization: 'Bearer ' + response.data.access_token\n        },\n        details: response.data\n      });\n      __dispatchEvent__(_constants.EVENTS.SIGNIN);\n      if (_defaults2.default.runSocket) {\n        _this2.socket.connect(_this2.storage.get('user').token.Authorization, _defaults2.default.anonymousToken, _defaults2.default.appName);\n      }\n      scb && scb(response);\n      resolve(response);\n    }).catch(function (error) {\n      ecb && ecb(error);\n      reject(error);\n    });\n  });\n}\nfunction signup(email, password, confirmPassword, firstName, lastName, scb, ecb) {\n  var _this3 = this;\n\n  return new Promise(function (resolve, reject) {\n    __clearAuth__.call(_this3);\n    _this3.http({\n      url: _constants.URLS.signup,\n      method: 'POST',\n      headers: {\n        'SignUpToken': _defaults2.default.signUpToken\n      },\n      data: {\n        firstName: firstName,\n        lastName: lastName,\n        email: email,\n        password: password,\n        confirmPassword: confirmPassword\n      }\n    }, scb, ecb).then(function (response) {\n      __dispatchEvent__(_constants.EVENTS.SIGNUP);\n      if (_defaults2.default.runSigninAfterSignup) {\n        return __signinWithToken__.call(_this3, {\n          accessToken: response.data.access_token\n        });\n      } else {\n        scb && scb(response);\n        resolve(response);\n      }\n    }).then(function (response) {\n      scb && scb(response);\n      resolve(response);\n    }).catch(function (error) {\n      ecb && ecb(error);\n      reject(error);\n    });\n  });\n}\nfunction __getSocialUrl__(providerName, isSignup, isAutoSignUp) {\n  var provider = _constants.SOCIAL_PROVIDERS[providerName];\n  var action = isSignup ? 'up' : 'in';\n  var autoSignUpParam = !isSignup && isAutoSignUp ? \"&signupIfNotSignedIn=true\" : '';\n  return '/user/socialSign' + action + '?provider=' + provider.label + autoSignUpParam + '&response_type=token&client_id=self&redirect_uri=' + provider.url + '&state=';\n}\nfunction __checkSocialAuthWindowForData__(socialAuthWindow) {\n  var timer = setInterval(function () {\n    if (socialAuthWindow.closed) {\n      clearInterval(timer);\n    }\n    var locationCopy = _extends({}, socialAuthWindow.location);\n    var dataMatch = /\\?(data|error)=(.+)/.exec(locationCopy.href);\n    if (dataMatch && dataMatch[1] && dataMatch[2]) {\n      clearInterval(timer);\n      var data = dataMatch[1] === 'data' ? __generateFakeResponse__(200, 'OK', [], JSON.parse(decodeURIComponent(dataMatch[2].replace(/#.*/, '')))) : __generateFakeResponse__(0, '', [], JSON.parse(decodeURIComponent(dataMatch[2].replace(/#.*/, ''))));\n      socialAuthWindow.opener.postMessage(JSON.stringify(data), locationCopy.origin);\n    }\n  }, 333);\n}\nfunction __socialAuth__(provider, isSignUp, spec, email, scb, ecb) {\n  var _this4 = this;\n\n  return new Promise(function (resolve, reject) {\n    if (!_constants.SOCIAL_PROVIDERS[provider]) {\n      ecb && ecb(__generateFakeResponse__(0, '', [], 'Unknown Social Provider'));\n      reject(__generateFakeResponse__(0, '', [], 'Unknown Social Provider'));\n    }\n    var windowUrl = _defaults2.default.apiUrl + '/1/' + __getSocialUrl__(provider, isSignUp, true) + '&appname=' + _defaults2.default.appName + (email ? '&email=' + email : '') + '&returnAddress=';\n    var socialAuthWindow = window.open('', '', spec);\n    socialAuthWindow.location = windowUrl;\n    socialAuthWindow.focus();\n    window.addEventListener('message', function (e) {\n      var origin = e.origin || e.originalEvent.origin;\n      if (origin !== location.origin) {\n        ecb && ecb(_this4._generateFakeResponse(0, '', [], 'Unknown Origin Message'));\n        reject(_this4._generateFakeResponse(0, '', [], 'Unknown Origin Message'));\n      }\n      window.removeEventListener('message', null, false);\n      socialAuthWindow.close();\n      // setTimeout(socialAuthWindow = null, 1000);\n\n      var res = JSON.parse(e.data);\n      if (res.status != 200) {\n        ecb && ecb(res);\n        reject(res);\n      } else {\n        scb && scb(res);\n        resolve(res);\n      }\n    }, false);\n    __checkSocialAuthWindowForData__(socialAuthWindow);\n  });\n}\nfunction socialSignin(provider, scb, ecb) {\n  var _this5 = this;\n\n  var spec = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'left=1, top=1, width=600, height=600';\n\n  return new Promise(function (resolve, reject) {\n    __clearAuth__.call(_this5);\n    __socialAuth__(provider, false, spec, null, scb, ecb).then(function (response) {\n      __dispatchEvent__(_constants.EVENTS.SIGNUP);\n      return __signinWithToken__.call(_this5, {\n        accessToken: response.data.access_token\n      });\n    }).then(function (response) {\n      scb && scb(response);\n      resolve(response);\n    }).catch(function (error) {\n      ecb && ecb(error);\n      reject(error);\n    });\n  });\n};\nfunction socialSignup(provider, email, scb, ecb) {\n  var _this6 = this;\n\n  var spec = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 'left=1, top=1, width=600, height=600';\n\n  return new Promise(function (resolve, reject) {\n    __clearAuth__.call(_this6);\n    _socialAuth(provider, true, spec, email, scb, ecb).then(function (response) {\n      __dispatchEvent__(_constants.EVENTS.SIGNUP);\n      if (_defaults2.default.runSigninAfterSignup) {\n        return __signinWithToken__.call(_this6, {\n          accessToken: response.data.access_token\n        });\n      } else {\n        scb && scb(response);\n        resolve(response);\n      }\n    }).then(function (response) {\n      scb && scb(response);\n      resolve(response);\n    }).catch(function (error) {\n      ecb && ecb(error);\n      reject(error);\n    });\n  });\n}\nfunction __signinWithToken__(tokenData, scb, ecb) {\n  var _this7 = this;\n\n  return new Promise(function (resolve, reject) {\n    __clearAuth__.call(_this7);\n    var data = [];\n    for (var obj in tokenData) {\n      data.push(encodeURIComponent(obj) + '=' + encodeURIComponent(tokenData[obj]));\n    }\n    data = data.join(\"&\");\n\n    _this7.http({\n      url: _constants.URLS.token,\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      data: data + '&appName=' + _defaults2.default.appName + '&grant_type=password'\n    }).then(function (response) {\n      __setAuth__.call(_this7, {\n        token: {\n          Authorization: 'Bearer ' + response.data.access_token\n        },\n        details: response.data\n      });\n      __dispatchEvent__(_constants.EVENTS.SIGNIN);\n      if (_defaults2.default.runSocket) {\n        _this7.socket.connect(_this7.storage.get('user').token.Authorization, _defaults2.default.anonymousToken, _defaults2.default.appName);\n      }\n      scb && scb(response);\n      resolve(response);\n    }).catch(function (error) {\n      ecb && ecb(error);\n      reject(error);\n    });\n  });\n}\nfunction requestResetPassword(username, scb, ecb) {\n  return this.http({\n    url: _constants.URLS.requestResetPassword,\n    method: 'POST',\n    data: {\n      appName: _defaults2.default.appName,\n      username: username\n    }\n  }, scb, ecb);\n}\nfunction resetPassword(newPassword, resetToken, scb, ecb) {\n  return this.http({\n    url: _constants.URLS.resetPassword,\n    method: 'POST',\n    data: {\n      newPassword: newPassword,\n      resetToken: resetToken\n    }\n  }, scb, ecb);\n}\nfunction changePassword(oldPassword, newPassword, scb, ecb) {\n  return this.http({\n    url: _constants.URLS.changePassword,\n    method: 'POST',\n    data: {\n      oldPassword: oldPassword,\n      newPassword: newPassword\n    }\n  }, scb, ecb);\n}\nfunction signout(scb) {\n  __clearAuth__.call(this);\n  __dispatchEvent__(_constants.EVENTS.SIGNOUT);\n}\nfunction getUserDetails() {\n  return this.storage.get('user').details;\n}\n\n},{\"./../constants\":3,\"./../defaults\":4}],8:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getList = getList;\nexports.create = create;\nexports.getOne = getOne;\nexports.update = update;\nexports.remove = remove;\n\nvar _constants = require('./../constants');\n\nfunction __encodeParameters__(allowedParams, params) {\n  var uri = '?';\n  for (var param in params) {\n    if (allowedParams.indexOf(param) != -1) {\n      uri = uri.concat(param + '=' + encodeURI(JSON.stringify(params[param])));\n    }\n  }\n  return uri;\n}\nfunction getList(object, params, scb, ecb) {\n  var allowedParams = ['pageSize', 'pageNumber', 'filter', 'sort', 'search', 'exclude', 'deep', 'relatedObjects'];\n  return this.http({\n    url: _constants.URLS.objects + '/' + object + __encodeParameters__(allowedParams, params),\n    method: 'GET'\n  }, scb, ecb);\n}\nfunction create(object, data, params, scb, ecb) {\n  var allowedParams = ['returnObject', 'deep'];\n  return this.http({\n    url: _constants.URLS.objects + '/' + object + __encodeParameters__(allowedParams, params),\n    method: 'POST',\n    data: data\n  }, scb, ecb);\n}\nfunction getOne(object, id, params, scb, ecb) {\n  var allowedParams = ['deep', 'exclude', 'level'];\n  return this.http({\n    url: _constants.URLS.objects + '/' + object + '/' + id + __encodeParameters__(allowedParams, params),\n    method: 'GET'\n  }, scb, ecb);\n}\nfunction update(object, id, data, params, scb, ecb) {\n  var allowedParams = ['returnObject', 'deep'];\n  return this.http({\n    url: _constants.URLS.objects + '/' + object + '/' + id + __encodeParameters__(allowedParams, params),\n    method: 'PUT',\n    data: data\n  }, scb, ecb);\n}\nfunction remove(object, id, scb, ecb) {\n  return this.http({\n    url: _constants.URLS.objects + '/' + object + '/' + id,\n    method: 'DELETE'\n  }, scb, ecb);\n}\n\n},{\"./../constants\":3}],9:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.uploadFile = uploadFile;\nexports.deleteFile = deleteFile;\n\nvar _constants = require('./../constants');\n\nfunction uploadFile(objectName, fileActionName, filename, filedata, scb, ecb) {\n  return this.http({\n    url: _constants.URLS.objectsAction + '/' + objectName + '?name=' + fileActionName,\n    method: 'POST',\n    data: {\n      filename: filename,\n      filedata: filedata.substr(filedata.indexOf(',') + 1, filedata.length)\n    }\n  }, scb, ecb);\n}\nfunction deleteFile(objectName, fileActionName, filename, scb, ecb) {\n  return this.http({\n    url: _constants.URLS.objectsAction + '/' + objectName + '?name=' + fileActionName,\n    method: 'DELETE',\n    data: {\n      filename: filename\n    }\n  }, scb, ecb);\n}\n\n},{\"./../constants\":3}],10:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _es6Promise = require('es6-promise');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Http = function () {\n  function Http() {\n    var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, Http);\n\n    if (!window.XMLHttpRequest) throw new Error('XMLHttpRequest is not supported by the browser');\n\n    this.config = _extends({ url: '/', method: 'GET', headers: {} }, config);\n  }\n\n  _createClass(Http, [{\n    key: '_getHeaders',\n    value: function _getHeaders(headers) {\n      return headers.split('\\r\\n').filter(function (header) {\n        return header;\n      }).map(function (header) {\n        var jheader = {};\n        var parts = header.split(':');\n        jheader[parts[0]] = parts[1];\n        return jheader;\n      });\n    }\n  }, {\n    key: '_getData',\n    value: function _getData(type, data) {\n      if (!type) {\n        return data;\n      } else if (type.indexOf('json') === -1) {\n        return data;\n      } else {\n        return JSON.parse(data);\n      }\n    }\n  }, {\n    key: '_createResponse',\n    value: function _createResponse(req) {\n      return {\n        status: req.status,\n        statusText: req.statusText,\n        headers: this._getHeaders(req.getAllResponseHeaders()),\n        data: this._getData(req.getResponseHeader(\"Content-Type\"), req.responseText)\n      };\n    }\n  }, {\n    key: '_setHeaders',\n    value: function _setHeaders(req, headers) {\n      for (var header in headers) {\n        req.setRequestHeader(header, headers[header]);\n      }\n    }\n  }, {\n    key: '_setData',\n    value: function _setData(req, data) {\n      if (!data) {\n        req.send();\n      } else if ((typeof data === 'undefined' ? 'undefined' : _typeof(data)) != 'object') {\n        req.send(data);\n      } else {\n        req.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\n        req.send(JSON.stringify(data));\n      }\n    }\n  }, {\n    key: 'request',\n    value: function request(cfg, scb, ecb) {\n      var _this = this;\n\n      return new _es6Promise.Promise(function (resolve, reject) {\n        var req = new XMLHttpRequest();\n        var config = _extends({}, _this.config, cfg);\n\n        req.open(config.method, '' + (config.baseURL ? config.baseURL + '/' : '') + config.url, true);\n        req.onreadystatechange = function () {\n          if (req.readyState == XMLHttpRequest.DONE) {\n            if (req.status === 200) {\n              scb && scb(_this._createResponse(req));\n              resolve(_this._createResponse(req));\n            } else {\n              ecb && ecb(_this._createResponse(req));\n              reject(_this._createResponse(req));\n            }\n          }\n        };\n        _this._setHeaders(req, config.headers);\n        _this._setData(req, config.data);\n      });\n    }\n  }]);\n\n  return Http;\n}();\n\nfunction createInstance() {\n  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var context = new Http(config);\n  var instance = function instance() {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return Http.prototype.request.apply(context, args);\n  };\n  instance.config = context.config;\n  return instance;\n}\nexports.default = createInstance;\n\n// var context = new Http(config);\n// var instance = (...args) => httpClient.prototype.request.apply(context, args);\n// instance.config = context.config;\n// export default instance;\n\n},{\"es6-promise\":1}],11:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Socket = function () {\n  function Socket(url) {\n    _classCallCheck(this, Socket);\n\n    if (!window.io) console.warn('SocketIO is not included');\n    this.url = url;\n    this.socket = io.connect(this.url, { 'forceNew': true });\n  }\n\n  _createClass(Socket, [{\n    key: 'connect',\n    value: function connect(token, anonymousToken, appName) {\n      var _this = this;\n\n      console.info('trying to establish a socket connection to ' + appName + ' ...');\n      this.socket.emit(\"login\", token, anonymousToken, appName);\n\n      this.socket.on('authorized', function () {\n        console.info('socket connected');\n      });\n\n      this.socket.on('notAuthorized', function () {\n        setTimeout(_this.disconnect(), 1000);\n      });\n\n      this.socket.on('disconnect', function () {\n        console.info('socket disconnect');\n      });\n\n      this.socket.on('reconnecting', function () {\n        console.info('socket reconnecting');\n      });\n\n      this.socket.on('error', function (error) {\n        console.warn('error: ' + error);\n      });\n    }\n  }, {\n    key: 'on',\n    value: function on(eventName, callback) {\n      var _arguments = arguments,\n          _this2 = this;\n\n      this.socket.on(eventName, function () {\n        var args = [].concat(Array.prototype.slice.call(_arguments));\n        callback.apply(_this2.socket, args);\n      });\n    }\n  }, {\n    key: 'emit',\n    value: function emit(eventName, data, callback) {\n      var _arguments2 = arguments,\n          _this3 = this;\n\n      this.socket.emit(eventName, data, function () {\n        var args = [].concat(Array.prototype.slice.call(_arguments2));\n        callback.apply(_this3.socket, args);\n      });\n    }\n  }, {\n    key: 'disconnect',\n    value: function disconnect() {\n      if (this.socket) {\n        this.socket.close();\n      }\n    }\n  }]);\n\n  return Socket;\n}();\n\nexports.default = Socket;\n\n},{}],12:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Storage = function () {\n  function Storage(type) {\n    var prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n\n    _classCallCheck(this, Storage);\n\n    if (!window[type + 'Storage']) throw new Error(type + 'Storage is not supported by the browser');\n    this.prefix = prefix;\n    this.delimiter = '__________';\n    this.storage = window[type + 'Storage'];\n  }\n\n  _createClass(Storage, [{\n    key: 'get',\n    value: function get(key) {\n      var item = this.storage.getItem('' + this.prefix + key);\n      if (!item) {\n        return item;\n      } else {\n        var _item$split = item.split(this.delimiter),\n            _item$split2 = _slicedToArray(_item$split, 2),\n            type = _item$split2[0],\n            val = _item$split2[1];\n\n        if (type != 'JSON') {\n          return val;\n        } else {\n          return JSON.parse(val);\n        }\n      }\n    }\n  }, {\n    key: 'set',\n    value: function set(key, val) {\n      if ((typeof val === 'undefined' ? 'undefined' : _typeof(val)) != 'object') {\n        this.storage.setItem('' + this.prefix + key, 'STRING' + this.delimiter + val);\n      } else {\n        this.storage.setItem('' + this.prefix + key, 'JSON' + this.delimiter + JSON.stringify(val));\n      }\n    }\n  }, {\n    key: 'remove',\n    value: function remove(key) {\n      this.storage.removeItem('' + this.prefix + key);\n    }\n  }, {\n    key: 'clear',\n    value: function clear() {\n      for (var i = 0; i < this.storage.length; i++) {\n        if (this.storage.getItem(this.storage.key(i)).indexOf(this.prefix) != -1) this.remove(this.storage.key(i));\n      }\n    }\n  }]);\n\n  return Storage;\n}();\n\nexports.default = Storage;\n\n},{}]},{},[6])\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n"]}